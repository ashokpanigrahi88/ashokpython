from sqlalchemy import (Column, Integer, Sequence, DateTime,String,
                        Date, BigInteger, Numeric, ForeignKey, Text,
                        UniqueConstraint)
from sqlalchemy.orm import mapper, relationship
from sqlalchemy.sql import func
from sqlalchemy.ext.declarative import declarative_base
Base = declarative_base()

class AuditColumns:
    creation_date = Column(DateTime(timezone=True), server_default=func.now())
    last_update_date = Column(DateTime(timezone=True), onupdate=func.now())
    created_by = Column(Integer, default=-1)
    last_updated_by = Column(Integer, default=-1)
    delete_flag = Column(String(1), default='N')
    update_source = Column(String(30), default='API')
    bu_id = Column(Integer, default=1)
    record_status = Column(String(1), default='I')
    third_party_source = Column(String(30))
    third_party_source_ref = Column(String(30))


class AuditColumnsxBuId:
    creation_date = Column(DateTime(timezone=True), server_default=func.now())
    last_update_date = Column(DateTime(timezone=True), onupdate=func.now())
    created_by = Column(Integer, default=-1)
    last_updated_by = Column(Integer, default=-1)
    delete_flag = Column(String(1), default='N')
    update_source = Column(String(30), default='API')
    record_status = Column(String(1), default='I')
    third_party_source = Column(String(30))
    third_party_source_ref = Column(String(30))

class ApDbnoteHeaders(Base, AuditColumns):
    __tablename__ = 'ap_dbnote_headers'
    __table_args__ = {'extend_existing': True}
    adjust_stock  = Column(String(1) ,default='N'  , nullable=True )
    billto_location_id  = Column(BigInteger  , nullable=True )
    comments  = Column(String(2000)  , nullable=True )
    currency_code  = Column(String(10)  , nullable=True )
    dbnote_date  = Column(DateTime(timezone=True)  , nullable=True )
    dbnote_id  = Column(BigInteger, primary_key=True  , nullable=False )
    dbnote_number  = Column(String(30)  , nullable=True, unique=True)
    dbnote_reference  = Column(String(30)  , nullable=True )
    dbnote_settled  = Column(String(1)  , nullable=True )
    dbnote_settled_by  = Column(String(30)  , nullable=True )
    dbnote_settled_on  = Column(DateTime(timezone=True)  , nullable=True )
    dbnote_source_id  = Column(BigInteger  , nullable=True )
    dbnote_status  = Column(String(30)  , nullable=True )
    dbnote_status_by  = Column(String(30)  , nullable=True )
    dbnote_status_date  = Column(DateTime(timezone=True)  , nullable=True )
    delivery_date  = Column(DateTime(timezone=True)  , nullable=True )
    delivery_note_ref  = Column(String(30)  , nullable=True )
    discount_total  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    gross_total  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    net_total  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    po_header_id  = Column(BigInteger  , nullable=True )
    shipto_location_id  = Column(BigInteger  , nullable=True )
    sourced_from  = Column(String(30)  , nullable=True )
    source_object  = Column(String(30)  , nullable=True )
    source_type  = Column(String(30)  , nullable=True )
    sup_supplier_id  = Column(BigInteger  , nullable=True )
    transaction_type  = Column(String(30)  , nullable=True )
    vat_total  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    #c_apdbnotelines  = relationship("ApDbnoteLines")


class ApDbnoteLines(Base, AuditColumns):
    __tablename__ = 'ap_dbnote_lines'
    __table_args__ = {'extend_existing': True}
    adjust_stock  = Column(String(1) ,default='N'  , nullable=True )
    attribute1  = Column(String(2000)  , nullable=True )
    attribute2  = Column(String(2000)  , nullable=True )
    case_cp  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    case_size  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    dbnote_add_reduce  = Column(String(1)  , nullable=True )
    dbnote_id  = Column(BigInteger , ForeignKey('ap_dbnote_headers.dbnote_id')  , nullable=False )
    dbnote_line_desc  = Column(String(2000)  , nullable=True )
    dbnote_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    dbnote_reason  = Column(String(20)  , nullable=True )
    dbnote_status  = Column(String(30)  , nullable=True )
    dbnote_status_date  = Column(DateTime(timezone=True)  , nullable=True )
    detail_comments  = Column(String(100)  , nullable=True )
    discount_price  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    exchange_rate  = Column(Numeric(precision=12, scale=6) ,default=1  , nullable=True )
    gl_account_code  = Column(BigInteger  , nullable=True )
    invoiced_price  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    item_id  = Column(BigInteger  , nullable=True )
    item_name  = Column(String(100)  , nullable=True )
    line_type  = Column(String(30)  , nullable=True )
    location_id  = Column(BigInteger  , nullable=True )
    net_price  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    order_price  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    po_header_id  = Column(BigInteger  , nullable=True )
    po_line_id  = Column(BigInteger  , nullable=True )
    qty_dbnote_units  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_delivered_units  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    qty_instock  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_invoiced_units  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    qty_ordered_units  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    qty_received_units  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    receipt_price  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    sl_no  = Column(Integer  , nullable=True )
    source_ref_id1  = Column(String(30)  , nullable=True )
    source_ref_id2  = Column(String(30)  , nullable=True )
    sub_location_id  = Column(BigInteger  , nullable=True )
    sup_product_code  = Column(String(30)  , nullable=True )
    tax_code_id  = Column(BigInteger , ForeignKey('cmn_tax_codes.tax_code_id')  , nullable=True )
    tax_price  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    tax_rate  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    unit_cp  = Column(Numeric(precision=14, scale=2)  , nullable=True )


class ApInvoiceHeaders(Base, AuditColumns):
    __tablename__ = 'ap_invoice_headers'
    __table_args__ = {'extend_existing': True}
    approved_amount  = Column(BigInteger  , nullable=True )
    authorized_by  = Column(String(30)  , nullable=True )
    balance_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    batch_name  = Column(String(30)  , nullable=True )
    billto_location_id  = Column(BigInteger  , nullable=True )
    cancelled_amount  = Column(BigInteger  , nullable=True )
    cancelled_by  = Column(String(30)  , nullable=True )
    cancelled_date  = Column(DateTime(timezone=True)  , nullable=True )
    carriage_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    cpt_id  = Column(BigInteger  , nullable=True )
    dbnote_id  = Column(BigInteger  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    discount_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    exchange_rate  = Column(BigInteger  , nullable=True )
    file_name  = Column(String(400)  , nullable=True )
    gl_accounting_date  = Column(DateTime(timezone=True)  , nullable=True )
    gl_account_code  = Column(BigInteger  , nullable=True )
    gl_account_id  = Column(BigInteger , ForeignKey('gl_account_codes.gl_account_id')  , nullable=True )
    grn_date  = Column(DateTime(timezone=True)  , nullable=True )
    grn_id  = Column(BigInteger  , nullable=True )
    gross_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    gross_total_fc  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    invoice_currency_code  = Column(String(10)  , nullable=True )
    invoice_date  = Column(DateTime(timezone=True)  , nullable=True )
    invoice_id  = Column(BigInteger, primary_key=True  , nullable=False )
    invoice_number  = Column(String(30)  , nullable=False , unique=True )
    invoice_received_date  = Column(DateTime(timezone=True)  , nullable=True )
    invoice_status  = Column(String(30)  , nullable=True )
    invoice_status_date  = Column(DateTime(timezone=True)  , nullable=True )
    invoice_type  = Column(String(30)  , nullable=True )
    invoice_user_id  = Column(BigInteger  , nullable=True )
    net_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    net_total_fc  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    notes1  = Column(String(2000)  , nullable=True )
    notes2  = Column(String(2000)  , nullable=True )
    paid_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    payment_currency_code  = Column(String(10)  , nullable=True )
    pmnt_method_id  = Column(BigInteger  , nullable=True )
    po_header_id  = Column(BigInteger  , nullable=True )
    shipto_location_id  = Column(BigInteger  , nullable=True )
    sup_supplier_id  = Column(BigInteger  , nullable=False )
    trans_category  = Column(String(30)  , nullable=True )
    vat_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    voucher_num  = Column(String(50)  , nullable=True )
    #c_apinvoicelines  = relationship("ApInvoiceLines")
    #c_appaymentlines  = relationship("ApPaymentLines")


class ApInvoiceLines(Base, AuditColumns):
    __tablename__ = 'ap_invoice_lines'
    __table_args__ = {'extend_existing': True}
    cancelled_amount  = Column(BigInteger  , nullable=True )
    cancelled_by  = Column(BigInteger  , nullable=True )
    cancelled_date  = Column(DateTime(timezone=True)  , nullable=True )
    carriage_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    case_cp  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    case_size  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    dbnote_line_id  = Column(BigInteger  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    discount_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    exchange_rate  = Column(BigInteger  , nullable=True )
    gl_account_code  = Column(BigInteger  , nullable=True )
    gl_account_id  = Column(BigInteger , ForeignKey('gl_account_codes.gl_account_id')  , nullable=True )
    grn_id  = Column(BigInteger  , nullable=True )
    grn_line_id  = Column(BigInteger  , nullable=True )
    invoice_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    invoice_amount_exl_tax  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    invoice_amount_fc  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    invoice_id  = Column(BigInteger , ForeignKey('ap_invoice_headers.invoice_id')  , nullable=True )
    invoice_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    invoice_line_status  = Column(String(30)  , nullable=True )
    invoice_line_status_date  = Column(DateTime(timezone=True)  , nullable=True )
    invoice_line_type  = Column(String(30)  , nullable=True )
    item_id  = Column(BigInteger  , nullable=True )
    item_name  = Column(String(240)  , nullable=True )
    net_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    net_amount_fc  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    notes1  = Column(String(2000)  , nullable=True )
    po_header_id  = Column(BigInteger  , nullable=True )
    po_line_id  = Column(BigInteger  , nullable=True )
    qty_invoiced_units  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    sl_no  = Column(Integer  , nullable=True )
    tax_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    tax_code_id  = Column(BigInteger , ForeignKey('cmn_tax_codes.tax_code_id')  , nullable=True )
    tax_line_flag  = Column(String(1) ,default='N'  , nullable=True )
    tax_rate  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    total_line_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    total_line_amount_fc  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    unit  = Column(Integer  , nullable=True )
    unit_cp  = Column(Numeric(precision=12, scale=2)  , nullable=True )


class ApOptions(Base, AuditColumns):
    __tablename__ = 'ap_options'
    __table_args__ = {'extend_existing': True}
    add_outsorder_qty  = Column(String(1)  , nullable=True )
    ap_options_id  = Column(BigInteger, primary_key=True  , nullable=False )
    auto_batch_on_grn  = Column(String(1) ,default='N'  , nullable=True )
    auto_dbn_from_grn  = Column(String(1) ,default='Y'  , nullable=True )
    bank_account_id  = Column(BigInteger  , nullable=True )
    batch_format  = Column(String(30)  , nullable=True )
    billto_location_id  = Column(BigInteger  , nullable=True )
    calculate_suggested_order  = Column(String(1)  , nullable=True )
    company_id  = Column(BigInteger  , nullable=True )
    cost_price_formula  = Column(String(20)  , nullable=True )
    cpt_id  = Column(BigInteger  , nullable=True )
    follow_up_po  = Column(String(1)  , nullable=True )
    goods_in_qty_to_zero  = Column(String(1)  , nullable=True )
    grn_approved_sub_location  = Column(String(100)  , nullable=True )
    grn_synchronised_on  = Column(DateTime(timezone=True)  , nullable=True )
    grn_tolerance_percentage  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    grn_tolerance_type  = Column(String(20) ,default='QUANTITY'  , nullable=True )
    grn_unapproved_sub_location  = Column(String(100)  , nullable=True )
    invoice_image_path  = Column(String(200)  , nullable=True )
    invoice_matching_option  = Column(String(10)  , nullable=True )
    items_receipt_type  = Column(String(20)  , nullable=True )
    location_id  = Column(BigInteger  , nullable=True )
    option_type  = Column(String(30)  , nullable=True )
    period_header_id  = Column(BigInteger  , nullable=True )
    pmnt_method_id  = Column(BigInteger  , nullable=True )
    po_synchronised_on  = Column(DateTime(timezone=True)  , nullable=True )
    printer_copies  = Column(Integer  , nullable=True )
    printer_id  = Column(BigInteger  , nullable=True )
    print_note_criteria  = Column(String(30)  , nullable=True )
    print_output_path  = Column(String(240)  , nullable=True )
    print_split_case  = Column(String(1) ,default='N'  , nullable=True )
    print_supplier_note1  = Column(String(1)  , nullable=True )
    print_supplier_note2  = Column(String(1)  , nullable=True )
    rejection_sub_location_name  = Column(String(100)  , nullable=True )
    shipto_location_id  = Column(BigInteger  , nullable=True )
    suggested_formula_text  = Column(String(1000)  , nullable=True )
    suggested_qty_formula  = Column(String(100)  , nullable=True )
    supplier_id  = Column(BigInteger  , nullable=True )
    supplier_numbering  = Column(String(30) ,default='MANUAL'  , nullable=True )
    what_price_to_grn  = Column(String(30)  , nullable=True )
    what_price_to_po  = Column(String(30)  , nullable=True )


class ApPaymentHeaders(Base, AuditColumns):
    __tablename__ = 'ap_payment_headers'
    __table_args__ = {'extend_existing': True}
    address  = Column(String(400)  , nullable=True )
    authorisation_number  = Column(String(30)  , nullable=True )
    bank_account_id  = Column(BigInteger  , nullable=True )
    bank_currency_code  = Column(String(10)  , nullable=True )
    bank_id  = Column(BigInteger  , nullable=True )
    batch_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    batch_name  = Column(String(30)  , nullable=True )
    card_number  = Column(String(30)  , nullable=True , unique=True)
    card_type  = Column(String(30)  , nullable=True )
    city  = Column(String(30)  , nullable=True )
    contact_details  = Column(String(240)  , nullable=True )
    country_code  = Column(String(10)  , nullable=True )
    county  = Column(String(30)  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    exchange_rate  = Column(Numeric(precision=12, scale=6)  , nullable=True )
    expiry_date  = Column(DateTime(timezone=True)  , nullable=True )
    gl_accounting_date  = Column(DateTime(timezone=True)  , nullable=True )
    gl_account_code  = Column(BigInteger  , nullable=True )
    issue_number  = Column(String(30)  , nullable=True )
    name_on_card  = Column(String(100)  , nullable=True )
    notes1  = Column(String(2000)  , nullable=True )
    notes2  = Column(String(2000)  , nullable=True )
    paid_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    payment_currency_code  = Column(String(10)  , nullable=True )
    payment_date  = Column(DateTime(timezone=True)  , nullable=True )
    payment_header_id  = Column(BigInteger, primary_key=True  , nullable=False )
    payment_number  = Column(String(30)  , nullable=True , unique=True)
    payment_status  = Column(String(30)  , nullable=True )
    payment_status_date  = Column(DateTime(timezone=True)  , nullable=True )
    payment_type  = Column(String(30)  , nullable=True )
    payment_user_id  = Column(BigInteger  , nullable=True )
    pmnt_method_id  = Column(BigInteger  , nullable=True )
    post_code  = Column(String(30)  , nullable=True )
    security_code  = Column(String(10)  , nullable=True )
    trans_category  = Column(String(30)  , nullable=True )
    valid_from  = Column(DateTime(timezone=True)  , nullable=True )
    #c_appaymentlines  = relationship("ApPaymentLines")


class ApPaymentLines(Base, AuditColumns):
    __tablename__ = 'ap_payment_lines'
    __table_args__ = {'extend_existing': True}
    cancelled_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    cancelled_by  = Column(BigInteger  , nullable=True )
    cancelled_date  = Column(DateTime(timezone=True)  , nullable=True )
    cheque_number  = Column(String(30)  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    discount_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    exchange_rate  = Column(Numeric(precision=12, scale=6)  , nullable=True )
    gl_account_code  = Column(BigInteger  , nullable=True )
    invoice_amount_base  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    invoice_amount_paidcurr  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    invoice_id  = Column(BigInteger , ForeignKey('ap_invoice_headers.invoice_id')  , nullable=True )
    notes  = Column(String(2000)  , nullable=True )
    payment_amount  = Column(Numeric(precision=12, scale=2)  , nullable=False )
    payment_header_id  = Column(BigInteger , ForeignKey('ap_payment_headers.payment_header_id')  , nullable=True )
    payment_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    payment_line_status  = Column(String(30)  , nullable=False )
    payment_line_status_date  = Column(DateTime(timezone=True)  , nullable=False )
    payment_line_type  = Column(String(30)  , nullable=True )
    payment_trans_id  = Column(BigInteger , ForeignKey('cmn_payment_trans.payment_trans_id')  , nullable=True )
    pmnt_method_id  = Column(BigInteger  , nullable=True )
    pyment_line_type  = Column(String(30)  , nullable=False )
    sl_no  = Column(Integer  , nullable=False )
    sup_supplier_id  = Column(BigInteger , ForeignKey('ap_suppliers.supplier_id')  , nullable=False )


class ApSuppliers(Base, AuditColumns):
    __tablename__ = 'ap_suppliers'
    __table_args__ = {'extend_existing': True}
    account_number  = Column(String(30)  , nullable=True , unique=True)
    address_line1  = Column(String(255)  , nullable=True )
    address_line2  = Column(String(50)  , nullable=True )
    address_line3  = Column(String(50)  , nullable=True )
    asp_sup_profile_id  = Column(BigInteger , ForeignKey('ap_supplier_profiles.sup_profile_id')  , nullable=True )
    attribute1  = Column(String(1000)  , nullable=True )
    attribute2  = Column(String(1000)  , nullable=True )
    back_order_type  = Column(String(30) ,default='UNKNOWN'  , nullable=True )
    balance  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    city  = Column(String(40)  , nullable=True )
    cmc_pc_id  = Column(BigInteger , ForeignKey('cmn_containers.pc_id')  , nullable=True )
    contact_name  = Column(String(2000)  , nullable=True )
    contact_name2  = Column(String(2000)  , nullable=True )
    country_code  = Column(String(10)  , nullable=True )
    county  = Column(String(40)  , nullable=True )
    cpt_id  = Column(BigInteger  , nullable=True )
    ctc_tax_code_id  = Column(BigInteger , ForeignKey('cmn_tax_codes.tax_code_id')  , nullable=True )
    currency_code  = Column(String(10)  , nullable=True )
    customer_id  = Column(BigInteger , ForeignKey('ar_customers.customer_id')  , nullable=True )
    email  = Column(String(254)  , nullable=True )
    fax  = Column(String(20)  , nullable=True )
    gac_gl_account_id  = Column(BigInteger  , nullable=True )
    hold_reason  = Column(String(1000)  , nullable=True )
    invoiced_amount  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    item_prefix  = Column(String(10)  , nullable=True )
    last_ordered_date  = Column(DateTime(timezone=True)  , nullable=True )
    lead_time  = Column(Integer ,default=0  , nullable=True )
    location_id  = Column(BigInteger  , nullable=True )
    min_order_amount  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    mkuptemp_id  = Column(BigInteger  , nullable=True )
    mobile  = Column(String(20)  , nullable=True )
    order_cycle  = Column(Integer ,default=0  , nullable=True )
    order_cycle_type  = Column(String(20)  , nullable=True )
    order_qty_type  = Column(String(30) ,default='CASEQTY'  , nullable=True )
    orig_system_ref  = Column(String(240)  , nullable=True )
    orig_system_ref_hdr  = Column(String(30)  , nullable=True )
    paid_amount  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    phone1  = Column(String(20)  , nullable=True )
    phone2  = Column(String(20)  , nullable=True )
    pmnt_method_id  = Column(BigInteger  , nullable=True )
    post_code  = Column(String(30)  , nullable=True )
    po_allowed  = Column(String(1) ,default='Y'  , nullable=True )
    po_condition  = Column(String(30)  , nullable=True )
    po_preference  = Column(String(30)  , nullable=True )
    primary_supplier_id  = Column(BigInteger  , nullable=True )
    safety_net_days  = Column(Integer  , nullable=True )
    short_name  = Column(String(30)  , nullable=True )
    supplier_category_code  = Column(String(30)  , nullable=True )
    supplier_hold  = Column(String(1)  , nullable=True )
    supplier_id  = Column(BigInteger, primary_key=True  , nullable=False )
    supplier_name  = Column(String(240)  , nullable=True )
    supplier_number  = Column(String(20)  , nullable=True , unique=True)
    sup_vatregno  = Column(String(30)  , nullable=True )
    www  = Column(String(240)  , nullable=True )
    #c_appaymentlines  = relationship("ApPaymentLines")
    #c_apsupsumsnap  = relationship("ApSupsumSnap")
    #c_arcustomers  = relationship("ArCustomers")
    #c_cmnstylepatterns  = relationship("CmnStylePatterns")
    #c_grnorderpadheaders  = relationship("GrnOrderpadHeaders")
    #c_invitempohistories  = relationship("InvItemPoHistories")
    #c_poorderpadheaders  = relationship("PoOrderpadHeaders")


class ApSupplierPriceLists(Base, AuditColumns):
    __tablename__ = 'ap_supplier_price_lists'
    __table_args__ = {'extend_existing': True}
    alternate_case_cp  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    alternate_unit_cp  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    case_cp  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    case_unit  = Column(Integer  , nullable=True )
    item_id  = Column(BigInteger  , nullable=True )
    preference_code  = Column(Integer  , nullable=True )
    price_list_id  = Column(BigInteger, primary_key=True  , nullable=False )
    reorder_qty  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    supplier_id  = Column(BigInteger  , nullable=True )
    supplier_product_code  = Column(String(30)  , nullable=True )
    supplier_product_desc  = Column(String(240)  , nullable=True )
    unit_cp  = Column(Numeric(precision=14, scale=2)  , nullable=True )


class ApSupplierProfiles(Base, AuditColumns):
    __tablename__ = 'ap_supplier_profiles'
    __table_args__ = {'extend_existing': True}
    end_date  = Column(DateTime(timezone=True)  , nullable=True )
    sup_profile_id  = Column(BigInteger, primary_key=True  , nullable=False )
    sup_profile_name  = Column(String(25)  , nullable=True )
    #c_apsuppliers  = relationship("ApSuppliers")


class ApSupsumSnap(Base, AuditColumns):
    __tablename__ = 'ap_supsum_snap'
    __table_args__ = {'extend_existing': True}
    inv_apr  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_aug  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_dec  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_feb  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_jan  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_jul  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_jun  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_lastmonth  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_lasttrandate  = Column(DateTime(timezone=True)  , nullable=True )
    inv_lastyear  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_mar  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_may  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_nov  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_oct  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_sep  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_thisweek  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_total  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_week1  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_week2  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_week3  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_week4  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_week5  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_week6  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_year2  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_year3  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_year4  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_ytd  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    location_id  = Column(BigInteger , ForeignKey('inv_locations.location_id')  , nullable=True )
    pmnt_apr  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_aug  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_dec  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_feb  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_jan  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_jul  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_jun  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_lastmonth  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_lasttrandate  = Column(DateTime(timezone=True)  , nullable=True )
    pmnt_lastyear  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_mar  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_may  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_nov  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_oct  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_sep  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_thisweek  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_total  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_week1  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_week2  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_week3  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_week4  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_week5  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_week6  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_year2  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_year3  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_year4  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_ytd  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    snapshot_date  = Column(DateTime(timezone=True)  , nullable=True )
    snapshot_id  = Column(BigInteger, primary_key=True  , nullable=False )
    sub_location_id  = Column(BigInteger , ForeignKey('inv_sub_locations.sub_location_id')  , nullable=True )
    supplier_id  = Column(BigInteger , ForeignKey('ap_suppliers.supplier_id')  , nullable=True )


class ArCustomers(Base, AuditColumns):
    __tablename__ = 'ar_customers'
    __table_args__ = {'extend_existing': True}
    account_allowed  = Column(String(1) ,default='N'  , nullable=True )
    attribute1  = Column(String(1000)  , nullable=True )
    attribute2  = Column(String(1000)  , nullable=True )
    backorder_header_id  = Column(BigInteger  , nullable=True )
    balance  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    billto_address_line1  = Column(String(255)  , nullable=True )
    billto_address_line2  = Column(String(50)  , nullable=True )
    billto_address_line3  = Column(String(50)  , nullable=True )
    billto_city  = Column(String(40)  , nullable=True )
    billto_country_code  = Column(String(10)  , nullable=True )
    billto_county  = Column(String(40)  , nullable=True )
    billto_post_code  = Column(String(30)  , nullable=True )
    consolidate_items  = Column(String(1) ,default='Y'  , nullable=True )
    contact_forename  = Column(String(50)  , nullable=True )
    contact_full_name  = Column(String(2000)  , nullable=True )
    contact_surname  = Column(String(50)  , nullable=True )
    cpt_cpt_id  = Column(BigInteger , ForeignKey('cmn_payment_terms.cpt_id')  , nullable=True )
    ctc_tax_code_id  = Column(BigInteger , ForeignKey('cmn_tax_codes.tax_code_id')  , nullable=True )
    ctp_cust_profile_id  = Column(BigInteger , ForeignKey('ar_customer_profiles.cust_profile_id')  , nullable=True )
    currency_code  = Column(String(10)  , nullable=True )
    customer_category  = Column(String(30)  , nullable=True )
    customer_class_code  = Column(String(30)  , nullable=True )
    customer_hold  = Column(String(1)  , nullable=True )
    customer_id  = Column(BigInteger, primary_key=True  , nullable=False )
    customer_markupdown  = Column(Numeric(precision=6, scale=3)  , nullable=True )
    customer_name  = Column(String(2000)  , nullable=True )
    customer_number  = Column(String(20)  , nullable=True, unique=True )
    customer_pricename  = Column(String(30)  , nullable=True )
    customer_type_code  = Column(String(30)  , nullable=True )
    cust_credit_limit  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    cust_password  = Column(String(240)  , nullable=True )
    cust_title  = Column(String(20)  , nullable=True )
    cust_vatregno  = Column(String(30)  , nullable=True )
    date_format  = Column(String(100)  , nullable=True )
    default_upload_status  = Column(String(30)  , nullable=True )
    email  = Column(String(100)  , nullable=True )
    eori_number  = Column(String(40)  , nullable=True , unique=True)
    export_column_list  = Column(String(4000)  , nullable=True )
    export_customer  = Column(String(1)  , nullable=True )
    export_footer  = Column(String(4000)  , nullable=True )
    export_header  = Column(String(4000)  , nullable=True )
    export_header_list  = Column(String(4000)  , nullable=True )
    fax  = Column(String(20)  , nullable=True )
    filter_criteria  = Column(String(4000)  , nullable=True )
    freight_header_id  = Column(BigInteger  , nullable=True )
    freight_line_id  = Column(BigInteger  , nullable=True )
    ftp_contact  = Column(String(100)  , nullable=True )
    ftp_password  = Column(String(30)  , nullable=True )
    ftp_port  = Column(BigInteger  , nullable=True )
    ftp_server  = Column(String(240)  , nullable=True )
    ftp_service_provider  = Column(String(240)  , nullable=True )
    ftp_user_name  = Column(String(100)  , nullable=True )
    gl_account_id  = Column(BigInteger  , nullable=True )
    hold_reason  = Column(String(105)  , nullable=True )
    host_image_path1  = Column(String(400)  , nullable=True )
    host_image_path2  = Column(String(400)  , nullable=True )
    invoiced_amount  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    ipt_price_type_id  = Column(BigInteger  , nullable=True )
    item_batch_hint  = Column(String(30)  , nullable=True )
    item_batch_id  = Column(BigInteger  , nullable=True )
    item_pop_method  = Column(String(30)  , nullable=True )
    job_id  = Column(BigInteger  , nullable=True )
    language_code  = Column(String(10) , ForeignKey('cmn_languages.language_code')  , nullable=True )
    location_id  = Column(BigInteger  , nullable=True )
    login_name  = Column(String(240)  , nullable=True )
    max_value  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    min_deposit_amount  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    min_item_su_type  = Column(String(30)  , nullable=True )
    min_item_su_value  = Column(BigInteger  , nullable=True )
    min_value  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    mobile  = Column(String(20)  , nullable=True )
    orig_system_ref  = Column(String(240)  , nullable=True )
    orig_system_ref_hdr  = Column(String(30)  , nullable=True )
    paid_amount  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    phone1  = Column(String(20)  , nullable=True )
    phone2  = Column(String(20)  , nullable=True )
    picturename  = Column(String(240)  , nullable=True )
    picturetype  = Column(String(30) ,default='.jpg'  , nullable=True )
    pmnt_method_id  = Column(BigInteger  , nullable=True )
    price_import_hint  = Column(String(30) ,default='FROMFILE'  , nullable=True )
    price_invoice_hint  = Column(String(30)  , nullable=True )
    primary_customer_id  = Column(BigInteger  , nullable=True )
    print_customer_name  = Column(String(1) ,default='N'  , nullable=True )
    print_price_type_id  = Column(BigInteger  , nullable=True )
    reserve_item  = Column(String(1)  , nullable=True )
    rrp_percentage  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    shipto_address_line1  = Column(String(255)  , nullable=True )
    shipto_address_line2  = Column(String(50)  , nullable=True )
    shipto_address_line3  = Column(String(50)  , nullable=True )
    shipto_address_type  = Column(String(30)  , nullable=True )
    shipto_city  = Column(String(40)  , nullable=True )
    shipto_contact_name  = Column(String(250)  , nullable=True )
    shipto_country_code  = Column(String(10)  , nullable=True )
    shipto_county  = Column(String(40)  , nullable=True )
    shipto_email  = Column(String(250)  , nullable=True )
    shipto_post_code  = Column(String(30)  , nullable=True )
    supplier_id  = Column(BigInteger , ForeignKey('ap_suppliers.supplier_id')  , nullable=True )
    take_deposit  = Column(String(1)  , nullable=True )
    upload_instock_items  = Column(String(1) ,default='Y'  , nullable=True )
    upload_items  = Column(String(1) ,default='N'  , nullable=True )
    www  = Column(String(240)  , nullable=True )
    www_customer_category  = Column(String(30)  , nullable=True )
    www_end_date  = Column(DateTime(timezone=True)  , nullable=True )
    www_markupdown  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    www_min_order_freeship  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    www_min_order_value  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    www_price_break_display  = Column(String(2000)  , nullable=True )
    www_price_incshipping  = Column(String(1) ,default='N'  , nullable=True )
    www_price_type_id  = Column(BigInteger  , nullable=True )
    www_shipping_hint  = Column(String(30) ,default='BYORDER'  , nullable=True )
    www_start_date  = Column(DateTime(timezone=True)  , nullable=True )
    www_subscription_preference  = Column(String(30)  , nullable=True )
    www_sub_source_id  = Column(BigInteger  , nullable=True )
    #c_apsuppliers  = relationship("ApSuppliers")
    #c_arcustomerpricelists  = relationship("ArCustomerPricelists")
    #c_arcustsplitlines  = relationship("ArCustsplitLines")
    #c_arcustsumsnap  = relationship("ArCustsumSnap")
    #c_arcustbarcodeuploads  = relationship("ArCustBarcodeUploads")
    #c_arcustitemexlcategories  = relationship("ArCustItemExlcategories")
    #c_arcustitemoffers  = relationship("ArCustItemOffers")
    #c_arcustitemuploads  = relationship("ArCustItemUploads")
    #c_arcustpaymentmethods  = relationship("ArCustPaymentMethods")
    #c_arcuststorecardses  = relationship("ArCustStoreCardses")
    #c_ardeliveryheaders  = relationship("ArDeliveryHeaders")
    #c_arinvoiceheaders  = relationship("ArInvoiceHeaders")
    #c_arorderpadheaders  = relationship("ArOrderpadHeaders")
    #c_arpaymentheaders  = relationship("ArPaymentHeaders")
    #c_arsalesorderheaders  = relationship("ArSalesorderHeaders")
    #c_grnorderpadheaders  = relationship("GrnOrderpadHeaders")
    #c_poorderpadheaders  = relationship("PoOrderpadHeaders")


class ArCustomerImport(Base, AuditColumns):
    __tablename__ = 'ar_customer_import'
    __table_args__ = {'extend_existing': True}
    account_customer  = Column(String(1)  , nullable=True )
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    batch_id  = Column(BigInteger , ForeignKey('cmn_import_batch.batch_id')  , nullable=False )
    billto_address  = Column(String(240)  , nullable=True )
    billto_city  = Column(String(40)  , nullable=True )
    billto_country  = Column(String(20)  , nullable=True )
    billto_county  = Column(String(50)  , nullable=True )
    billto_post_code  = Column(String(15)  , nullable=True )
    contact_first_name  = Column(String(40)  , nullable=True )
    contact_last_name  = Column(String(40)  , nullable=True )
    contract_last_name  = Column(String(40)  , nullable=True )
    credit_limit  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    customer_id  = Column(BigInteger  , nullable=True )
    customer_markup_down  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    customer_name  = Column(String(140)  , nullable=True )
    customer_number  = Column(String(30)  , nullable=True )
    customer_on_hold  = Column(String(1)  , nullable=True )
    customer_price_level  = Column(BigInteger  , nullable=True )
    customer_type  = Column(String(30)  , nullable=True )
    email  = Column(String(240)  , nullable=True )
    fax  = Column(String(30)  , nullable=True )
    hold_reason  = Column(String(100)  , nullable=True )
    import_date  = Column(DateTime(timezone=True)  , nullable=True )
    import_hint  = Column(String(30) ,default='DEFAULT'  , nullable=True )
    import_id  = Column(BigInteger, primary_key=True  , nullable=False )
    import_status  = Column(String(30)  , nullable=True )
    import_template_name  = Column(String(100)  , nullable=True )
    line_number  = Column(BigInteger  , nullable=True )
    location_id  = Column(BigInteger  , nullable=True )
    mobile  = Column(String(30)  , nullable=True )
    phase_code  = Column(String(30)  , nullable=True )
    phone1  = Column(String(30)  , nullable=True )
    phone2  = Column(String(30)  , nullable=True )
    shipto_address  = Column(String(240)  , nullable=True )
    shipto_city  = Column(String(40)  , nullable=True )
    shipto_country  = Column(String(20)  , nullable=True )
    shipto_county  = Column(String(50)  , nullable=True )
    shipto_post_code  = Column(String(15)  , nullable=True )
    system_status_code  = Column(String(30)  , nullable=True )
    system_status_text  = Column(String(2000)  , nullable=True )
    title  = Column(String(10)  , nullable=True )
    user_name  = Column(String(30)  , nullable=True )
    user_password  = Column(String(100)  , nullable=True )
    user_status  = Column(String(30)  , nullable=True )
    user_status_text  = Column(String(1000)  , nullable=True )
    vat_registration_no  = Column(String(40)  , nullable=True )


class ArCustomerPricelists(Base, AuditColumns):
    __tablename__ = 'ar_customer_pricelists'
    __table_args__ = {'extend_existing': True}
    attribute1  = Column(String(2000)  , nullable=True )
    attribute2  = Column(String(2000)  , nullable=True )
    customer_id  = Column(BigInteger , ForeignKey('ar_customers.customer_id')  , nullable=True )
    customer_pricelist_id  = Column(BigInteger, primary_key=True  , nullable=False )
    date_from  = Column(DateTime(timezone=True)  , nullable=True )
    date_to  = Column(DateTime(timezone=True)  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    pricelist_header_id  = Column(BigInteger , ForeignKey('pr_pricelist_headers.pricelist_header_id')  , nullable=False )
    sl_no  = Column(BigInteger  , nullable=True )


class ArCustomerPriceLists(Base, AuditColumns):
    __tablename__ = 'ar_customer_price_lists'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1)  , nullable=True )
    customer_id  = Column(BigInteger  , nullable=True )
    end_date_active  = Column(DateTime(timezone=True)  , nullable=True )
    item_id  = Column(BigInteger  , nullable=True )
    min_qty  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    min_qty_source  = Column(String(30)  , nullable=True )
    overhead_price  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    price  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    price_list_id  = Column(BigInteger, primary_key=True  , nullable=False )
    price_type  = Column(String(10)  , nullable=True )
    price_type_id  = Column(BigInteger  , nullable=True )
    start_date_active  = Column(DateTime(timezone=True)  , nullable=True )


class ArCustomerProfiles(Base, AuditColumns):
    __tablename__ = 'ar_customer_profiles'
    __table_args__ = {'extend_existing': True}
    account_allowed  = Column(String(1) ,default='Y'  , nullable=True )
    consolidate_items  = Column(String(1) ,default='Y'  , nullable=True )
    cpt_cpt_id  = Column(BigInteger , ForeignKey('cmn_payment_terms.cpt_id')  , nullable=True )
    currency_code  = Column(String(10)  , nullable=True )
    customer_category  = Column(String(30)  , nullable=True )
    customer_class_code  = Column(String(30)  , nullable=True )
    customer_markupdown  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    customer_type_code  = Column(String(30)  , nullable=True )
    cust_profile_id  = Column(BigInteger, primary_key=True  , nullable=False )
    cust_profile_name  = Column(String(25)  , nullable=True )
    default_profile  = Column(String(1) ,default='N'  , nullable=True )
    end_date  = Column(DateTime(timezone=True)  , nullable=True )
    export_customer  = Column(String(1) ,default='Y'  , nullable=True )
    gl_account_id  = Column(BigInteger  , nullable=True )
    item_pop_method  = Column(String(30)  , nullable=True )
    max_value  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    min_deposit_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    min_item_su_type  = Column(String(30)  , nullable=True )
    min_item_su_value  = Column(BigInteger  , nullable=True )
    min_value  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    price_type_id  = Column(BigInteger  , nullable=True )
    print_customer_name  = Column(String(1) ,default='Y'  , nullable=True )
    reserve_item  = Column(String(1) ,default='Y'  , nullable=True )
    rrp_percentage  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    take_deposit  = Column(String(1) ,default='N'  , nullable=True )
    tax_code_id  = Column(BigInteger  , nullable=True )
    upload_instock_items  = Column(String(1) ,default='Y'  , nullable=True )
    upload_items  = Column(String(1) ,default='Y'  , nullable=True )
    www_customer_category  = Column(String(30)  , nullable=True )
    www_end_date  = Column(DateTime(timezone=True)  , nullable=True )
    www_markupdown  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    www_min_order_freeship  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    www_min_order_value  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    www_price_break_display  = Column(String(2000)  , nullable=True )
    www_price_type_id  = Column(BigInteger  , nullable=True )
    www_start_date  = Column(DateTime(timezone=True)  , nullable=True )
    www_subscription_preference  = Column(String(30)  , nullable=True )
    #c_arcustomers  = relationship("ArCustomers")


class ArCustsplitHeaders(Base, AuditColumns):
    __tablename__ = 'ar_custsplit_headers'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1)  , nullable=True )
    custsplit_id  = Column(BigInteger, primary_key=True  , nullable=False )
    custsplit_name  = Column(String(30)  , nullable=True )
    description  = Column(String(2000)  , nullable=True )
    split_ratio  = Column(Numeric(precision=5, scale=2)  , nullable=True )
    #c_arcustsplitlines  = relationship("ArCustsplitLines")


class ArCustsplitLines(Base, AuditColumns):
    __tablename__ = 'ar_custsplit_lines'
    __table_args__ = {'extend_existing': True}
    customer_id  = Column(BigInteger , ForeignKey('ar_customers.customer_id')  , nullable=False )
    custsplit_id  = Column(BigInteger , ForeignKey('ar_custsplit_headers.custsplit_id')  , nullable=False )
    custsplit_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    description  = Column(String(400)  , nullable=True )
    sl_no  = Column(Integer ,default=1  , nullable=True )
    split_ratio  = Column(Numeric(precision=5, scale=3)  , nullable=True )


class ArCustsumSnap(Base, AuditColumns):
    __tablename__ = 'ar_custsum_snap'
    __table_args__ = {'extend_existing': True}
    customer_id  = Column(BigInteger , ForeignKey('ar_customers.customer_id')  , nullable=True )
    inv_apr  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_aug  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_dec  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_feb  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_jan  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_jul  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_jun  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_lastmonth  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_lasttrandate  = Column(DateTime(timezone=True)  , nullable=True )
    inv_lastyear  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_mar  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_may  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_nov  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_oct  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_sep  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_thisweek  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_total  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_week1  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_week2  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_week3  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_week4  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_week5  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_week6  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_year2  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_year3  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_year4  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    inv_ytd  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    location_id  = Column(BigInteger , ForeignKey('inv_locations.location_id')  , nullable=True )
    pmnt_apr  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_aug  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_dec  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_feb  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_jan  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_jul  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_jun  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_lastmonth  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_lasttrandate  = Column(DateTime(timezone=True)  , nullable=True )
    pmnt_lastyear  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_mar  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_may  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_nov  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_oct  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_sep  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_thisweek  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_total  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_week1  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_week2  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_week3  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_week4  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_week5  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_week6  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_year2  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_year3  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_year4  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pmnt_ytd  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    snapshot_date  = Column(DateTime(timezone=True)  , nullable=True )
    snapshot_id  = Column(BigInteger, primary_key=True  , nullable=False )
    sub_location_id  = Column(BigInteger , ForeignKey('inv_sub_locations.sub_location_id')  , nullable=True )


class ArCustBarcodeUploads(Base, AuditColumns):
    __tablename__ = 'ar_cust_barcode_uploads'
    __table_args__ = {'extend_existing': True}
    barcode  = Column(String(30) , ForeignKey('inv_item_barcodes.barcode')  , nullable=True )
    customer_id  = Column(BigInteger , ForeignKey('ar_customers.customer_id')  , nullable=False )
    item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=False )
    last_upload_date  = Column(DateTime(timezone=True)  , nullable=True )
    price_exltax  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    price_inctax  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    sales_unit  = Column(BigInteger  , nullable=True )
    su_id  = Column(BigInteger , ForeignKey('inv_item_sales_units.su_id')  , nullable=False )
    upload_barcode_id  = Column(BigInteger, primary_key=True  , nullable=False )
    upload_id  = Column(BigInteger , ForeignKey('ar_cust_item_uploads.upload_id')  , nullable=False )


class ArCustItemExlcategories(Base, AuditColumns):
    __tablename__ = 'ar_cust_item_exlcategories'
    __table_args__ = {'extend_existing': True}
    all_categories  = Column(String(1)  , nullable=True )
    category_id  = Column(BigInteger , ForeignKey('inv_item_categories.category_id')  , nullable=False )
    customer_id  = Column(BigInteger , ForeignKey('ar_customers.customer_id')  , nullable=False )
    exl_category_id  = Column(BigInteger, primary_key=True  , nullable=False )
    include_exclude_type  = Column(String(30) ,default='EXCLUDE'  , nullable=True )
    sub_category_id  = Column(BigInteger , ForeignKey('inv_item_sub_categories.sub_category_id')  , nullable=False )


class ArCustItemMapcategories(Base, AuditColumns):
    __tablename__ = 'ar_cust_item_mapcategories'
    __table_args__ = {'extend_existing': True}
    category_id  = Column(BigInteger  , nullable=False )
    customer_id  = Column(BigInteger  , nullable=False )
    map_attribute1  = Column(String(240)  , nullable=True )
    map_attribute2  = Column(String(240)  , nullable=True )
    map_attribute3  = Column(String(240)  , nullable=True )
    map_attribute4  = Column(String(240)  , nullable=True )
    map_attribute5  = Column(String(240)  , nullable=True )
    map_attribute6  = Column(String(240)  , nullable=True )
    map_category_id  = Column(BigInteger, primary_key=True  , nullable=False )
    map_description  = Column(String(1000)  , nullable=True )
    sub_category_id  = Column(BigInteger  , nullable=True )


class ArCustItemOffers(Base, AuditColumns):
    __tablename__ = 'ar_cust_item_offers'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    attribute5  = Column(String(240)  , nullable=True )
    attribute6  = Column(String(240)  , nullable=True )
    customer_id  = Column(BigInteger , ForeignKey('ar_customers.customer_id')  , nullable=False )
    date_from  = Column(DateTime(timezone=True)  , nullable=True )
    date_to  = Column(DateTime(timezone=True)  , nullable=True )
    description  = Column(String(1000)  , nullable=True )
    offer_header_id  = Column(BigInteger , ForeignKey('inv_item_offer_headers.offer_header_id')  , nullable=False )
    offer_id  = Column(BigInteger, primary_key=True  , nullable=False )


class ArCustItemUploads(Base, AuditColumns):
    __tablename__ = 'ar_cust_item_uploads'
    __table_args__ = {'extend_existing': True}
    customer_id  = Column(BigInteger , ForeignKey('ar_customers.customer_id')  , nullable=False )
    end_date_active  = Column(DateTime(timezone=True)  , nullable=True )
    item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=False )
    item_number  = Column(String(30)  , nullable=True )
    last_upload_date  = Column(DateTime(timezone=True)  , nullable=True )
    long_desc  = Column(String(2000)  , nullable=True )
    max_publish_qty  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    price_exltax  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    price_inctax  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    sales_unit  = Column(BigInteger  , nullable=True )
    short_desc  = Column(String(100)  , nullable=True )
    start_date_active  = Column(DateTime(timezone=True)  , nullable=True )
    upload_id  = Column(BigInteger, primary_key=True  , nullable=False )
    upload_item  = Column(String(1) ,default='Y'  , nullable=True )
    upload_status  = Column(String(30)  , nullable=True )
    web_export_hint  = Column(String(30)  , nullable=True )
    web_preference_code  = Column(String(30)  , nullable=True )
    www_barcode  = Column(String(100)  , nullable=True )
    www_parentage  = Column(String(30)  , nullable=True )
    www_parentsku  = Column(String(30)  , nullable=True )
    www_percentage  = Column(Numeric(precision=7, scale=3)  , nullable=True )
    www_relationship_type  = Column(String(400)  , nullable=True )
    www_size_color  = Column(String(400)  , nullable=True )
    www_size_color_map  = Column(String(400)  , nullable=True )
    www_variation_theme  = Column(String(400)  , nullable=True )
    #c_arcustbarcodeuploads  = relationship("ArCustBarcodeUploads")


class ArCustPaymentMethods(Base, AuditColumns):
    __tablename__ = 'ar_cust_payment_methods'
    __table_args__ = {'extend_existing': True}
    cpm_id  = Column(BigInteger, primary_key=True  , nullable=False )
    cpm_pmnt_method_id  = Column(BigInteger , ForeignKey('cmn_payment_methods.pmnt_method_id')  , nullable=False )
    cust_customer_id  = Column(BigInteger , ForeignKey('ar_customers.customer_id')  , nullable=True )
    max_pmnt_amount  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    min_pmnt_amount  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    sl_no  = Column(Integer  , nullable=True )


class ArCustStoreCardses(Base, AuditColumns):
    __tablename__ = 'ar_cust_store_cardses'
    __table_args__ = {'extend_existing': True}
    attribute1  = Column(String(2000)  , nullable=True )
    attribute2  = Column(String(2000)  , nullable=True )
    card_active  = Column(String(1)  , nullable=True )
    card_expiringon  = Column(DateTime(timezone=True)  , nullable=True )
    card_holdername  = Column(String(50)  , nullable=True )
    card_issuedon  = Column(DateTime(timezone=True)  , nullable=True )
    card_issueno  = Column(Integer  , nullable=True )
    card_no  = Column(String(20), primary_key=True  , nullable=False )
    card_password  = Column(String(15)  , nullable=True )
    card_status  = Column(String(10)  , nullable=True )
    cust_customer_id  = Column(BigInteger , ForeignKey('ar_customers.customer_id')  , nullable=True )
    points_balance  = Column(BigInteger  , nullable=True )
    points_earned  = Column(BigInteger  , nullable=True )
    points_exchanged  = Column(BigInteger  , nullable=True )
    primary_cardholder  = Column(String(1)  , nullable=True )


class ArDeliveryHeaders(Base, AuditColumns):
    __tablename__ = 'ar_delivery_headers'
    __table_args__ = {'extend_existing': True}
    ar_return_reason_code  = Column(String(30)  , nullable=True )
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    attribute5  = Column(String(240)  , nullable=True )
    attribute6  = Column(String(240)  , nullable=True )
    batch_name  = Column(String(30)  , nullable=True )
    cancelled_amount  = Column(BigInteger  , nullable=True )
    cancelled_by  = Column(String(30)  , nullable=True )
    cancelled_date  = Column(DateTime(timezone=True)  , nullable=True )
    carriage_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    customer_id  = Column(BigInteger , ForeignKey('ar_customers.customer_id')  , nullable=True )
    customer_signature_by  = Column(String(240)  , nullable=True )
    customer_signature_date  = Column(DateTime(timezone=True)  , nullable=True )
    delivered_by  = Column(String(240)  , nullable=True )
    delivered_date  = Column(DateTime(timezone=True)  , nullable=True )
    deliverto_contact_id  = Column(BigInteger  , nullable=True )
    deliverto_customer_id  = Column(BigInteger  , nullable=False )
    delivery_date  = Column(DateTime(timezone=True)  , nullable=True )
    delivery_header_id  = Column(BigInteger, primary_key=True  , nullable=False )
    delivery_note_number  = Column(String(30)  , nullable=False, unique=True )
    delivery_status  = Column(String(30)  , nullable=False )
    delivery_status_date  = Column(DateTime(timezone=True)  , nullable=False )
    delivery_user_id  = Column(BigInteger  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    freight_carrier_code  = Column(String(30)  , nullable=True )
    freight_header_id  = Column(BigInteger  , nullable=True )
    freight_line_id  = Column(BigInteger  , nullable=True )
    freight_qty  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    freight_rate  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    freight_terms_code  = Column(String(30)  , nullable=True )
    gl_accounting_date  = Column(DateTime(timezone=True)  , nullable=True )
    ingredient_total  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    notes1  = Column(String(2000)  , nullable=True )
    notes2  = Column(String(2000)  , nullable=True )
    order_header_id  = Column(BigInteger , ForeignKey('ar_salesorder_headers.order_header_id')  , nullable=False )
    orig_sys_ref_header  = Column(String(30)  , nullable=True )
    packing_instructions  = Column(String(2000)  , nullable=True )
    period_line_id  = Column(BigInteger  , nullable=True )
    period_name  = Column(String(30)  , nullable=True )
    shipfrom_location_id  = Column(BigInteger  , nullable=True )
    shipping_instructions  = Column(String(2000)  , nullable=True )
    shipping_method_code  = Column(String(30)  , nullable=True )
    volume_total  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    weight_total  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    #c_ardeliverylines  = relationship("ArDeliveryLines")


class ArDeliveryLines(Base, AuditColumns):
    __tablename__ = 'ar_delivery_lines'
    __table_args__ = {'extend_existing': True}
    barcode  = Column(String(30)  , nullable=True )
    cancelled_amount  = Column(BigInteger  , nullable=True )
    cancelled_by  = Column(BigInteger  , nullable=True )
    cancelled_date  = Column(DateTime(timezone=True)  , nullable=True )
    delivery_header_id  = Column(BigInteger , ForeignKey('ar_delivery_headers.delivery_header_id')  , nullable=False )
    delivery_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    delivery_line_status  = Column(String(30)  , nullable=False )
    delivery_line_status_date  = Column(DateTime(timezone=True)  , nullable=False )
    description  = Column(String(240)  , nullable=True )
    gross_unit_weight  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    item_id  = Column(BigInteger  , nullable=True )
    item_name  = Column(String(240)  , nullable=True )
    net_ingredient  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    notes1  = Column(String(2000)  , nullable=True )
    order_header_id  = Column(BigInteger , ForeignKey('ar_salesorder_headers.order_header_id')  , nullable=True )
    order_line_id  = Column(BigInteger , ForeignKey('ar_salesorder_lines.order_line_id')  , nullable=False )
    orig_sys_ref_header  = Column(String(30)  , nullable=True )
    orig_sys_ref_line  = Column(String(30)  , nullable=True )
    picked_location_id  = Column(BigInteger  , nullable=True )
    picked_sub_location_id  = Column(BigInteger  , nullable=True )
    qty_cancelled_units  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    qty_invoiced_units  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    qty_picked_units  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    qty_shipped_units  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    returned_location_id  = Column(BigInteger  , nullable=True )
    returned_sub_location_id  = Column(BigInteger  , nullable=True )
    sl_no  = Column(Integer  , nullable=True )
    su_id  = Column(BigInteger  , nullable=True )
    unit_volume  = Column(Numeric(precision=13, scale=3)  , nullable=True )


class ArFreightCountries(Base, AuditColumns):
    __tablename__ = 'ar_freight_countries'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    country_code  = Column(String(10) , ForeignKey('cmn_countries.country_code')  , nullable=False )
    expedite_flag  = Column(String(150)  , nullable=True )
    freight_country_id  = Column(BigInteger, primary_key=True  , nullable=False )
    freight_header_id  = Column(BigInteger , ForeignKey('ar_freight_headers.freight_header_id')  , nullable=False )
    freight_line_id  = Column(BigInteger , ForeignKey('ar_freight_lines.freight_line_id')  , nullable=False )
    freight_rate  = Column(Numeric(precision=12, scale=2)  , nullable=False )


class ArFreightHeaders(Base, AuditColumns):
    __tablename__ = 'ar_freight_headers'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    attribute5  = Column(String(240)  , nullable=True )
    attribute6  = Column(String(240)  , nullable=True )
    currency_code  = Column(String(10)  , nullable=False )
    delivery_body  = Column(String(100)  , nullable=True )
    delivery_footer  = Column(String(100)  , nullable=True )
    delivery_header  = Column(String(100)  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    freight_greatest  = Column(Numeric(precision=12, scale=6)  , nullable=True )
    freight_header_id  = Column(BigInteger, primary_key=True  , nullable=False )
    freight_least  = Column(Numeric(precision=12, scale=6)  , nullable=True )
    freight_logo  = Column(String(400)  , nullable=True )
    freight_median  = Column(Numeric(precision=12, scale=6)  , nullable=True )
    freight_region_code  = Column(String(30)  , nullable=True )
    max_weight  = Column(Numeric(precision=12, scale=6)  , nullable=True )
    name  = Column(String(30)  , nullable=False )
    orig_system_reference  = Column(String(400)  , nullable=True )
    postal_codes  = Column(String(2000)  , nullable=True )
    sl_no  = Column(Integer ,default=1  , nullable=True )
    supplier_id  = Column(BigInteger  , nullable=True )
    #c_arfreightcountries  = relationship("ArFreightCountries")
    #c_arfreightlines  = relationship("ArFreightLines")
    #c_dispatchheaders  = relationship("DispatchHeaders")
    #c_invitemfreights  = relationship("InvItemFreights")


class ArFreightLines(Base, AuditColumns):
    __tablename__ = 'ar_freight_lines'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    attribute5  = Column(String(240)  , nullable=True )
    attribute6  = Column(String(240)  , nullable=True )
    container_unit_from  = Column(Numeric(precision=18, scale=6)  , nullable=True )
    container_unit_to  = Column(Numeric(precision=18, scale=6)  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    freight_code  = Column(String(30)  , nullable=False )
    freight_header_id  = Column(BigInteger , ForeignKey('ar_freight_headers.freight_header_id')  , nullable=True )
    freight_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    freight_name  = Column(String(30)  , nullable=False )
    freight_rate  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    hours  = Column(BigInteger  , nullable=True )
    pc_id  = Column(BigInteger  , nullable=True )
    web_expedite_flag  = Column(String(150)  , nullable=True )
    #c_arfreightcountries  = relationship("ArFreightCountries")
    #c_invitemfreights  = relationship("InvItemFreights")


class ArFreightMasters(Base, AuditColumns):
    __tablename__ = 'ar_freight_masters'
    __table_args__ = {'extend_existing': True}
    charge_basis  = Column(String(1)  , nullable=True )
    cost_per_item  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    cost_per_kg  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    freight_charges  = Column(Numeric(precision=12, scale=2) ,default=0  , nullable=True )
    freight_code  = Column(String(5), primary_key=True  , nullable=False )
    freight_desc  = Column(String(100)  , nullable=True )
    gac_gl_account_id  = Column(BigInteger , ForeignKey('gl_account_codes.gl_account_id')  , nullable=True )
    login_id  = Column(String(5)  , nullable=True )
    min_weight  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    tax_code  = Column(String(3)  , nullable=True )


class ArInvbatchCount(Base, AuditColumns):
    __tablename__ = 'ar_invbatch_count'
    __table_args__ = {'extend_existing': True}
    batch_name  = Column(String(30)  , nullable=False )
    batch_number  = Column(BigInteger ,default=1  , nullable=True , unique=True)
    invbatch_group_id  = Column(BigInteger, primary_key=True  , nullable=False )
    invbatch_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    invoice_line_id  = Column(BigInteger  , nullable=True )
    item_id  = Column(BigInteger  , nullable=True )
    item_name  = Column(String(240)  , nullable=True )
    location_id  = Column(BigInteger  , nullable=True )
    quantity  = Column(BigInteger ,default=1  , nullable=True )
    session_id  = Column(String(30)  , nullable=True )
    terminal_id  = Column(BigInteger  , nullable=True )
    terminal_name  = Column(String(240)  , nullable=True )


class ArInvoiceHeaders(Base, AuditColumns):
    __tablename__ = 'ar_invoice_headers'
    __table_args__ = {'extend_existing': True}
    additional_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    ar_return_reason_code  = Column(String(30)  , nullable=True )
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    attribute5  = Column(String(240)  , nullable=True )
    attribute6  = Column(String(240)  , nullable=True )
    authorized_by  = Column(String(30)  , nullable=True )
    balance_total  = Column(Numeric(precision=12, scale=2)  , nullable=False )
    batch_name  = Column(String(30)  , nullable=True )
    billto_address  = Column(String(400)  , nullable=True )
    billto_city  = Column(String(40)  , nullable=True )
    billto_contact_name  = Column(String(250)  , nullable=True )
    billto_country  = Column(String(10)  , nullable=True )
    billto_county  = Column(String(40)  , nullable=True )
    billto_email  = Column(String(250)  , nullable=True )
    billto_post_code  = Column(String(40)  , nullable=True )
    cancelled_amount  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    cancelled_by  = Column(String(30)  , nullable=True )
    cancelled_date  = Column(DateTime(timezone=True)  , nullable=True )
    carriage_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    copies_printed  = Column(BigInteger  , nullable=True )
    cpt_id  = Column(BigInteger  , nullable=True )
    credit_invoice_header_id  = Column(BigInteger  , nullable=True )
    customer_id  = Column(BigInteger , ForeignKey('ar_customers.customer_id')  , nullable=False )
    customer_po_date  = Column(DateTime(timezone=True)  , nullable=True )
    customer_po_number  = Column(String(30)  , nullable=True )
    customer_signature_by  = Column(String(240)  , nullable=True )
    customer_signature_date  = Column(DateTime(timezone=True)  , nullable=True )
    delivered_by  = Column(String(240)  , nullable=True )
    delivered_date  = Column(DateTime(timezone=True)  , nullable=True )
    deliverto_contact_id  = Column(BigInteger  , nullable=True )
    deliverto_customer_id  = Column(BigInteger  , nullable=True )
    delivery_freetext  = Column(String(2000)  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    discount_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    discount_type  = Column(String(10)  , nullable=True )
    discount_value  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    drop_ship_flag  = Column(String(1)  , nullable=True )
    emp_id  = Column(BigInteger  , nullable=True )
    end_release_date  = Column(DateTime(timezone=True)  , nullable=True )
    exchange_rate  = Column(Numeric(precision=22, scale=6)  , nullable=True )
    freight_carrier_code  = Column(String(30)  , nullable=True )
    freight_header_id  = Column(BigInteger  , nullable=True )
    freight_line_id  = Column(BigInteger  , nullable=True )
    freight_qty  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    freight_rate  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    freight_terms_code  = Column(String(30)  , nullable=True )
    gl_accounting_date  = Column(DateTime(timezone=True)  , nullable=True )
    gl_account_id  = Column(BigInteger  , nullable=True )
    grand_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    gross_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    inco_terms  = Column(String(30) ,default='EXW'  , nullable=True )
    ingredient_total  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    invbatch_group_id  = Column(BigInteger  , nullable=True )
    invoiceto_contact_id  = Column(BigInteger  , nullable=True )
    invoiceto_customer_id  = Column(BigInteger  , nullable=True )
    invoice_category_code  = Column(String(30)  , nullable=False )
    invoice_currency_code  = Column(String(10)  , nullable=True )
    invoice_date  = Column(DateTime(timezone=True)  , nullable=True )
    invoice_header_id  = Column(BigInteger, primary_key=True  , nullable=False )
    invoice_number  = Column(String(30)  , nullable=False , unique=True)
    invoice_source  = Column(String(30)  , nullable=True )
    invoice_status  = Column(String(30)  , nullable=True )
    invoice_status_date  = Column(DateTime(timezone=True)  , nullable=True )
    invoice_type  = Column(String(30)  , nullable=True )
    invoice_user_id  = Column(BigInteger  , nullable=True )
    last_release_date  = Column(DateTime(timezone=True)  , nullable=True )
    marketing_source_code  = Column(String(30)  , nullable=True )
    needby_date  = Column(DateTime(timezone=True)  , nullable=True )
    net_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    notes1  = Column(String(2000)  , nullable=True )
    notes2  = Column(String(2000)  , nullable=True )
    number_of_boxes  = Column(BigInteger  , nullable=True )
    one_off_customer  = Column(String(240)  , nullable=True )
    one_off_shipto  = Column(String(240)  , nullable=True )
    order_header_id  = Column(BigInteger , ForeignKey('ar_salesorder_headers.order_header_id')  , nullable=True )
    orig_sys_ref_header  = Column(String(30)  , nullable=True )
    packing_instructions  = Column(String(2000)  , nullable=True )
    paid_amount  = Column(Numeric(precision=12, scale=2) ,default=0  , nullable=True )
    partial_shipments_allowed  = Column(String(1)  , nullable=True )
    payment_currency_code  = Column(String(10)  , nullable=True )
    payto_location_id  = Column(BigInteger , ForeignKey('inv_locations.location_id')  , nullable=True )
    period_line_id  = Column(BigInteger  , nullable=True )
    period_name  = Column(String(30)  , nullable=True )
    pmnt_method_id  = Column(BigInteger  , nullable=True )
    pricelist_header_id  = Column(BigInteger  , nullable=True )
    pricing_date  = Column(DateTime(timezone=True)  , nullable=True )
    promised_date  = Column(DateTime(timezone=True)  , nullable=True )
    release_schedule_id  = Column(BigInteger  , nullable=True )
    salcr_group_id  = Column(BigInteger  , nullable=True )
    sales_person_id  = Column(BigInteger  , nullable=True )
    shipfrom_location_id  = Column(BigInteger , ForeignKey('inv_locations.location_id')  , nullable=True )
    shipping_instructions  = Column(String(2000)  , nullable=True )
    shipping_method_code  = Column(String(30)  , nullable=True )
    shipto_address  = Column(String(400)  , nullable=True )
    shipto_city  = Column(String(40)  , nullable=True )
    shipto_contact_name  = Column(String(250)  , nullable=True )
    shipto_country  = Column(String(10)  , nullable=True )
    shipto_county  = Column(String(40)  , nullable=True )
    shipto_email  = Column(String(250)  , nullable=True )
    shipto_post_code  = Column(String(40)  , nullable=True )
    start_release_date  = Column(DateTime(timezone=True)  , nullable=True )
    sub_location_id  = Column(BigInteger , ForeignKey('inv_sub_locations.sub_location_id')  , nullable=True )
    tax_exempt_flag  = Column(String(1)  , nullable=True )
    tax_exempt_number  = Column(String(80)  , nullable=True )
    tax_exempt_reason_code  = Column(String(30)  , nullable=True )
    terminal_id  = Column(BigInteger  , nullable=True )
    total_cost  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    transaction_phase_code  = Column(String(30)  , nullable=True )
    vat_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    volume_total  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    weight_total  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    #c_arinvoicelines  = relationship("ArInvoiceLines")
    #c_arpaymentheaders  = relationship("ArPaymentHeaders")
    #c_palletboxes  = relationship("PalletBoxes")
    #c_palletheaders  = relationship("PalletHeaders")


class ArInvoiceLines(Base, AuditColumns):
    __tablename__ = 'ar_invoice_lines'
    __table_args__ = {'extend_existing': True}
    ar_return_reason_code  = Column(String(30)  , nullable=True )
    barcode  = Column(String(30)  , nullable=True )
    cancelled_amount  = Column(BigInteger  , nullable=True )
    cancelled_by  = Column(BigInteger  , nullable=True )
    cancelled_date  = Column(DateTime(timezone=True)  , nullable=True )
    cancelled_reason  = Column(String(240)  , nullable=True )
    carriage_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    credit_invoice_header_id  = Column(BigInteger  , nullable=True )
    credit_invoice_line_id  = Column(BigInteger  , nullable=True )
    credit_inv_action_code  = Column(String(30)  , nullable=True )
    credit_item_status_code  = Column(String(30)  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    discounted_user_id  = Column(BigInteger  , nullable=True )
    discount_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    discount_type  = Column(String(10)  , nullable=True )
    discount_value  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    exchange_rate  = Column(Numeric(precision=22, scale=6)  , nullable=True )
    external_ref1  = Column(String(240)  , nullable=True )
    external_ref2  = Column(String(240)  , nullable=True )
    external_ref3  = Column(String(240)  , nullable=True )
    external_ref4  = Column(String(240)  , nullable=True )
    external_ref5  = Column(String(240)  , nullable=True )
    external_ref6  = Column(String(240)  , nullable=True )
    freight_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    gl_account_code  = Column(BigInteger  , nullable=True )
    gross_unit_weight  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    invoice_header_id  = Column(BigInteger , ForeignKey('ar_invoice_headers.invoice_header_id')  , nullable=True )
    invoice_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    invoice_line_status  = Column(String(30)  , nullable=True )
    invoice_line_status_date  = Column(DateTime(timezone=True)  , nullable=True )
    invoice_line_type  = Column(String(30)  , nullable=True )
    invoice_price_type_id  = Column(BigInteger  , nullable=True )
    invoice_unit_sp  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    invoice_unit_sp_inctax  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    item_id  = Column(BigInteger  , nullable=True )
    item_name  = Column(String(240)  , nullable=True )
    item_price_id  = Column(BigInteger  , nullable=True )
    item_price_type_id  = Column(BigInteger  , nullable=True )
    item_unit_sp  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    net_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    net_ingredient  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    net_total_after_discount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    notes1  = Column(String(2000)  , nullable=True )
    offer_attribute1  = Column(String(240)  , nullable=True )
    offer_attribute2  = Column(String(240)  , nullable=True )
    offer_attribute3  = Column(String(240)  , nullable=True )
    offer_price_type_id  = Column(BigInteger  , nullable=True )
    offer_text  = Column(String(2000)  , nullable=True )
    offer_type  = Column(String(30)  , nullable=True )
    offer_unit_sp  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    order_header_id  = Column(BigInteger , ForeignKey('ar_salesorder_headers.order_header_id')  , nullable=True )
    order_line_id  = Column(BigInteger , ForeignKey('ar_salesorder_lines.order_line_id')  , nullable=True )
    orig_sys_ref_header  = Column(String(30)  , nullable=True )
    orig_sys_ref_line  = Column(String(30)  , nullable=True )
    other_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    picked_location_id  = Column(BigInteger  , nullable=True )
    picked_sub_location_id  = Column(BigInteger  , nullable=True )
    priceover_user_id  = Column(BigInteger  , nullable=True )
    price_overridden  = Column(String(1)  , nullable=True )
    qty_cancelled_units  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    qty_invoiced_units  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    qty_in_stock  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_ordered_units  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    qty_picked_units  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    qty_shipped_units  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    refund_from_prev_sale  = Column(String(1)  , nullable=True )
    returned_location_id  = Column(BigInteger  , nullable=True )
    returned_sub_location_id  = Column(BigInteger  , nullable=True )
    sales_unit  = Column(Integer  , nullable=True )
    sales_unit_cp  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    saved_net_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    saved_unit_sp  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    sl_no  = Column(Integer  , nullable=True )
    su_id  = Column(BigInteger  , nullable=True )
    tax_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    tax_code_id  = Column(BigInteger , ForeignKey('cmn_tax_codes.tax_code_id')  , nullable=True )
    tax_rate  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    total_line_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    unit_cp  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    unit_tax_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    unit_volume  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    unknown_item_name  = Column(String(150)  , nullable=True )
    uom_id  = Column(BigInteger  , nullable=True )


class ArItemFulfillment(Base, AuditColumns):
    __tablename__ = 'ar_item_fulfillment'
    __table_args__ = {'extend_existing': True}
    comments  = Column(String(1000)  , nullable=True )
    fulfillment_id  = Column(BigInteger, primary_key=True  , nullable=False )
    fulfillment_status  = Column(String(30)  , nullable=True )
    fulfillment_status_date  = Column(DateTime(timezone=True)  , nullable=True )
    grn_id  = Column(BigInteger  , nullable=True )
    grn_line_id  = Column(BigInteger  , nullable=True )
    invoice_header_id  = Column(BigInteger  , nullable=True )
    invoice_line_id  = Column(BigInteger  , nullable=True )
    item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=True )
    location_id  = Column(BigInteger  , nullable=True )
    order_header_id  = Column(BigInteger , ForeignKey('ar_salesorder_headers.order_header_id')  , nullable=False )
    order_line_id  = Column(BigInteger , ForeignKey('ar_salesorder_lines.order_line_id')  , nullable=True )
    qty_cancelled_units  = Column(BigInteger  , nullable=True )
    qty_fulfilled_units  = Column(BigInteger  , nullable=True )
    qty_invoiced_units  = Column(BigInteger  , nullable=True )
    sub_location_id  = Column(BigInteger  , nullable=True )


class ArOptions(Base, AuditColumns):
    __tablename__ = 'ar_options'
    __table_args__ = {'extend_existing': True}
    alert_less_then_cost  = Column(String(1) ,default='Y'  , nullable=True )
    allocate_order_qty  = Column(String(1)  , nullable=True )
    allow_minus_stock  = Column(String(1) ,default='Y'  , nullable=True )
    allow_part_invoice  = Column(String(1) ,default='Y'  , nullable=True )
    apply_offer_on_custprice  = Column(String(1) ,default='Y'  , nullable=True )
    ar_option_id  = Column(BigInteger, primary_key=True  , nullable=False )
    backorder_header_id  = Column(BigInteger  , nullable=True )
    bank_account_id  = Column(BigInteger  , nullable=True )
    barcode_qty_hint  = Column(String(30) ,default='BARCODEQTY'  , nullable=True )
    batch_format  = Column(String(30)  , nullable=True )
    can_change_customer  = Column(String(1) ,default='N'  , nullable=True )
    central_payment  = Column(String(1) ,default='N'  , nullable=True )
    company_id  = Column(BigInteger  , nullable=True )
    cpt_id  = Column(BigInteger  , nullable=True )
    credit_limit_control  = Column(String(30)  , nullable=True )
    customer_id  = Column(BigInteger  , nullable=True )
    customer_numbering  = Column(String(30) ,default='MANUAL'  , nullable=True )
    default_item_filter  = Column(String(30)  , nullable=True )
    delivery_confirmation  = Column(String(30)  , nullable=True )
    display_invnumber_onfinalise  = Column(String(1)  , nullable=True )
    document_path  = Column(String(400)  , nullable=True )
    duplicate_customer_name  = Column(String(1) ,default='N'  , nullable=True )
    fo_price_basis  = Column(String(30) ,default='NOVAT'  , nullable=True )
    gl_account_id  = Column(BigInteger  , nullable=True )
    gl_cashingup_by  = Column(String(30)  , nullable=True )
    invoice_report_format  = Column(String(20)  , nullable=True )
    invoice_screen_format  = Column(String(20)  , nullable=True )
    inv_requisition_hint  = Column(String(30)  , nullable=True )
    location_id  = Column(BigInteger  , nullable=True )
    logoff_timeout  = Column(BigInteger  , nullable=True )
    log_off_after_each_trans  = Column(String(1) ,default='N'  , nullable=True )
    monitor_layaway  = Column(String(1) ,default='N'  , nullable=True )
    must_select_customer  = Column(String(1) ,default='N'  , nullable=True )
    noof_layaways  = Column(BigInteger ,default=999  , nullable=True )
    offer_price_type_id  = Column(BigInteger  , nullable=True )
    option_type  = Column(String(30)  , nullable=True )
    pay_inout_slip  = Column(String(1) ,default='N'  , nullable=True )
    period_header_id  = Column(BigInteger  , nullable=True )
    picking_confirmation  = Column(String(30)  , nullable=True )
    pmnt_method_id  = Column(BigInteger  , nullable=True )
    populate_invoice_batch  = Column(String(1)  , nullable=True )
    price_type_id  = Column(BigInteger  , nullable=True )
    printer1_batch_mode  = Column(String(30)  , nullable=True )
    printer1_copies  = Column(Integer  , nullable=True )
    printer1_execution_mode  = Column(String(30)  , nullable=True )
    printer1_format  = Column(String(30)  , nullable=True )
    printer1_id  = Column(BigInteger  , nullable=True )
    printer1_preview_mode  = Column(String(30)  , nullable=True )
    printer2_batch_mode  = Column(String(30)  , nullable=True )
    printer2_copies  = Column(Integer  , nullable=True )
    printer2_execution_mode  = Column(String(30)  , nullable=True )
    printer2_format  = Column(String(30)  , nullable=True )
    printer2_id  = Column(BigInteger  , nullable=True )
    printer2_preview_mode  = Column(String(30)  , nullable=True )
    print_batch_count  = Column(String(1) ,default='N'  , nullable=True )
    print_bo_receipt  = Column(String(1) ,default='N'  , nullable=True )
    print_customer_note1  = Column(String(1) ,default='Y'  , nullable=True )
    print_customer_note2  = Column(String(1) ,default='Y'  , nullable=True )
    print_customer_note3  = Column(String(1) ,default='Y'  , nullable=True )
    print_imagein_invoice  = Column(String(1) ,default='Y'  , nullable=True )
    print_output_path  = Column(String(240)  , nullable=True )
    quantity_popup  = Column(String(1) ,default='N'  , nullable=True )
    quickcode_id  = Column(BigInteger  , nullable=True )
    receipt_printer_id  = Column(BigInteger  , nullable=True )
    return_location_id  = Column(BigInteger  , nullable=True )
    return_sub_location_id  = Column(BigInteger  , nullable=True )
    sales_order_type  = Column(String(30)  , nullable=True )
    special_offer_hint  = Column(String(30)  , nullable=True )
    surcharge_account_customers  = Column(String(1) ,default='N'  , nullable=True )
    unit_cost_plus_percent  = Column(Integer  , nullable=True )
    write_invoice_to_file  = Column(String(1) ,default='Y'  , nullable=True )
    www_customer_category  = Column(String(30)  , nullable=True )
    www_markupdown  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    www_min_order_freeship  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    www_min_order_value  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    www_price_break_display  = Column(String(2000)  , nullable=True )
    www_price_type_id  = Column(BigInteger  , nullable=True )
    www_subscription_preference  = Column(String(30)  , nullable=True )


class ArOrderpadHeaders(Base, AuditColumns):
    __tablename__ = 'ar_orderpad_headers'
    __table_args__ = {'extend_existing': True}
    batch_name  = Column(String(30)  , nullable=True )
    customer_id  = Column(BigInteger , ForeignKey('ar_customers.customer_id')  , nullable=False )
    deliverto_contact_id  = Column(BigInteger  , nullable=True )
    deliverto_customer_id  = Column(BigInteger  , nullable=True )
    invoiceto_contact_id  = Column(BigInteger  , nullable=True )
    invoiceto_customer_id  = Column(BigInteger  , nullable=True )
    location_id  = Column(BigInteger , ForeignKey('inv_locations.location_id')  , nullable=True )
    orderpad_category  = Column(String(30) ,default='SALES'  , nullable=True )
    orderpad_date  = Column(DateTime(timezone=True), server_default=func.now() , nullable=True )
    orderpad_decription  = Column(String(400)  , nullable=True )
    orderpad_header_id  = Column(BigInteger, primary_key=True  , nullable=False )
    orderpad_header_status  = Column(String(30) ,default='NEW'  , nullable=True )
    orderpad_header_status_date  = Column(DateTime(timezone=True), server_default=func.now() , nullable=True )
    orderpad_name  = Column(String(30)  , nullable=False )
    orderpad_type  = Column(String(30) ,default='SAELS'  , nullable=True )
    order_header_id  = Column(BigInteger  , nullable=True )
    orig_sys_ref_header  = Column(String(50)  , nullable=True )
    user_id  = Column(BigInteger ,default=-1  , nullable=True )
    #c_arorderpadlines  = relationship("ArOrderpadLines")


class ArOrderpadLines(Base, AuditColumns):
    __tablename__ = 'ar_orderpad_lines'
    __table_args__ = {'extend_existing': True}
    case_quantity  = Column(Numeric(precision=12, scale=3) ,default=1  , nullable=True )
    item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=False )
    item_name  = Column(String(400)  , nullable=True )
    item_number  = Column(String(50)  , nullable=True )
    orderpad_header_id  = Column(BigInteger , ForeignKey('ar_orderpad_headers.orderpad_header_id')  , nullable=False )
    orderpad_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    orderpad_line_status  = Column(String(30) ,default='NEW'  , nullable=True )
    orderpad_line_status_date  = Column(DateTime(timezone=True), server_default=func.now() , nullable=True )
    order_line_id  = Column(BigInteger  , nullable=True )
    orig_sys_ref_header  = Column(String(50)  , nullable=True )
    orig_sys_ref_line  = Column(String(30)  , nullable=True )
    qty_in_order  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_in_pad  = Column(Numeric(precision=12, scale=3)  , nullable=False )
    qty_in_pad_cases  = Column(Numeric(precision=12, scale=3) ,default=1  , nullable=True )
    qty_in_stock  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    sl_no  = Column(BigInteger  , nullable=True )


class ArPaymentHeaders(Base, AuditColumns):
    __tablename__ = 'ar_payment_headers'
    __table_args__ = {'extend_existing': True}
    additional_charges  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    attribute5  = Column(String(240)  , nullable=True )
    attribute6  = Column(String(240)  , nullable=True )
    balance_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    bank_account_id  = Column(BigInteger  , nullable=True )
    bank_id  = Column(BigInteger  , nullable=True )
    batch_name  = Column(String(30)  , nullable=True )
    cancelled_amount  = Column(BigInteger  , nullable=True )
    cancelled_by  = Column(String(30)  , nullable=True )
    cancelled_date  = Column(DateTime(timezone=True)  , nullable=True )
    card_approval_code  = Column(String(80)  , nullable=True )
    card_approval_date  = Column(DateTime(timezone=True)  , nullable=True )
    card_expiration_date  = Column(DateTime(timezone=True)  , nullable=True )
    card_holder_name  = Column(String(80)  , nullable=True )
    card_number  = Column(String(80)  , nullable=True )
    card_security_code  = Column(String(30)  , nullable=True )
    cashback_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    check_number  = Column(String(50)  , nullable=True )
    customer_id  = Column(BigInteger , ForeignKey('ar_customers.customer_id')  , nullable=False )
    description  = Column(String(240)  , nullable=True )
    discount_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    discount_type  = Column(String(30)  , nullable=True )
    discount_value  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    entry_method  = Column(String(30) ,default='ONETOMANY'  , nullable=True )
    exchange_rate  = Column(Numeric(precision=22, scale=6)  , nullable=True )
    gl_accounting_date  = Column(DateTime(timezone=True)  , nullable=True )
    gl_account_id  = Column(BigInteger  , nullable=True )
    invoice_header_id  = Column(BigInteger , ForeignKey('ar_invoice_headers.invoice_header_id')  , nullable=True )
    notes1  = Column(String(2000)  , nullable=True )
    notes2  = Column(String(2000)  , nullable=True )
    order_header_id  = Column(BigInteger , ForeignKey('ar_salesorder_headers.order_header_id')  , nullable=True )
    payment_card_types  = Column(String(30)  , nullable=True )
    payment_currency_code  = Column(String(10)  , nullable=True )
    payment_date  = Column(DateTime(timezone=True)  , nullable=True )
    payment_header_id  = Column(BigInteger, primary_key=True  , nullable=False )
    payment_number  = Column(String(30)  , nullable=False )
    payment_reference  = Column(String(240)  , nullable=True )
    payment_source  = Column(String(30)  , nullable=True )
    payment_status  = Column(String(30)  , nullable=True )
    payment_status_date  = Column(DateTime(timezone=True)  , nullable=True )
    payment_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    payment_type  = Column(String(30)  , nullable=True )
    payment_user_id  = Column(BigInteger  , nullable=True )
    period_line_id  = Column(BigInteger  , nullable=True )
    period_name  = Column(String(30)  , nullable=True )
    pmnt_method_id  = Column(BigInteger  , nullable=True )
    transaction_phase_code  = Column(String(30)  , nullable=True )
    #c_arpaymentlines  = relationship("ArPaymentLines")


class ArPaymentLines(Base, AuditColumns):
    __tablename__ = 'ar_payment_lines'
    __table_args__ = {'extend_existing': True}
    actual_payment_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    additional_payment_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    card_approval_code  = Column(String(80)  , nullable=True )
    card_approval_date  = Column(DateTime(timezone=True)  , nullable=True )
    card_expiration_date  = Column(DateTime(timezone=True)  , nullable=True )
    card_holder_name  = Column(String(80)  , nullable=True )
    card_number  = Column(String(80)  , nullable=True )
    card_security_code  = Column(String(30)  , nullable=True )
    cashback_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    check_number  = Column(String(50)  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    discount_type  = Column(String(30)  , nullable=True )
    discount_value  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    gl_accounting_date  = Column(DateTime(timezone=True)  , nullable=True )
    gl_account_id  = Column(BigInteger  , nullable=True )
    invoice_header_id  = Column(BigInteger  , nullable=False )
    order_header_id  = Column(BigInteger  , nullable=True )
    payment_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    payment_card_types  = Column(String(30)  , nullable=True )
    payment_header_id  = Column(BigInteger , ForeignKey('ar_payment_headers.payment_header_id')  , nullable=True )
    payment_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    payment_line_status  = Column(String(30)  , nullable=True )
    payment_line_status_date  = Column(DateTime(timezone=True)  , nullable=True )
    payment_reference  = Column(String(240)  , nullable=True )
    payment_trans_id  = Column(BigInteger , ForeignKey('cmn_payment_trans.payment_trans_id')  , nullable=True )
    period_line_id  = Column(BigInteger  , nullable=True )
    period_name  = Column(String(30)  , nullable=True )
    pmnt_method_id  = Column(BigInteger  , nullable=True )
    standard_payment_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    transaction_phase_code  = Column(String(30)  , nullable=True )


class ArRepaymentLines(Base, AuditColumns):
    __tablename__ = 'ar_repayment_lines'
    __table_args__ = {'extend_existing': True}
    actual_payment_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    additional_payment_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    card_approval_code  = Column(String(80)  , nullable=True )
    card_approval_date  = Column(DateTime(timezone=True)  , nullable=True )
    card_expiration_date  = Column(DateTime(timezone=True)  , nullable=True )
    card_holder_name  = Column(String(80)  , nullable=True )
    card_number  = Column(String(80)  , nullable=True )
    card_security_code  = Column(String(30)  , nullable=True )
    cashback_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    check_number  = Column(String(50)  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    discount_type  = Column(String(30)  , nullable=True )
    discount_value  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    gl_accounting_date  = Column(DateTime(timezone=True)  , nullable=True )
    gl_account_id  = Column(BigInteger  , nullable=True )
    invoice_header_id  = Column(BigInteger  , nullable=False )
    order_header_id  = Column(BigInteger  , nullable=True )
    payment_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    payment_card_types  = Column(String(30)  , nullable=True )
    payment_header_id  = Column(BigInteger  , nullable=True )
    payment_line_id  = Column(BigInteger  , nullable=False )
    payment_line_status  = Column(String(30)  , nullable=True )
    payment_line_status_date  = Column(DateTime(timezone=True)  , nullable=True )
    payment_reference  = Column(String(240)  , nullable=True )
    period_line_id  = Column(BigInteger  , nullable=True )
    period_name  = Column(String(30)  , nullable=True )
    pmnt_method_id  = Column(BigInteger  , nullable=False )
    repayment_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    standard_payment_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    transaction_phase_code  = Column(String(30)  , nullable=True )


class ArSalcrGroups(Base, AuditColumns):
    __tablename__ = 'ar_salcr_groups'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    attribute1  = Column(String(2000)  , nullable=True )
    attribute2  = Column(String(2000)  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    salcr_group_id  = Column(BigInteger, primary_key=True  , nullable=False )
    salcr_group_name  = Column(String(100)  , nullable=False )
    sales_person_area_code  = Column(String(30)  , nullable=True )
    sales_person_id  = Column(BigInteger  , nullable=True )
    sales_person_region_code  = Column(String(30)  , nullable=True )
    #c_arsalcrgroupmembers  = relationship("ArSalcrGroupMembers")


class ArSalcrGroupMembers(Base, AuditColumns):
    __tablename__ = 'ar_salcr_group_members'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    percent  = Column(Numeric(precision=6, scale=2)  , nullable=False )
    salcr_group_id  = Column(BigInteger , ForeignKey('ar_salcr_groups.salcr_group_id')  , nullable=False )
    salcr_group_member_id  = Column(BigInteger, primary_key=True  , nullable=False )
    sales_person_id  = Column(BigInteger , ForeignKey('ar_sales_persons.sales_person_id')  , nullable=False )


class ArSalesorderHeaders(Base, AuditColumns):
    __tablename__ = 'ar_salesorder_headers'
    __table_args__ = {'extend_existing': True}
    ar_return_reason_code  = Column(String(30)  , nullable=True )
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    attribute5  = Column(String(240)  , nullable=True )
    attribute6  = Column(String(240)  , nullable=True )
    authorized_by  = Column(String(30)  , nullable=True )
    balance_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    batch_name  = Column(String(30)  , nullable=True )
    billto_address  = Column(String(400)  , nullable=True )
    billto_city  = Column(String(40)  , nullable=True )
    billto_contact_name  = Column(String(250)  , nullable=True )
    billto_country  = Column(String(10)  , nullable=True )
    billto_county  = Column(String(40)  , nullable=True )
    billto_email  = Column(String(250)  , nullable=True )
    billto_post_code  = Column(String(40)  , nullable=True )
    cancelled_amount  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    cancelled_by  = Column(String(30)  , nullable=True )
    cancelled_date  = Column(DateTime(timezone=True)  , nullable=True )
    card_approval_code  = Column(String(80)  , nullable=True )
    card_approval_date  = Column(DateTime(timezone=True)  , nullable=True )
    card_expiration_date  = Column(DateTime(timezone=True)  , nullable=True )
    card_holder_name  = Column(String(80)  , nullable=True )
    card_number  = Column(String(80)  , nullable=True )
    carriage_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    check_number  = Column(String(50)  , nullable=True )
    cpt_id  = Column(BigInteger  , nullable=True )
    customer_id  = Column(BigInteger , ForeignKey('ar_customers.customer_id')  , nullable=False )
    customer_po_date  = Column(DateTime(timezone=True)  , nullable=True )
    customer_po_number  = Column(String(30)  , nullable=True )
    customer_signature_by  = Column(String(240)  , nullable=True )
    customer_signature_date  = Column(DateTime(timezone=True)  , nullable=True )
    delivered_by  = Column(String(240)  , nullable=True )
    delivered_date  = Column(DateTime(timezone=True)  , nullable=True )
    deliverto_contact_id  = Column(BigInteger  , nullable=True )
    deliverto_customer_id  = Column(BigInteger  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    discount_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    discount_type  = Column(String(10)  , nullable=True )
    discount_value  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    drop_ship_flag  = Column(String(1)  , nullable=True )
    emp_id  = Column(BigInteger  , nullable=True )
    end_release_date  = Column(DateTime(timezone=True)  , nullable=True )
    exchange_rate  = Column(Numeric(precision=22, scale=6)  , nullable=True )
    freight_carrier_code  = Column(String(30)  , nullable=True )
    freight_header_id  = Column(BigInteger  , nullable=True )
    freight_line_id  = Column(BigInteger  , nullable=True )
    freight_qty  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    freight_rate  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    freight_terms_code  = Column(String(30)  , nullable=True )
    gl_accounting_date  = Column(DateTime(timezone=True)  , nullable=True )
    gl_account_id  = Column(BigInteger  , nullable=True )
    gross_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    ingredient_total  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    invoiceto_contact_id  = Column(BigInteger  , nullable=True )
    invoiceto_customer_id  = Column(BigInteger  , nullable=True )
    last_release_date  = Column(DateTime(timezone=True)  , nullable=True )
    marketing_source_code  = Column(String(30)  , nullable=True )
    needby_date  = Column(DateTime(timezone=True)  , nullable=True )
    net_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    notes1  = Column(String(2000)  , nullable=True )
    notes2  = Column(String(2000)  , nullable=True )
    one_off_customer  = Column(String(140)  , nullable=True )
    one_off_shipto  = Column(String(140)  , nullable=True )
    order_category_code  = Column(String(30)  , nullable=False )
    order_currency_code  = Column(String(10)  , nullable=True )
    order_date  = Column(DateTime(timezone=True)  , nullable=True )
    order_header_id  = Column(BigInteger, primary_key=True  , nullable=False )
    order_number  = Column(String(30)  , nullable=False, unique=True )
    order_source  = Column(String(30)  , nullable=True )
    order_status  = Column(String(30)  , nullable=True )
    order_status_date  = Column(DateTime(timezone=True)  , nullable=True )
    order_type  = Column(String(30)  , nullable=True )
    order_user_id  = Column(BigInteger  , nullable=True )
    orig_sys_ref_header  = Column(String(30)  , nullable=True )
    packing_instructions  = Column(String(2000)  , nullable=True )
    partial_shipments_allowed  = Column(String(1)  , nullable=True )
    payment_card_types  = Column(String(30)  , nullable=True )
    payment_currency_code  = Column(String(10)  , nullable=True )
    payto_location_id  = Column(BigInteger , ForeignKey('inv_locations.location_id')  , nullable=True )
    period_line_id  = Column(BigInteger  , nullable=True )
    period_name  = Column(String(30)  , nullable=True )
    phase_code  = Column(String(30) ,default='NEW'  , nullable=True )
    pmnt_method_id  = Column(BigInteger  , nullable=True )
    pricelist_header_id  = Column(BigInteger  , nullable=True )
    pricing_date  = Column(DateTime(timezone=True)  , nullable=True )
    promised_date  = Column(DateTime(timezone=True)  , nullable=True )
    release_schedule_id  = Column(BigInteger  , nullable=True )
    salcr_group_id  = Column(BigInteger  , nullable=True )
    sales_person_id  = Column(BigInteger  , nullable=True )
    shipfrom_location_id  = Column(BigInteger , ForeignKey('inv_locations.location_id')  , nullable=True )
    shipping_instructions  = Column(String(2000)  , nullable=True )
    shipping_method_code  = Column(String(30)  , nullable=True )
    shipto_address  = Column(String(400)  , nullable=True )
    shipto_city  = Column(String(40)  , nullable=True )
    shipto_contact_name  = Column(String(250)  , nullable=True )
    shipto_country  = Column(String(10)  , nullable=True )
    shipto_county  = Column(String(40)  , nullable=True )
    shipto_email  = Column(String(250)  , nullable=True )
    shipto_post_code  = Column(String(40)  , nullable=True )
    start_release_date  = Column(DateTime(timezone=True)  , nullable=True )
    sub_location_id  = Column(BigInteger , ForeignKey('inv_sub_locations.sub_location_id')  , nullable=True )
    system_status  = Column(String(30)  , nullable=True )
    tax_exempt_flag  = Column(String(1)  , nullable=True )
    tax_exempt_number  = Column(String(80)  , nullable=True )
    tax_exempt_reason_code  = Column(String(30)  , nullable=True )
    total_cost  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    transaction_phase_code  = Column(String(30)  , nullable=True )
    vat_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    volume_total  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    weight_total  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    #c_ardeliveryheaders  = relationship("ArDeliveryHeaders")
    #c_ardeliverylines  = relationship("ArDeliveryLines")
    #c_arinvoiceheaders  = relationship("ArInvoiceHeaders")
    #c_arinvoicelines  = relationship("ArInvoiceLines")
    #c_aritemfulfillment  = relationship("ArItemFulfillment")
    #c_arpaymentheaders  = relationship("ArPaymentHeaders")
    #c_arsalesorderpicklist  = relationship("ArSalesorderPicklist")
    #c_arsalesorderstatuses  = relationship("ArSalesorderStatuses")
    #c_invbomtrans  = relationship("InvBomTrans")
    #c_palletboxes  = relationship("PalletBoxes")
    #c_palletheaders  = relationship("PalletHeaders")


class ArSalesorderImport(Base, AuditColumns):
    __tablename__ = 'ar_salesorder_import'
    __table_args__ = {'extend_existing': True}
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    batch_id  = Column(BigInteger , ForeignKey('ar_soimport_batch.batch_id')  , nullable=False )
    batch_name  = Column(String(30)  , nullable=True )
    customer_id  = Column(BigInteger  , nullable=True )
    customer_name  = Column(String(1000)  , nullable=True )
    customer_number  = Column(String(30)  , nullable=True )
    import_date  = Column(DateTime(timezone=True)  , nullable=True )
    import_id  = Column(BigInteger, primary_key=True  , nullable=False )
    import_status  = Column(String(30)  , nullable=True )
    import_template_name  = Column(String(100)  , nullable=True )
    item_id  = Column(BigInteger  , nullable=True )
    line_number  = Column(BigInteger  , nullable=True )
    location_id  = Column(BigInteger  , nullable=True )
    order_category_code  = Column(String(30)  , nullable=True )
    order_header_id  = Column(BigInteger  , nullable=True )
    order_line_id  = Column(BigInteger  , nullable=True )
    order_source  = Column(String(30)  , nullable=True )
    order_type  = Column(String(30)  , nullable=True )
    phase_code  = Column(String(30)  , nullable=True )
    price_hint  = Column(String(30) ,default='SOURCE'  , nullable=True )
    sales_unit  = Column(BigInteger  , nullable=True )
    sl_no  = Column(BigInteger  , nullable=True )
    sub_batch_name  = Column(String(30)  , nullable=True )
    su_id  = Column(BigInteger  , nullable=True )
    system_status_code  = Column(String(30)  , nullable=True )
    system_status_text  = Column(String(2000)  , nullable=True )
    tax_code_id  = Column(BigInteger  , nullable=True )
    t_additionalcharges  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    t_attribute1  = Column(String(400)  , nullable=True )
    t_attribute2  = Column(String(400)  , nullable=True )
    t_batchnumber  = Column(String(140)  , nullable=True )
    t_buyeraddress1  = Column(String(140)  , nullable=True )
    t_buyeraddress2  = Column(String(140)  , nullable=True )
    t_buyeraddress3  = Column(String(140)  , nullable=True )
    t_buyercity  = Column(String(140)  , nullable=True )
    t_buyercountry  = Column(String(140)  , nullable=True )
    t_buyercounty  = Column(String(140)  , nullable=True )
    t_buyeremail  = Column(String(140)  , nullable=True )
    t_buyername  = Column(String(140)  , nullable=True )
    t_buyerphone  = Column(String(140)  , nullable=True )
    t_buyerpostcode  = Column(String(140)  , nullable=True )
    t_cashondeliveryoption  = Column(String(140)  , nullable=True )
    t_checkedoutdate  = Column(DateTime(timezone=True)  , nullable=True )
    t_customlabel  = Column(String(140)  , nullable=True )
    t_delivertoaddress1  = Column(String(140)  , nullable=True )
    t_delivertoaddress2  = Column(String(140)  , nullable=True )
    t_delivertoaddress3  = Column(String(140)  , nullable=True )
    t_delivertocity  = Column(String(140)  , nullable=True )
    t_delivertocountry  = Column(String(140)  , nullable=True )
    t_delivertocounty  = Column(String(140)  , nullable=True )
    t_delivertoemail  = Column(String(140)  , nullable=True )
    t_delivertoname  = Column(String(140)  , nullable=True )
    t_delivertophone  = Column(String(140)  , nullable=True )
    t_delivertopostcode  = Column(String(140)  , nullable=True )
    t_discount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    t_groupnumber  = Column(String(140)  , nullable=True )
    t_insurance  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    t_itemname  = Column(String(140)  , nullable=True )
    t_itemnumber  = Column(String(140)  , nullable=True )
    t_linetotal  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    t_netprice  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    t_notes1  = Column(String(1000)  , nullable=True )
    t_notes2  = Column(String(1000)  , nullable=True )
    t_notestosupplier  = Column(String(1000)  , nullable=True )
    t_ordercurrencycode  = Column(String(30)  , nullable=True )
    t_orderdate  = Column(DateTime(timezone=True)  , nullable=True )
    t_ordernumber  = Column(String(140)  , nullable=True )
    t_paiddate  = Column(DateTime(timezone=True)  , nullable=True )
    t_paycurrencycode  = Column(String(30)  , nullable=True )
    t_paymentmethod  = Column(String(140)  , nullable=True )
    t_paymentreference  = Column(String(140)  , nullable=True )
    t_postage  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    t_postageservice  = Column(String(140)  , nullable=True )
    t_quantity  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    t_receivefeedback  = Column(String(30)  , nullable=True )
    t_taxamount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    t_taxincluded  = Column(String(1) ,default='Y'  , nullable=True )
    t_taxrate  = Column(String(140)  , nullable=True )
    t_transactionid  = Column(String(140)  , nullable=True )
    t_transactionlineid  = Column(String(140)  , nullable=True )
    t_unitpriceexltax  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    t_unitpriceinctax  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    t_username  = Column(String(140)  , nullable=True )
    t_variation  = Column(String(400)  , nullable=True )
    t_voucher  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    user_status  = Column(String(30)  , nullable=True )
    user_status_text  = Column(String(1000)  , nullable=True )


class ArSalesorderLines(Base, AuditColumns):
    __tablename__ = 'ar_salesorder_lines'
    __table_args__ = {'extend_existing': True}
    barcode  = Column(String(30)  , nullable=True )
    cancelled_amount  = Column(BigInteger  , nullable=True )
    cancelled_by  = Column(BigInteger  , nullable=True )
    cancelled_date  = Column(DateTime(timezone=True)  , nullable=True )
    cancelled_reason  = Column(String(240)  , nullable=True )
    carriage_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    credit_order_header_id  = Column(BigInteger  , nullable=True )
    credit_order_line_id  = Column(BigInteger  , nullable=True )
    delivery_batch  = Column(String(140)  , nullable=True )
    delivery_date  = Column(DateTime(timezone=True)  , nullable=True )
    delivery_lead_time  = Column(BigInteger  , nullable=True )
    delivery_reference  = Column(String(140)  , nullable=True )
    delivery_status  = Column(String(30)  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    discounted_user_id  = Column(BigInteger  , nullable=True )
    discount_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    discount_type  = Column(String(10)  , nullable=True )
    discount_value  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    exchange_rate  = Column(Numeric(precision=22, scale=6)  , nullable=True )
    external_ref1  = Column(String(240)  , nullable=True )
    external_ref2  = Column(String(240)  , nullable=True )
    external_ref3  = Column(String(240)  , nullable=True )
    external_ref4  = Column(String(240)  , nullable=True )
    external_ref5  = Column(String(240)  , nullable=True )
    external_ref6  = Column(String(240)  , nullable=True )
    freight_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    gl_account_code  = Column(BigInteger  , nullable=True )
    gross_unit_weight  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    invoice_line_status  = Column(String(30)  , nullable=True )
    invoice_unit_sp_inctax  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    item_id  = Column(BigInteger  , nullable=True )
    item_name  = Column(String(240)  , nullable=True )
    item_price_id  = Column(BigInteger  , nullable=True )
    item_price_type_id  = Column(BigInteger  , nullable=True )
    item_unit_sp  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    needby_date  = Column(DateTime(timezone=True)  , nullable=True )
    net_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    net_ingredient  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    net_total_after_discount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    notes1  = Column(String(2000)  , nullable=True )
    offer_attribute1  = Column(String(240)  , nullable=True )
    offer_attribute2  = Column(String(240)  , nullable=True )
    offer_attribute3  = Column(String(240)  , nullable=True )
    offer_price_type_id  = Column(BigInteger  , nullable=True )
    offer_text  = Column(String(2000)  , nullable=True )
    offer_type  = Column(String(30)  , nullable=True )
    offer_unit_sp  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    order_header_id  = Column(BigInteger  , nullable=True )
    order_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    order_line_status  = Column(String(30)  , nullable=True )
    order_line_status_date  = Column(DateTime(timezone=True)  , nullable=True )
    order_line_type  = Column(String(30)  , nullable=True )
    order_price_type_id  = Column(BigInteger  , nullable=True )
    order_unit_sp  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    orig_sys_ref_header  = Column(String(30)  , nullable=True )
    orig_sys_ref_line  = Column(String(30)  , nullable=True )
    other_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    phase_code  = Column(String(30) ,default='NEW'  , nullable=True )
    picked_location_id  = Column(BigInteger  , nullable=True )
    picked_sub_location_id  = Column(BigInteger  , nullable=True )
    po_header_id  = Column(BigInteger  , nullable=True )
    priceover_user_id  = Column(BigInteger  , nullable=True )
    price_overridden  = Column(String(1)  , nullable=True )
    promised_date  = Column(DateTime(timezone=True)  , nullable=True )
    qty_allocated_units  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_balance_units  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    qty_cancelled_units  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    qty_delivered_units  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_invoiced_units  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    qty_in_stock  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_ordered_units  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    qty_picked_units  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    qty_requisition_units  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_shipped_units  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    qty_userpicked_units  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    refund_from_prev_sale  = Column(String(1)  , nullable=True )
    returned_location_id  = Column(BigInteger  , nullable=True )
    returned_sub_location_id  = Column(BigInteger  , nullable=True )
    sales_unit  = Column(Integer  , nullable=True )
    sales_unit_cp  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    saved_net_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    saved_unit_sp  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    sl_no  = Column(Integer  , nullable=True )
    su_id  = Column(BigInteger  , nullable=True )
    tax_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    tax_code_id  = Column(BigInteger , ForeignKey('cmn_tax_codes.tax_code_id')  , nullable=True )
    tax_exempt_flag  = Column(String(1)  , nullable=True )
    tax_exempt_number  = Column(String(80)  , nullable=True )
    tax_exempt_reason_code  = Column(String(30)  , nullable=True )
    tax_rate  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    total_line_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    t_additionalcharges  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    t_attribute1  = Column(String(400)  , nullable=True )
    t_attribute2  = Column(String(400)  , nullable=True )
    t_batchnumber  = Column(String(140)  , nullable=True )
    t_buyeraddress1  = Column(String(140)  , nullable=True )
    t_buyeraddress2  = Column(String(140)  , nullable=True )
    t_buyeraddress3  = Column(String(140)  , nullable=True )
    t_buyercity  = Column(String(140)  , nullable=True )
    t_buyercountry  = Column(String(140)  , nullable=True )
    t_buyercounty  = Column(String(140)  , nullable=True )
    t_buyeremail  = Column(String(140)  , nullable=True )
    t_buyername  = Column(String(140)  , nullable=True )
    t_buyerphone  = Column(String(140)  , nullable=True )
    t_buyerpostcode  = Column(String(140)  , nullable=True )
    t_cashondeliveryoption  = Column(String(140)  , nullable=True )
    t_checkedoutdate  = Column(DateTime(timezone=True)  , nullable=True )
    t_customlabel  = Column(String(140)  , nullable=True )
    t_delivertoaddress1  = Column(String(140)  , nullable=True )
    t_delivertoaddress2  = Column(String(140)  , nullable=True )
    t_delivertoaddress3  = Column(String(140)  , nullable=True )
    t_delivertocity  = Column(String(140)  , nullable=True )
    t_delivertocountry  = Column(String(140)  , nullable=True )
    t_delivertocounty  = Column(String(140)  , nullable=True )
    t_delivertoemail  = Column(String(140)  , nullable=True )
    t_delivertoname  = Column(String(140)  , nullable=True )
    t_delivertophone  = Column(String(140)  , nullable=True )
    t_delivertopostcode  = Column(String(140)  , nullable=True )
    t_discount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    t_groupnumber  = Column(String(140)  , nullable=True )
    t_insurance  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    t_itemname  = Column(String(140)  , nullable=True )
    t_itemnumber  = Column(String(140)  , nullable=True )
    t_linenumber  = Column(BigInteger  , nullable=True )
    t_linetotal  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    t_netprice  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    t_notes1  = Column(String(1000)  , nullable=True )
    t_notes2  = Column(String(1000)  , nullable=True )
    t_notestosupplier  = Column(String(1000)  , nullable=True )
    t_orderdate  = Column(DateTime(timezone=True)  , nullable=True )
    t_ordernumber  = Column(String(140)  , nullable=True )
    t_paiddate  = Column(DateTime(timezone=True)  , nullable=True )
    t_paymentmethod  = Column(String(140)  , nullable=True )
    t_paymentreference  = Column(String(140)  , nullable=True )
    t_postage  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    t_postageservice  = Column(String(140)  , nullable=True )
    t_quantity  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    t_receivefeedback  = Column(String(30)  , nullable=True )
    t_taxamount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    t_taxincluded  = Column(String(1) ,default='Y'  , nullable=True )
    t_taxrate  = Column(String(140)  , nullable=True )
    t_transactionid  = Column(String(140)  , nullable=True )
    t_transactionlineid  = Column(String(140)  , nullable=True )
    t_unitpriceexltax  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    t_unitpriceinctax  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    t_username  = Column(String(140)  , nullable=True )
    t_variation  = Column(String(400)  , nullable=True )
    t_voucher  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    unit_cp  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    unit_tax_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    unit_volume  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    unknown_item_name  = Column(String(150)  , nullable=True )
    uom_id  = Column(BigInteger  , nullable=True )
    #c_ardeliverylines  = relationship("ArDeliveryLines")
    #c_arinvoicelines  = relationship("ArInvoiceLines")
    #c_aritemfulfillment  = relationship("ArItemFulfillment")
    #c_arsalesorderpicklist  = relationship("ArSalesorderPicklist")
    #c_arsalesorderstatuses  = relationship("ArSalesorderStatuses")
    #c_invbomtrans  = relationship("InvBomTrans")


class ArSalesorderPicklist(Base, AuditColumns):
    __tablename__ = 'ar_salesorder_picklist'
    __table_args__ = {'extend_existing': True}
    comments  = Column(String(1000)  , nullable=True )
    delivery_header_id  = Column(BigInteger  , nullable=True )
    delivery_line_id  = Column(BigInteger  , nullable=True )
    invoice_header_id  = Column(BigInteger  , nullable=True )
    invoice_line_id  = Column(BigInteger  , nullable=True )
    item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=True )
    location_id  = Column(BigInteger  , nullable=True )
    order_header_id  = Column(BigInteger , ForeignKey('ar_salesorder_headers.order_header_id')  , nullable=False )
    order_line_id  = Column(BigInteger , ForeignKey('ar_salesorder_lines.order_line_id')  , nullable=True )
    picklist_id  = Column(BigInteger, primary_key=True  , nullable=False )
    picklist_status  = Column(String(30)  , nullable=True )
    picklist_status_date  = Column(DateTime(timezone=True)  , nullable=True )
    quantity  = Column(BigInteger  , nullable=True )
    sub_location_id  = Column(BigInteger  , nullable=True )
    transaction_source  = Column(String(30)  , nullable=True )


class ArSalesorderStatuses(Base, AuditColumns):
    __tablename__ = 'ar_salesorder_statuses'
    __table_args__ = {'extend_existing': True}
    comments  = Column(String(2000)  , nullable=True )
    hold  = Column(String(1) ,default='N'  , nullable=True )
    invoice_header_id  = Column(BigInteger  , nullable=True )
    invoice_line_id  = Column(BigInteger  , nullable=True )
    order_header_id  = Column(BigInteger , ForeignKey('ar_salesorder_headers.order_header_id')  , nullable=False )
    order_line_id  = Column(BigInteger , ForeignKey('ar_salesorder_lines.order_line_id')  , nullable=True )
    reason_code_id  = Column(BigInteger  , nullable=True )
    reason_description  = Column(String(240)  , nullable=True )
    release  = Column(String(1) ,default='N'  , nullable=True )
    release_comment  = Column(String(2000)  , nullable=True )
    status_id  = Column(BigInteger, primary_key=True  , nullable=False )
    transaction_source  = Column(String(30)  , nullable=True )


class ArSalesPersons(Base, AuditColumns):
    __tablename__ = 'ar_sales_persons'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    address  = Column(String(240)  , nullable=True )
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    attribute5  = Column(String(240)  , nullable=True )
    attribute6  = Column(String(240)  , nullable=True )
    city  = Column(String(40)  , nullable=True )
    country_code  = Column(String(10)  , nullable=True )
    county  = Column(String(40)  , nullable=True )
    date_of_birth  = Column(DateTime(timezone=True)  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    email  = Column(String(240)  , nullable=True )
    employee_id  = Column(BigInteger  , nullable=True )
    end_date  = Column(DateTime(timezone=True)  , nullable=True )
    first_name  = Column(String(50)  , nullable=False )
    full_name  = Column(String(240)  , nullable=False )
    gl_account_id  = Column(BigInteger  , nullable=True )
    last_name  = Column(String(50)  , nullable=False )
    middle_name  = Column(String(50)  , nullable=True )
    mobile  = Column(String(20)  , nullable=True )
    phone1  = Column(String(20)  , nullable=True )
    phone2  = Column(String(20)  , nullable=True )
    post_code  = Column(String(10)  , nullable=True )
    sales_person_area_code  = Column(String(30)  , nullable=True )
    sales_person_group_code  = Column(String(30)  , nullable=True )
    sales_person_id  = Column(BigInteger, primary_key=True  , nullable=False )
    sales_person_number  = Column(String(30)  , nullable=False, unique=True )
    sales_person_region_code  = Column(String(30)  , nullable=True )
    sex  = Column(String(1) ,default='N'  , nullable=True )
    start_date  = Column(DateTime(timezone=True)  , nullable=True )
    title  = Column(String(20)  , nullable=True )
    #c_arsalcrgroupmembers  = relationship("ArSalcrGroupMembers")


class ArSoimportBatch(Base, AuditColumns):
    __tablename__ = 'ar_soimport_batch'
    __table_args__ = {'extend_existing': True}
    additional_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    batch_id  = Column(BigInteger, primary_key=True  , nullable=False )
    batch_name  = Column(String(30)  , nullable=True )
    customer_id  = Column(BigInteger  , nullable=True )
    customer_name  = Column(String(1000)  , nullable=True )
    customer_number  = Column(String(30)  , nullable=True )
    discount_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    gross_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    import_date  = Column(DateTime(timezone=True)  , nullable=True )
    import_status  = Column(String(30)  , nullable=True )
    import_template_name  = Column(String(100)  , nullable=True )
    insurance_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    lines_ok  = Column(BigInteger  , nullable=True )
    lines_rejected  = Column(BigInteger  , nullable=True )
    location_id  = Column(BigInteger  , nullable=True )
    net_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    order_category_code  = Column(String(30)  , nullable=True )
    order_currency_code  = Column(String(30)  , nullable=True )
    order_header_id  = Column(BigInteger  , nullable=True )
    order_source  = Column(String(30)  , nullable=True )
    order_type  = Column(String(30)  , nullable=True )
    other_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    pay_currency_code  = Column(String(30)  , nullable=True )
    phase_code  = Column(String(30)  , nullable=True )
    postage_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    price_hint  = Column(String(30) ,default='SOURCE'  , nullable=True )
    system_status_code  = Column(String(30)  , nullable=True )
    system_status_text  = Column(String(2000)  , nullable=True )
    tax_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    total_lines  = Column(BigInteger  , nullable=True )
    user_status  = Column(String(30)  , nullable=True )
    user_status_text  = Column(String(1000)  , nullable=True )
    #c_arsalesorderimport  = relationship("ArSalesorderImport")


class AuditMinusstock(Base, AuditColumns):
    __tablename__ = 'audit_minusstock'
    __table_args__ = {'extend_existing': True}
    audit_date  = Column(DateTime(timezone=True)  , nullable=True )
    audit_source  = Column(String(30)  , nullable=True )
    audit_source_ref  = Column(String(30)  , nullable=True )
    item_id  = Column(BigInteger  , nullable=True )
    location_id  = Column(BigInteger  , nullable=True )
    minusstock_id  = Column(BigInteger, primary_key=True  , nullable=False )
    minus_quantity  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    sub_location_id  = Column(BigInteger  , nullable=True )
    total_minus_quantity  = Column(Numeric(precision=12, scale=3)  , nullable=True )


class CmnAdditionalInfo(Base, AuditColumns):
    __tablename__ = 'cmn_additional_info'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    date_active_from  = Column(DateTime(timezone=True)  , nullable=True )
    date_active_to  = Column(DateTime(timezone=True)  , nullable=True )
    info_attribute1  = Column(String(2000)  , nullable=True )
    info_attribute2  = Column(String(2000)  , nullable=True )
    info_attribute3  = Column(String(2000)  , nullable=True )
    info_attribute4  = Column(String(2000)  , nullable=True )
    info_attribute5  = Column(String(2000)  , nullable=True )
    info_attribute6  = Column(String(2000)  , nullable=True )
    info_group_code  = Column(String(30)  , nullable=False )
    info_id  = Column(BigInteger, primary_key=True  , nullable=False )
    info_position  = Column(String(30)  , nullable=True )
    info_source  = Column(String(30)  , nullable=False )
    info_source_id  = Column(BigInteger  , nullable=False )
    info_type_code  = Column(String(30)  , nullable=False )
    sl_no  = Column(BigInteger  , nullable=True )


class CmnAlerts(Base, AuditColumns):
    __tablename__ = 'cmn_alerts'
    __table_args__ = {'extend_existing': True}
    alert_category_code  = Column(String(30)  , nullable=False )
    alert_event  = Column(String(30)  , nullable=True )
    alert_id  = Column(BigInteger, primary_key=True  , nullable=False )
    alert_method_code  = Column(String(30)  , nullable=True )
    alt_source_id  = Column(BigInteger  , nullable=True )
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    attribute5  = Column(String(240)  , nullable=True )
    attribute6  = Column(String(240)  , nullable=True )
    description  = Column(String(240)  , nullable=False )
    end_date_active  = Column(DateTime(timezone=True)  , nullable=True )
    name  = Column(String(30)  , nullable=False )
    sl_no  = Column(BigInteger  , nullable=False )
    source  = Column(String(30)  , nullable=False )
    source_id  = Column(BigInteger  , nullable=False )
    start_date_active  = Column(DateTime(timezone=True)  , nullable=True )


class CmnAuditLogins(Base, AuditColumns):
    __tablename__ = 'cmn_audit_logins'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1)  , nullable=True )
    comments  = Column(String(100)  , nullable=True )
    end_datetime  = Column(DateTime(timezone=True)  , nullable=True )
    id  = Column(BigInteger, primary_key=True  , nullable=False )
    login_name  = Column(String(20)  , nullable=True )
    multi_user  = Column(String(1)  , nullable=True )
    start_datetime  = Column(DateTime(timezone=True)  , nullable=True )
    terminal_name  = Column(String(100)  , nullable=True )
    what  = Column(String(50)  , nullable=True )


class CmnBanks(Base, AuditColumns):
    __tablename__ = 'cmn_banks'
    __table_args__ = {'extend_existing': True}
    bank_id  = Column(BigInteger, primary_key=True  , nullable=False )
    bank_name  = Column(String(40)  , nullable=True )
    credit_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    debit_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    #c_cmnbankaccounts  = relationship("CmnBankAccounts")
    #c_cmnpayments  = relationship("CmnPayments")


class CmnBankAccounts(Base, AuditColumns):
    __tablename__ = 'cmn_bank_accounts'
    __table_args__ = {'extend_existing': True}
    bank_account_id  = Column(BigInteger, primary_key=True  , nullable=False )
    bank_branch_city  = Column(String(40)  , nullable=True )
    bank_branch_county  = Column(String(40)  , nullable=True )
    bic  = Column(String(100)  , nullable=True )
    branch_acctname  = Column(String(50)  , nullable=True )
    branch_acctnumber  = Column(String(20)  , nullable=True )
    branch_address_line1  = Column(String(240)  , nullable=True )
    branch_address_line2  = Column(String(50)  , nullable=True )
    branch_address_line3  = Column(String(50)  , nullable=True )
    branch_allow_payin  = Column(String(1)  , nullable=True )
    branch_allow_payout  = Column(String(1)  , nullable=True )
    branch_code  = Column(String(20)  , nullable=True )
    branch_desc  = Column(String(40)  , nullable=True )
    branch_phone  = Column(String(100)  , nullable=True )
    branch_post_code  = Column(String(10)  , nullable=True )
    branch_used_for  = Column(String(30)  , nullable=True )
    cb_bank_id  = Column(BigInteger , ForeignKey('cmn_banks.bank_id')  , nullable=True )
    country_code  = Column(String(10)  , nullable=True )
    credit_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    currency_code  = Column(String(10)  , nullable=True )
    debit_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    gac_gl_account_id  = Column(BigInteger , ForeignKey('gl_account_codes.gl_account_id')  , nullable=True )
    iban  = Column(String(100)  , nullable=True )
    swift  = Column(String(100)  , nullable=True )
    #c_cmnbankcheques  = relationship("CmnBankCheques")
    #c_cmnpayments  = relationship("CmnPayments")
    #c_glcashingupheaders  = relationship("GlCashingupHeaders")


class CmnBankCheques(Base, AuditColumns):
    __tablename__ = 'cmn_bank_cheques'
    __table_args__ = {'extend_existing': True}
    bank_id  = Column(BigInteger, primary_key=True  , nullable=False )
    cba_bank_account_id  = Column(BigInteger , ForeignKey('cmn_bank_accounts.bank_account_id'), primary_key=True  , nullable=False )
    cheque_no_from  = Column(BigInteger  , nullable=True )
    cheque_no_to  = Column(BigInteger  , nullable=True )
    date_issued  = Column(DateTime(timezone=True)  , nullable=True )


class CmnBankStatements(Base, AuditColumns):
    __tablename__ = 'cmn_bank_statements'
    __table_args__ = {'extend_existing': True}
    bank_account_id  = Column(BigInteger  , nullable=True )
    bank_id  = Column(BigInteger  , nullable=True )
    cbs_id  = Column(BigInteger, primary_key=True  , nullable=False )
    cheque_no  = Column(String(20)  , nullable=True )
    credit_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    cust_id  = Column(BigInteger  , nullable=True )
    debit_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    reference_id  = Column(BigInteger  , nullable=True )
    stmnt_date  = Column(DateTime(timezone=True)  , nullable=True )
    stmnt_desc  = Column(String(240)  , nullable=True )
    stmnt_id  = Column(BigInteger  , nullable=True )
    stmnt_line_balance  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    stmnt_month  = Column(String(20)  , nullable=True )
    stmnt_paid_to  = Column(String(50)  , nullable=True )
    stmnt_rec_from  = Column(String(50)  , nullable=True )
    stmnt_year  = Column(Integer  , nullable=True )
    sup_id  = Column(BigInteger  , nullable=True )


class CmnBusinessSectors(Base, AuditColumns):
    __tablename__ = 'cmn_business_sectors'
    __table_args__ = {'extend_existing': True}
    cbs1_id  = Column(BigInteger, primary_key=True  , nullable=False )
    sector_code  = Column(String(30)  , nullable=True )
    sector_desc  = Column(String(50)  , nullable=True )


class CmnBusinessUnits(Base, AuditColumnsxBuId):
    __tablename__ = 'cmn_business_units'
    __table_args__ = {'extend_existing': True}
    bu_id = Column(BigInteger, primary_key=True, nullable=False)
    bu_address_line1  = Column(String(250)  , nullable=True )
    bu_address_line2  = Column(String(50)  , nullable=True )
    bu_address_line3  = Column(String(50)  , nullable=True )
    bu_city  = Column(String(40)  , nullable=True )
    bu_county  = Column(String(40)  , nullable=True )
    bu_fax  = Column(String(20)  , nullable=True )
    bu_inv_footer  = Column(String(255)  , nullable=True )
    bu_name  = Column(String(50)  , nullable=False )
    bu_phone  = Column(String(20)  , nullable=True )
    bu_post_code  = Column(String(10)  , nullable=True )
    bu_short_name  = Column(String(40)  , nullable=True )
    cc1_currency_code  = Column(String(5)  , nullable=True )
    cc1_cur_country  = Column(String(100)  , nullable=True )
    cco_country_code  = Column(String(10) , ForeignKey('cmn_countries.country_code')  , nullable=True )
    cc_comp_id  = Column(BigInteger , ForeignKey('cmn_companies.comp_id')  , nullable=True )
    email  = Column(String(100)  , nullable=True )
    eori_number  = Column(String(40)  , nullable=True )
    gl_account_id  = Column(BigInteger  , nullable=True )
    orig_system_ref_char  = Column(String(30)  , nullable=True )
    orig_system_ref_num  = Column(BigInteger  , nullable=True )
    url  = Column(String(240)  , nullable=True )


class CmnCalendar(Base, AuditColumns):
    __tablename__ = 'cmn_calendar'
    __table_args__ = {'extend_existing': True}
    cc_date  = Column(DateTime(timezone=True)  , nullable=False )
    cc_id  = Column(BigInteger, primary_key=True  , nullable=False )
    cc_type  = Column(String(30)  , nullable=False )
    day_of_month  = Column(Integer  , nullable=False )
    day_of_week  = Column(Integer  , nullable=False )
    day_of_year  = Column(Integer  , nullable=False )
    full_day_name  = Column(String(30)  , nullable=False )
    full_month_name  = Column(String(30)  , nullable=False )
    month  = Column(Integer  , nullable=True )
    short_day_name  = Column(String(5)  , nullable=False )
    short_month_name  = Column(String(5)  , nullable=False )
    week_of_month  = Column(Integer  , nullable=False )
    week_of_year  = Column(Integer  , nullable=False )
    week_of_year_iso  = Column(Integer  , nullable=False )
    year  = Column(Integer  , nullable=False )


class CmnCards(Base, AuditColumns):
    __tablename__ = 'cmn_cards'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    askfor_pin  = Column(String(1) ,default='N'  , nullable=True )
    card_category_code  = Column(String(30)  , nullable=True )
    card_id  = Column(BigInteger, primary_key=True  , nullable=False )
    card_number  = Column(String(30)  , nullable=True , unique=True)
    card_pin  = Column(String(30)  , nullable=True )
    card_source_id  = Column(BigInteger  , nullable=False )
    description  = Column(String(240)  , nullable=True )
    issued_on  = Column(DateTime(timezone=True), server_default=func.now() , nullable=True )
    valid_from  = Column(DateTime(timezone=True)  , nullable=True )
    valid_to  = Column(DateTime(timezone=True)  , nullable=True )


class CmnCardOptions(Base, AuditColumns):
    __tablename__ = 'cmn_card_options'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    askfor_pin  = Column(String(1) ,default='N'  , nullable=True )
    card_category_code  = Column(String(30)  , nullable=True )
    card_options_id  = Column(BigInteger, primary_key=True  , nullable=False )
    card_prefix_code  = Column(String(10)  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    identifier  = Column(String(30)  , nullable=True )


class CmnClockinout(Base, AuditColumns):
    __tablename__ = 'cmn_clockinout'
    __table_args__ = {'extend_existing': True}
    card_number  = Column(String(30)  , nullable=True )
    clockinout_category_code  = Column(String(30) ,default='USER'  , nullable=True )
    clockinout_id  = Column(BigInteger, primary_key=True  , nullable=False )
    clockinout_source  = Column(String(30) ,default='USER'  , nullable=True )
    clockin_date  = Column(DateTime(timezone=True), server_default=func.now() , nullable=True )
    clockout_date  = Column(DateTime(timezone=True)  , nullable=True )
    customer_id  = Column(BigInteger  , nullable=True )
    customer_name  = Column(String(240)  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    employee_id  = Column(BigInteger  , nullable=True )
    employee_name  = Column(String(240)  , nullable=True )
    location_id  = Column(BigInteger  , nullable=True )
    location_name  = Column(String(240)  , nullable=True )
    record_type  = Column(String(10)  , nullable=False )
    user_id  = Column(BigInteger  , nullable=False )
    user_name  = Column(String(30)  , nullable=True )


class CmnCommodityCodes(Base, AuditColumns):
    __tablename__ = 'cmn_commodity_codes'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1)  , nullable=True )
    additional_codes  = Column(String(400)  , nullable=True )
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    attribute5  = Column(String(240)  , nullable=True )
    attribute6  = Column(String(240)  , nullable=True )
    ccc_id  = Column(BigInteger, primary_key=True  , nullable=False )
    chapter  = Column(String(30)  , nullable=True )
    commodity_code  = Column(String(30)  , nullable=False )
    conditions  = Column(String(2000)  , nullable=True )
    description  = Column(String(2000)  , nullable=True )
    end_date_active  = Column(DateTime(timezone=True)  , nullable=True )
    exclusions  = Column(String(2000)  , nullable=True )
    footnote  = Column(String(400)  , nullable=True )
    heading  = Column(String(30)  , nullable=True )
    legal_act  = Column(String(400)  , nullable=True )
    measure_type  = Column(String(400)  , nullable=True )
    name  = Column(String(2000)  , nullable=True )
    section  = Column(String(30)  , nullable=True )
    start_date_active  = Column(DateTime(timezone=True)  , nullable=True )
    #c_cmncommodityrates  = relationship("CmnCommodityRates")


class CmnCommodityRates(Base, AuditColumns):
    __tablename__ = 'cmn_commodity_rates'
    __table_args__ = {'extend_existing': True}
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    attribute5  = Column(String(240)  , nullable=True )
    attribute6  = Column(String(240)  , nullable=True )
    ccc_id  = Column(BigInteger , ForeignKey('cmn_commodity_codes.ccc_id')  , nullable=False )
    ccr_id  = Column(BigInteger, primary_key=True  , nullable=False )
    country_code  = Column(String(10)  , nullable=True )
    description  = Column(String(2000)  , nullable=True )
    duty_rate  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    end_date_active  = Column(DateTime(timezone=True)  , nullable=True )
    start_date_active  = Column(DateTime(timezone=True)  , nullable=True )


class CmnCommunications(Base, AuditColumns):
    __tablename__ = 'cmn_communications'
    __table_args__ = {'extend_existing': True}
    alt_source_id  = Column(BigInteger  , nullable=True )
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    attribute5  = Column(String(240)  , nullable=True )
    attribute6  = Column(String(240)  , nullable=True )
    communication_category_code  = Column(String(30)  , nullable=True )
    communication_id  = Column(BigInteger, primary_key=True  , nullable=False )
    communication_type_code  = Column(String(30)  , nullable=False )
    description  = Column(String(2000)  , nullable=False )
    end_date_active  = Column(DateTime(timezone=True)  , nullable=True )
    name  = Column(String(30)  , nullable=False )
    sl_no  = Column(BigInteger  , nullable=False )
    source  = Column(String(30)  , nullable=False )
    source_id  = Column(BigInteger  , nullable=False )
    start_date_active  = Column(DateTime(timezone=True)  , nullable=True )


class CmnCompanies(Base, AuditColumnsxBuId):
    __tablename__ = 'cmn_companies'
    __table_args__ = {'extend_existing': True}
    attribute1  = Column(String(2000)  , nullable=True )
    attribute2  = Column(String(2000)  , nullable=True )
    cc1_currency_code  = Column(String(5)  , nullable=True )
    cc1_cur_country  = Column(String(100)  , nullable=True )
    cco_country_code  = Column(String(10) , ForeignKey('cmn_countries.country_code')  , nullable=True )
    comp_address_line1  = Column(String(250)  , nullable=True )
    comp_address_line2  = Column(String(25)  , nullable=True )
    comp_address_line3  = Column(String(25)  , nullable=True )
    comp_city  = Column(String(25)  , nullable=True )
    comp_county  = Column(String(25)  , nullable=True )
    comp_email  = Column(String(400)  , nullable=True )
    comp_fax  = Column(String(30)  , nullable=True )
    comp_id  = Column(BigInteger, primary_key=True  , nullable=False )
    comp_name  = Column(String(50)  , nullable=True )
    comp_phone1  = Column(String(30)  , nullable=True )
    comp_phone2  = Column(String(30)  , nullable=True )
    comp_post_code  = Column(String(10)  , nullable=True )
    comp_reg_no  = Column(String(100)  , nullable=True )
    comp_slogan  = Column(String(150)  , nullable=True )
    comp_trading_name  = Column(String(30)  , nullable=True )
    comp_vat_reg_no  = Column(String(100)  , nullable=True )
    gl_account_id  = Column(BigInteger  , nullable=True )
    orig_system_ref_code  = Column(String(30)  , nullable=True )
    orig_system_ref_desc  = Column(String(240)  , nullable=True )
    url  = Column(String(240)  , nullable=True )
    #c_cmnbusinessunits  = relationship("CmnBusinessUnits")


class CmnContacts(Base, AuditColumns):
    __tablename__ = 'cmn_contacts'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    address  = Column(String(255)  , nullable=False )
    city  = Column(String(40)  , nullable=True )
    contact_group_code  = Column(String(30)  , nullable=False )
    contact_id  = Column(BigInteger, primary_key=True  , nullable=False )
    contact_method_code  = Column(String(30)  , nullable=True )
    contact_source  = Column(String(30)  , nullable=False )
    contact_source_id  = Column(BigInteger  , nullable=False )
    contact_type_code  = Column(String(30)  , nullable=False )
    country_code  = Column(String(10)  , nullable=False )
    county  = Column(String(40)  , nullable=True )
    email  = Column(String(255)  , nullable=True )
    fax_business  = Column(String(20)  , nullable=True )
    fax_others  = Column(String(255)  , nullable=True )
    identifier  = Column(String(30)  , nullable=True )
    include_in_mailshot  = Column(String(1) ,default='N'  , nullable=True )
    name  = Column(String(240)  , nullable=True )
    phone_business  = Column(String(20)  , nullable=True )
    phone_home  = Column(String(20)  , nullable=True )
    phone_mobile  = Column(String(20)  , nullable=True )
    phone_others  = Column(String(255)  , nullable=True )
    post_code  = Column(String(10)  , nullable=True )


class CmnContactPermissions(Base, AuditColumns):
    __tablename__ = 'cmn_contact_permissions'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    contact_method_code  = Column(String(30)  , nullable=True )
    permission_group_code  = Column(String(30)  , nullable=False )
    permission_id  = Column(BigInteger, primary_key=True  , nullable=False )
    permission_source  = Column(String(30)  , nullable=True )
    permission_source_id  = Column(BigInteger  , nullable=False )
    permission_type_code  = Column(String(30)  , nullable=False )
    subscribed_by  = Column(String(200)  , nullable=True )
    subscription_date  = Column(DateTime(timezone=True)  , nullable=True )
    subscription_method  = Column(String(30)  , nullable=True )
    subscription_notes  = Column(String(4000)  , nullable=True )
    subscription_type  = Column(String(30)  , nullable=True )


class CmnContainers(Base, AuditColumns):
    __tablename__ = 'cmn_containers'
    __table_args__ = {'extend_existing': True}
    container_category  = Column(String(30)  , nullable=True )
    container_recycle_code  = Column(String(30)  , nullable=True )
    container_type  = Column(String(30)  , nullable=True )
    dynamic_load_kg  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    noof_entry_ways  = Column(Integer  , nullable=True )
    pc_code  = Column(String(30)  , nullable=True )
    pc_default_type  = Column(String(30)  , nullable=True )
    pc_height  = Column(Numeric(precision=8, scale=3)  , nullable=True )
    pc_height_inches  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    pc_height_mm  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    pc_id  = Column(BigInteger, primary_key=True  , nullable=False )
    pc_length  = Column(Numeric(precision=8, scale=3)  , nullable=True )
    pc_length_inches  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    pc_length_mm  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    pc_max_volume  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    pc_max_weight  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    pc_name  = Column(String(30)  , nullable=True )
    pc_pack_size  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    pc_pallet_qty  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    pc_volume  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    pc_weight  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    pc_width  = Column(Numeric(precision=8, scale=3)  , nullable=True )
    pc_width_inches  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    pc_width_mm  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    static_load_kg  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    tare_kg  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    #c_apsuppliers  = relationship("ApSuppliers")
    #c_palletboxes  = relationship("PalletBoxes")
    #c_palletheaders  = relationship("PalletHeaders")


class CmnCountries(Base, AuditColumns):
    __tablename__ = 'cmn_countries'
    __table_args__ = {'extend_existing': True}
    country_code  = Column(String(10), primary_key=True  , nullable=False )
    country_name  = Column(String(100)  , nullable=True )
    country_region_code  = Column(String(30)  , nullable=True )
    language_code  = Column(String(10) , ForeignKey('cmn_languages.language_code')  , nullable=True )
    #c_arfreightcountries  = relationship("ArFreightCountries")
    #c_cmnbusinessunits  = relationship("CmnBusinessUnits")
    #c_cmncompanies  = relationship("CmnCompanies")
    #c_invitemfreights  = relationship("InvItemFreights")
    #c_wwwsubsources  = relationship("WwwSubSources")


class CmnCurrencies(Base, AuditColumns):
    __tablename__ = 'cmn_currencies'
    __table_args__ = {'extend_existing': True}
    currency_code  = Column(String(5), primary_key=True  , nullable=False )
    currency_name  = Column(String(100)  , nullable=True )
    cur_active  = Column(String(1)  , nullable=True )
    cur_country  = Column(String(100), primary_key=True  , nullable=False )
    cur_desc  = Column(String(100)  , nullable=True )
    cur_numeric  = Column(BigInteger  , nullable=True )
    cur_symbol  = Column(String(5)  , nullable=True )
    cur_triangular_code  = Column(String(5)  , nullable=True )
    sl_no  = Column(Integer ,default=1  , nullable=True )
    #c_cmnbusinessunits  = relationship("CmnBusinessUnits")
    #c_cmncompanies  = relationship("CmnCompanies")


class CmnCurrencyRates(Base, AuditColumns):
    __tablename__ = 'cmn_currency_rates'
    __table_args__ = {'extend_existing': True}
    crated_by  = Column(BigInteger  , nullable=True )
    currency_rate  = Column(Numeric(precision=22, scale=6)  , nullable=True )
    currency_rate_date  = Column(DateTime(timezone=True), primary_key=True  , nullable=False )
    currency_rate_type  = Column(String(30) ,default='ONEOFF'  , nullable=True )
    from_currency_code  = Column(String(10), primary_key=True  , nullable=False )
    sell_currency_rate  = Column(Numeric(precision=22, scale=6)  , nullable=True )
    to_currency_code  = Column(String(10), primary_key=True  , nullable=False )


class CmnFunctions(Base, AuditColumns):
    __tablename__ = 'cmn_functions'
    __table_args__ = {'extend_existing': True}
    cml_module_id  = Column(BigInteger , ForeignKey('cmn_modules.module_id')  , nullable=False )
    end_date  = Column(DateTime(timezone=True)  , nullable=True )
    function_id  = Column(BigInteger, primary_key=True  , nullable=False )
    func_description  = Column(String(1000)  , nullable=True )
    func_disp_name  = Column(String(40)  , nullable=False )
    func_name  = Column(String(240)  , nullable=True )
    func_parameter  = Column(String(4000)  , nullable=True )
    func_path  = Column(String(100)  , nullable=True )
    func_short_name  = Column(String(30)  , nullable=False )
    func_type  = Column(String(30)  , nullable=True )
    run_mode  = Column(String(30) ,default='SYSTEM'  , nullable=True )
    run_type  = Column(String(30) ,default='OPEN'  , nullable=True )
    #c_cmnuserexclusions  = relationship("CmnUserExclusions")


class CmnGrantedPrivs(Base, AuditColumns):
    __tablename__ = 'cmn_granted_privs'
    __table_args__ = {'extend_existing': True}
    comp_id  = Column(BigInteger  , nullable=True )
    granted  = Column(String(1) ,default='Y'  , nullable=True )
    granted_priv_id  = Column(BigInteger, primary_key=True  , nullable=False )
    location_id  = Column(BigInteger  , nullable=True )
    privilege_id  = Column(BigInteger , ForeignKey('cmn_privileges.privilege_id')  , nullable=False )
    responsibility_id  = Column(BigInteger  , nullable=True )
    user_id  = Column(BigInteger  , nullable=True )


class CmnImportBatch(Base, AuditColumns):
    __tablename__ = 'cmn_import_batch'
    __table_args__ = {'extend_existing': True}
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    batch_id  = Column(BigInteger, primary_key=True  , nullable=False )
    batch_name  = Column(String(30)  , nullable=True )
    import_date  = Column(DateTime(timezone=True)  , nullable=True )
    import_status  = Column(String(30)  , nullable=True )
    import_template_name  = Column(String(100)  , nullable=True )
    lines_ok  = Column(BigInteger  , nullable=True )
    lines_rejected  = Column(BigInteger  , nullable=True )
    location_id  = Column(BigInteger  , nullable=True )
    phase_code  = Column(String(30)  , nullable=True )
    system_status_code  = Column(String(30)  , nullable=True )
    system_status_text  = Column(String(2000)  , nullable=True )
    total_lines  = Column(BigInteger  , nullable=True )
    user_status  = Column(String(30)  , nullable=True )
    user_status_text  = Column(String(1000)  , nullable=True )
    #c_arcustomerimport  = relationship("ArCustomerImport")


class CmnLanguages(Base, AuditColumns):
    __tablename__ = 'cmn_languages'
    __table_args__ = {'extend_existing': True}
    language_code  = Column(String(10), primary_key=True  , nullable=False )
    language_name  = Column(String(100)  , nullable=False )
    #c_arcustomers  = relationship("ArCustomers")
    #c_cmncountries  = relationship("CmnCountries")
    #c_cmnlanguagetexts  = relationship("CmnLanguageTexts")
    #c_wwwsubsources  = relationship("WwwSubSources")


class CmnLanguageTexts(Base, AuditColumns):
    __tablename__ = 'cmn_language_texts'
    __table_args__ = {'extend_existing': True}
    language_code  = Column(String(10) , ForeignKey('cmn_languages.language_code'), primary_key=True  , nullable=False )
    language_text  = Column(String(4000)  , nullable=True )
    source_object  = Column(String(100), primary_key=True  , nullable=False )
    source_object_id  = Column(BigInteger, primary_key=True  , nullable=False )
    source_object_identifier  = Column(String(100), primary_key=True  , nullable=False )


class CmnLoggedinUsers(Base, AuditColumns):
    __tablename__ = 'cmn_loggedin_users'
    __table_args__ = {'extend_existing': True}
    curr_status  = Column(String(40)  , nullable=True )
    cu_user_id  = Column(BigInteger , ForeignKey('cmn_users.user_id'), primary_key=True  , nullable=False )
    login_name  = Column(String(20)  , nullable=True )
    login_time  = Column(DateTime(timezone=True)  , nullable=True )
    terminal_id  = Column(BigInteger  , nullable=True )
    terminal_type  = Column(String(15)  , nullable=True )


class CmnLookupCodes(Base, AuditColumns):
    __tablename__ = 'cmn_lookup_codes'
    __table_args__ = {'extend_existing': True}
    attribute1  = Column(String(240)  , nullable=True )
    attribute10  = Column(String(240)  , nullable=True )
    attribute11  = Column(String(240)  , nullable=True )
    attribute12  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    attribute5  = Column(String(240)  , nullable=True )
    attribute6  = Column(String(240)  , nullable=True )
    attribute7  = Column(String(240)  , nullable=True )
    attribute8  = Column(String(240)  , nullable=True )
    attribute9  = Column(String(240)  , nullable=True )
    clt_lookup_type  = Column(String(30), primary_key=True  , nullable=False )
    description  = Column(String(400)  , nullable=True )
    end_date  = Column(DateTime(timezone=True)  , nullable=True )
    gl_account_id  = Column(BigInteger  , nullable=True )
    lookup_code  = Column(String(30), primary_key=True  , nullable=False )
    lookup_default  = Column(String(1) ,default='N'  , nullable=True )
    lookup_meaning  = Column(String(240)  , nullable=True )
    security_level  = Column(String(10)  , nullable=True )
    sl_no  = Column(BigInteger  , nullable=True )
    start_date  = Column(DateTime(timezone=True)  , nullable=True )
    #c_cmnlookuplinks  = relationship("CmnLookupLinks")


class CmnLookupLinks(Base, AuditColumns):
    __tablename__ = 'cmn_lookup_links'
    __table_args__ = {'extend_existing': True}
    cll_id  = Column(BigInteger, primary_key=True  , nullable=False )
    description  = Column(String(400)  , nullable=True )
    link_code  = Column(String(30)  , nullable=True )
    lookup_code  = Column(String(30)  , nullable=True )
    lookup_type  = Column(String(30) , ForeignKey('cmn_lookup_types.lookup_type')  , nullable=True )
    short_code  = Column(String(10)  , nullable=True )
    sl_no  = Column(Integer  , nullable=True )


class CmnLookupTypes(Base, AuditColumns):
    __tablename__ = 'cmn_lookup_types'
    __table_args__ = {'extend_existing': True}
    lookup_desc  = Column(String(100)  , nullable=True )
    lookup_module  = Column(String(30)  , nullable=True )
    lookup_type  = Column(String(30), primary_key=True  , nullable=False )
    security_level  = Column(String(10)  , nullable=True )
    #c_cmnlookuplinks  = relationship("CmnLookupLinks")


class CmnMailmergeHeaders(Base, AuditColumns):
    __tablename__ = 'cmn_mailmerge_headers'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    attribute5  = Column(String(240)  , nullable=True )
    attribute6  = Column(String(240)  , nullable=True )
    barcode_text  = Column(String(30)  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    identifier  = Column(String(30)  , nullable=True )
    merge_header_id  = Column(BigInteger, primary_key=True  , nullable=False )
    merge_owner  = Column(String(30) ,default='SYSTEM'  , nullable=True )
    merge_type  = Column(String(30) ,default='HTML'  , nullable=True )
    printer_id  = Column(BigInteger  , nullable=True )
    print_header_image  = Column(String(1) ,default='N'  , nullable=True )
    report_id  = Column(BigInteger  , nullable=True )
    sales_unit  = Column(BigInteger  , nullable=True )
    sl_no  = Column(BigInteger  , nullable=True )
    table_view_name  = Column(String(30)  , nullable=True )
    #c_cmnmailmergelines  = relationship("CmnMailmergeLines")


class CmnMailmergeLines(Base, AuditColumns):
    __tablename__ = 'cmn_mailmerge_lines'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    attribute5  = Column(String(240)  , nullable=True )
    attribute6  = Column(String(240)  , nullable=True )
    identifier  = Column(String(30)  , nullable=True )
    line_text  = Column(String(4000)  , nullable=True )
    line_type  = Column(String(30) ,default='HTML'  , nullable=True )
    merge_header_id  = Column(BigInteger , ForeignKey('cmn_mailmerge_headers.merge_header_id')  , nullable=False )
    merge_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    sl_no  = Column(Integer  , nullable=False )
    variable  = Column(String(1) ,default='N'  , nullable=True )


class CmnMenus(Base, AuditColumns):
    __tablename__ = 'cmn_menus'
    __table_args__ = {'extend_existing': True}
    cf_function_id  = Column(BigInteger  , nullable=True )
    end_date  = Column(DateTime(timezone=True)  , nullable=True )
    menu_description  = Column(String(40)  , nullable=True )
    menu_id  = Column(BigInteger, primary_key=True  , nullable=False )
    menu_name  = Column(String(30)  , nullable=True )
    menu_sl_no  = Column(BigInteger  , nullable=True )
    menu_type  = Column(String(10)  , nullable=True )
    parent_menu_id  = Column(BigInteger  , nullable=True )
    #c_cmnmenuresponsibilities  = relationship("CmnMenuResponsibilities")


class CmnMenuResponsibilities(Base, AuditColumns):
    __tablename__ = 'cmn_menu_responsibilities'
    __table_args__ = {'extend_existing': True}
    cm_menu_id  = Column(BigInteger , ForeignKey('cmn_menus.menu_id')  , nullable=False )
    cr_resp_id  = Column(BigInteger , ForeignKey('cmn_responsibilities.resp_id')  , nullable=True )
    menu_resp_desc  = Column(String(100)  , nullable=True )
    menu_resp_id  = Column(BigInteger, primary_key=True  , nullable=False )
    sl_no  = Column(Integer ,default=1  , nullable=True )


class CmnModules(Base, AuditColumns):
    __tablename__ = 'cmn_modules'
    __table_args__ = {'extend_existing': True}
    crated_by  = Column(BigInteger  , nullable=True )
    module_desc  = Column(String(240)  , nullable=True )
    module_id  = Column(BigInteger, primary_key=True  , nullable=False )
    module_name  = Column(String(30)  , nullable=True )
    sl_no  = Column(Integer ,default=999  , nullable=True )
    #c_cmnfunctions  = relationship("CmnFunctions")
    #c_cmnprofiles  = relationship("CmnProfiles")


class CmnNavigations(Base, AuditColumns):
    __tablename__ = 'cmn_navigations'
    __table_args__ = {'extend_existing': True}
    from_function_id  = Column(BigInteger  , nullable=True )
    name  = Column(String(100)  , nullable=True )
    navigation_id  = Column(BigInteger, primary_key=True  , nullable=False )
    to_function_id  = Column(BigInteger  , nullable=True )


class CmnObjectBatches(Base, AuditColumns):
    __tablename__ = 'cmn_object_batches'
    __table_args__ = {'extend_existing': True}
    access_level  = Column(String(30)  , nullable=True )
    batch_category  = Column(String(30)  , nullable=True )
    batch_id  = Column(BigInteger, primary_key=True  , nullable=False )
    batch_name  = Column(String(30)  , nullable=True )
    date_from  = Column(DateTime(timezone=True)  , nullable=True )
    date_to  = Column(DateTime(timezone=True)  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    last_query_criteria  = Column(String(4000)  , nullable=True )
    name  = Column(String(150)  , nullable=False )
    source_object_name  = Column(String(100)  , nullable=True )
    #c_cmnobjectbatchlines  = relationship("CmnObjectBatchLines")


class CmnObjectBatchLines(Base, AuditColumns):
    __tablename__ = 'cmn_object_batch_lines'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1)  , nullable=True )
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    batch_id  = Column(BigInteger , ForeignKey('cmn_object_batches.batch_id')  , nullable=False )
    batch_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    date_from  = Column(DateTime(timezone=True)  , nullable=True )
    date_to  = Column(DateTime(timezone=True)  , nullable=True )
    sl_no  = Column(BigInteger  , nullable=True )
    source_object_id1  = Column(BigInteger  , nullable=True )
    source_object_id2  = Column(BigInteger  , nullable=True )
    source_object_name  = Column(String(100)  , nullable=True )


class CmnObjectStatuses(Base, AuditColumns):
    __tablename__ = 'cmn_object_statuses'
    __table_args__ = {'extend_existing': True}
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    current_status  = Column(String(30)  , nullable=True )
    old_status  = Column(String(30)  , nullable=True )
    source_object_id1  = Column(BigInteger  , nullable=True )
    source_object_id2  = Column(BigInteger  , nullable=True )
    source_object_name  = Column(String(100)  , nullable=True )
    status_id  = Column(BigInteger, primary_key=True  , nullable=False )


class CmnParameters(Base, AuditColumns):
    __tablename__ = 'cmn_parameters'
    __table_args__ = {'extend_existing': True}
    crated_by  = Column(BigInteger  , nullable=True )
    datatype  = Column(String(30)  , nullable=True )
    default_value  = Column(String(2000)  , nullable=True )
    default_value_type  = Column(String(15)  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    name  = Column(String(30)  , nullable=True )
    parameter_id  = Column(BigInteger, primary_key=True  , nullable=False )
    prompt  = Column(String(30)  , nullable=True )
    sl_no  = Column(Integer  , nullable=True )
    sql_query  = Column(String(2000)  , nullable=True )
    #c_cmnreportparameters  = relationship("CmnReportParameters")


class CmnPayments(Base, AuditColumns):
    __tablename__ = 'cmn_payments'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    balance_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    bank_account_id  = Column(BigInteger , ForeignKey('cmn_bank_accounts.bank_account_id')  , nullable=True )
    bank_currency_code  = Column(String(10)  , nullable=True )
    bank_id  = Column(BigInteger , ForeignKey('cmn_banks.bank_id')  , nullable=True )
    batch_name  = Column(String(30)  , nullable=True )
    card_approval_code  = Column(String(80)  , nullable=True )
    card_approval_date  = Column(DateTime(timezone=True)  , nullable=True )
    card_expiration_date  = Column(DateTime(timezone=True)  , nullable=True )
    card_holder_name  = Column(String(80)  , nullable=True )
    card_number  = Column(String(80)  , nullable=True )
    card_security_code  = Column(String(30)  , nullable=True )
    check_number  = Column(String(50)  , nullable=True )
    cmn_payment_id  = Column(BigInteger, primary_key=True  , nullable=False )
    gl_accounting_date  = Column(DateTime(timezone=True)  , nullable=True )
    gl_account_id  = Column(BigInteger , ForeignKey('gl_account_codes.gl_account_id')  , nullable=True )
    payment_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    payment_amount_in  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    payment_amount_out  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    payment_card_types  = Column(String(30)  , nullable=True )
    payment_category_code  = Column(String(30) ,default='GENERAL'  , nullable=True )
    payment_currency_code  = Column(String(10)  , nullable=True )
    payment_date  = Column(DateTime(timezone=True)  , nullable=True )
    payment_description  = Column(String(1000)  , nullable=True )
    payment_name  = Column(String(100)  , nullable=True )
    payment_type  = Column(String(30) ,default='DEPOSIT'  , nullable=True )
    pmnt_method_id  = Column(BigInteger , ForeignKey('cmn_payment_methods.pmnt_method_id')  , nullable=True )
    source_object  = Column(String(100)  , nullable=True )
    source_object_id  = Column(BigInteger  , nullable=True )
    #c_cmnpaymenttrans  = relationship("CmnPaymentTrans")


class CmnPaymenttermBreakups(Base, AuditColumns):
    __tablename__ = 'cmn_paymentterm_breakups'
    __table_args__ = {'extend_existing': True}
    cpb_id  = Column(BigInteger, primary_key=True  , nullable=False )
    cpb_name  = Column(String(30)  , nullable=True )
    cpb_percent  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    cpb_type  = Column(String(30)  , nullable=True )
    cpt_cpt_id  = Column(BigInteger , ForeignKey('cmn_payment_terms.cpt_id')  , nullable=True )
    sl_no  = Column(Integer  , nullable=True )


class CmnPaymentMethods(Base, AuditColumns):
    __tablename__ = 'cmn_payment_methods'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1)  , nullable=True )
    available_to_all  = Column(String(1) ,default='N'  , nullable=True )
    cashback_allowed  = Column(String(1) ,default='N'  , nullable=True )
    charge_type  = Column(String(30)  , nullable=True )
    charge_value  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    gac_gl_account_id  = Column(BigInteger , ForeignKey('gl_account_codes.gl_account_id')  , nullable=True )
    out_gl_account_id  = Column(BigInteger , ForeignKey('gl_account_codes.gl_account_id')  , nullable=True )
    pay_in  = Column(String(1) ,default='Y'  , nullable=True )
    pay_out  = Column(String(1) ,default='Y'  , nullable=True )
    pmnt_code  = Column(String(5)  , nullable=True )
    pmnt_max_amount  = Column(Numeric(precision=10, scale=3)  , nullable=True )
    pmnt_method  = Column(String(50)  , nullable=True )
    pmnt_method_id  = Column(BigInteger, primary_key=True  , nullable=False )
    pmnt_min_amount  = Column(Numeric(precision=10, scale=3)  , nullable=True )
    pmnt_type  = Column(String(30) ,default='STANDARD'  , nullable=True )
    sl_no  = Column(Integer  , nullable=True )
    validation_criteria  = Column(String(2000)  , nullable=True )
    #c_arcustpaymentmethods  = relationship("ArCustPaymentMethods")
    #c_cmnpayments  = relationship("CmnPayments")
    #c_glcashinguplines  = relationship("GlCashingupLines")
    #c_glpaymentheaders  = relationship("GlPaymentHeaders")
    #c_glpaymentlines  = relationship("GlPaymentLines")


class CmnPaymentTerms(Base, AuditColumns):
    __tablename__ = 'cmn_payment_terms'
    __table_args__ = {'extend_existing': True}
    cpt_id  = Column(BigInteger, primary_key=True  , nullable=False )
    terms_days  = Column(Integer  , nullable=True )
    terms_name  = Column(String(30)  , nullable=True )
    terms_type  = Column(String(20)  , nullable=True )
    #c_arcustomers  = relationship("ArCustomers")
    #c_arcustomerprofiles  = relationship("ArCustomerProfiles")
    #c_cmnpaymenttermbreakups  = relationship("CmnPaymenttermBreakups")


class CmnPaymentTrans(Base, AuditColumns):
    __tablename__ = 'cmn_payment_trans'
    __table_args__ = {'extend_existing': True}
    cmn_payment_id  = Column(BigInteger , ForeignKey('cmn_payments.cmn_payment_id')  , nullable=True )
    gl_accounting_date  = Column(DateTime(timezone=True)  , nullable=True )
    gl_account_id  = Column(BigInteger , ForeignKey('gl_account_codes.gl_account_id')  , nullable=True )
    payment_trans_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    payment_trans_amount_in  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    payment_trans_amount_out  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    payment_trans_date  = Column(DateTime(timezone=True)  , nullable=True )
    payment_trans_description  = Column(String(1000)  , nullable=True )
    payment_trans_id  = Column(BigInteger, primary_key=True  , nullable=False )
    source_object  = Column(String(100)  , nullable=True )
    source_object_id  = Column(BigInteger  , nullable=True )
    trans_status  = Column(String(30)  , nullable=True )
    trans_status_date  = Column(DateTime(timezone=True)  , nullable=True )
    #c_appaymentlines  = relationship("ApPaymentLines")
    #c_arpaymentlines  = relationship("ArPaymentLines")


class CmnPeriodBreakdowns(Base, AuditColumns):
    __tablename__ = 'cmn_period_breakdowns'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    actual_date_from  = Column(DateTime(timezone=True)  , nullable=True )
    actual_date_to  = Column(DateTime(timezone=True)  , nullable=True )
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    attribute5  = Column(String(240)  , nullable=True )
    attribute6  = Column(String(240)  , nullable=True )
    breakdown_status  = Column(String(20)  , nullable=True )
    breakdown_status_date  = Column(DateTime(timezone=True)  , nullable=True )
    period_breakdown_category  = Column(String(30)  , nullable=True )
    period_breakdown_id  = Column(BigInteger, primary_key=True  , nullable=False )
    period_header_id  = Column(BigInteger , ForeignKey('cmn_period_headers.period_header_id')  , nullable=False )
    period_line_id  = Column(BigInteger , ForeignKey('cmn_period_lines.period_line_id')  , nullable=False )
    sl_no  = Column(Integer  , nullable=False )
    sub_ledger_code  = Column(String(30)  , nullable=True )


class CmnPeriodHeaders(Base, AuditColumns):
    __tablename__ = 'cmn_period_headers'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    attribute5  = Column(String(240)  , nullable=True )
    attribute6  = Column(String(240)  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    module_id  = Column(BigInteger  , nullable=True )
    period_header_id  = Column(BigInteger, primary_key=True  , nullable=False )
    period_header_name  = Column(String(30)  , nullable=False )
    #c_cmnperiodbreakdowns  = relationship("CmnPeriodBreakdowns")
    #c_cmnperiodlines  = relationship("CmnPeriodLines")


class CmnPeriodLines(Base, AuditColumns):
    __tablename__ = 'cmn_period_lines'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    actual_date_from  = Column(DateTime(timezone=True)  , nullable=True )
    actual_date_to  = Column(DateTime(timezone=True)  , nullable=True )
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    attribute5  = Column(String(240)  , nullable=True )
    attribute6  = Column(String(240)  , nullable=True )
    calendar_date_from  = Column(DateTime(timezone=True)  , nullable=True )
    calendar_date_to  = Column(DateTime(timezone=True)  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    period_header_id  = Column(BigInteger , ForeignKey('cmn_period_headers.period_header_id')  , nullable=False )
    period_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    period_month  = Column(String(20)  , nullable=False )
    period_name  = Column(String(30)  , nullable=False )
    period_status  = Column(String(20)  , nullable=True )
    period_status_date  = Column(DateTime(timezone=True)  , nullable=True )
    period_year  = Column(Integer  , nullable=False )
    sl_no  = Column(Integer  , nullable=False )
    #c_cmnperiodbreakdowns  = relationship("CmnPeriodBreakdowns")


class CmnPriceroundings(Base, AuditColumns):
    __tablename__ = 'cmn_priceroundings'
    __table_args__ = {'extend_existing': True}
    from_price  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    price_rounding_id  = Column(BigInteger, primary_key=True  , nullable=False )
    round_to  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    to_price  = Column(Numeric(precision=14, scale=2)  , nullable=True )


class CmnPrinters(Base, AuditColumns):
    __tablename__ = 'cmn_printers'
    __table_args__ = {'extend_existing': True}
    ip_address  = Column(String(100)  , nullable=True )
    printer_copies  = Column(Integer  , nullable=True )
    printer_id  = Column(BigInteger, primary_key=True  , nullable=False )
    printer_name  = Column(String(100)  , nullable=True )
    print_documents  = Column(String(100)  , nullable=True )
    print_format  = Column(String(20)  , nullable=True )
    print_port  = Column(String(100)  , nullable=True )
    print_style  = Column(String(20)  , nullable=True )
    #c_cmnprintermatrix  = relationship("CmnPrinterMatrix")


class CmnPrinterMatrix(Base, AuditColumns):
    __tablename__ = 'cmn_printer_matrix'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    batch_mode  = Column(String(30)  , nullable=True )
    copies  = Column(Integer ,default=1  , nullable=True )
    desformat  = Column(String(30)  , nullable=True )
    destype  = Column(String(30)  , nullable=True )
    execution_mode  = Column(String(30)  , nullable=True )
    location_id  = Column(BigInteger , ForeignKey('inv_locations.location_id')  , nullable=True )
    matrix_source  = Column(String(30)  , nullable=True )
    matrix_source_id  = Column(BigInteger  , nullable=True )
    matrx_source_id1  = Column(BigInteger  , nullable=True )
    output_directory  = Column(String(400)  , nullable=True )
    preview_mode  = Column(String(30)  , nullable=True )
    printer_id  = Column(BigInteger , ForeignKey('cmn_printers.printer_id')  , nullable=False )
    print_matrix_id  = Column(BigInteger, primary_key=True  , nullable=False )
    program_id  = Column(BigInteger , ForeignKey('sys_programs.program_id')  , nullable=False )
    show_output  = Column(String(1) ,default='Y'  , nullable=True )
    sl_no  = Column(Integer  , nullable=False )
    terminal_id  = Column(BigInteger , ForeignKey('cmn_terminals.terminal_id')  , nullable=True )


class CmnPrivileges(Base, AuditColumns):
    __tablename__ = 'cmn_privileges'
    __table_args__ = {'extend_existing': True}
    description  = Column(String(2000)  , nullable=True )
    name  = Column(String(30)  , nullable=False )
    privilege_id  = Column(BigInteger, primary_key=True  , nullable=False )
    #c_cmngrantedprivs  = relationship("CmnGrantedPrivs")


class CmnProfiles(Base, AuditColumns):
    __tablename__ = 'cmn_profiles'
    __table_args__ = {'extend_existing': True}
    datatype  = Column(String(30)  , nullable=True )
    default_value  = Column(String(2000)  , nullable=True )
    default_value_type  = Column(String(15)  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    module_id  = Column(BigInteger , ForeignKey('cmn_modules.module_id')  , nullable=True )
    name  = Column(String(30)  , nullable=True )
    profile_id  = Column(BigInteger, primary_key=True  , nullable=False )
    prompt  = Column(String(30)  , nullable=True )
    sl_no  = Column(Integer  , nullable=True )
    sql_query  = Column(String(2000)  , nullable=True )
    #c_cmnprofilevalues  = relationship("CmnProfileValues")


class CmnProfileValues(Base, AuditColumns):
    __tablename__ = 'cmn_profile_values'
    __table_args__ = {'extend_existing': True}
    comp_id  = Column(BigInteger  , nullable=True )
    location_id  = Column(BigInteger  , nullable=True )
    profile_id  = Column(BigInteger , ForeignKey('cmn_profiles.profile_id')  , nullable=False )
    profile_value  = Column(String(4000)  , nullable=True )
    profile_value_id  = Column(BigInteger, primary_key=True  , nullable=False )
    responsibility_id  = Column(BigInteger  , nullable=True )
    user_id  = Column(BigInteger  , nullable=True )


class CmnProperties(Base, AuditColumns):
    __tablename__ = 'cmn_properties'
    __table_args__ = {'extend_existing': True}
    end_date  = Column(DateTime(timezone=True)  , nullable=True )
    object_id  = Column(BigInteger  , nullable=False )
    property_data_type  = Column(String(20)  , nullable=True )
    property_description  = Column(String(240)  , nullable=True )
    property_id  = Column(BigInteger, primary_key=True  , nullable=False )
    property_name  = Column(String(30)  , nullable=True )
    property_sql  = Column(String(4000)  , nullable=True )
    sl_no  = Column(Integer  , nullable=True )
    start_date  = Column(DateTime(timezone=True)  , nullable=True )


class CmnPropertyObjects(Base, AuditColumns):
    __tablename__ = 'cmn_property_objects'
    __table_args__ = {'extend_existing': True}
    end_date  = Column(DateTime(timezone=True)  , nullable=True )
    object_description  = Column(String(240)  , nullable=True )
    object_id  = Column(BigInteger, primary_key=True  , nullable=False )
    object_name  = Column(String(30)  , nullable=False )
    object_value  = Column(String(30)  , nullable=True )
    start_date  = Column(DateTime(timezone=True)  , nullable=True )


class CmnPropertyValues(Base, AuditColumns):
    __tablename__ = 'cmn_property_values'
    __table_args__ = {'extend_existing': True}
    object_id  = Column(BigInteger  , nullable=False )
    object_ref1  = Column(String(30)  , nullable=False )
    object_ref2  = Column(String(30)  , nullable=True )
    object_ref3  = Column(String(30)  , nullable=True )
    property_id  = Column(BigInteger  , nullable=False )
    property_value  = Column(String(2000)  , nullable=True )
    property_value_id  = Column(BigInteger, primary_key=True  , nullable=False )
    property_value_type  = Column(String(30) ,default='TEXT'  , nullable=True )


class CmnReasons(Base, AuditColumns):
    __tablename__ = 'cmn_reasons'
    __table_args__ = {'extend_existing': True}
    gl_account_id  = Column(BigInteger  , nullable=True )
    reason_code_id  = Column(BigInteger, primary_key=True  , nullable=False )
    reason_desc  = Column(String(50)  , nullable=True )
    reason_name  = Column(String(30)  , nullable=True )


class CmnReportgroupHeaders(Base, AuditColumns):
    __tablename__ = 'cmn_reportgroup_headers'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    description  = Column(String(240)  , nullable=False )
    name  = Column(String(30)  , nullable=False )
    report_category_code  = Column(String(30)  , nullable=True )
    report_group_id  = Column(BigInteger, primary_key=True  , nullable=False )
    report_group_type  = Column(String(30)  , nullable=True )
    #c_cmnreportgrouplines  = relationship("CmnReportgroupLines")
    #c_cmnuserreportgroups  = relationship("CmnUserReportgroups")


class CmnReportgroupLines(Base, AuditColumns):
    __tablename__ = 'cmn_reportgroup_lines'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    cml_module_id  = Column(BigInteger  , nullable=False )
    description  = Column(String(240)  , nullable=True )
    report_group_id  = Column(BigInteger , ForeignKey('cmn_reportgroup_headers.report_group_id')  , nullable=False )
    report_group_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    report_id  = Column(BigInteger , ForeignKey('cmn_reports.report_id')  , nullable=False )
    sl_no  = Column(Integer  , nullable=False )


class CmnReportoutputsSnap(Base, AuditColumns):
    __tablename__ = 'cmn_reportoutputs_snap'
    __table_args__ = {'extend_existing': True}
    column10_value  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    column11_value  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    column12_value  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    column13_value  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    column14_value  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    column15_value  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    column16_value  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    column17_value  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    column18_value  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    column19_value  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    column1_value  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    column20_value  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    column21_value  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    column22_value  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    column23_value  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    column24_value  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    column25_value  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    column26_value  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    column27_value  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    column28_value  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    column29_value  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    column2_value  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    column30_value  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    column3_value  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    column4_value  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    column5_value  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    column6_value  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    column7_value  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    column8_value  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    column9_value  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    grand_total1  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    grand_total2  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    location_id  = Column(BigInteger  , nullable=True )
    period_header_id  = Column(BigInteger  , nullable=True )
    period_line_id  = Column(BigInteger  , nullable=True )
    period_name  = Column(String(30)  , nullable=True )
    report_date_from  = Column(DateTime(timezone=True)  , nullable=True )
    report_date_to  = Column(DateTime(timezone=True)  , nullable=True )
    report_description  = Column(String(100)  , nullable=True )
    report_identifier  = Column(String(30)  , nullable=True )
    row_identifier  = Column(String(30)  , nullable=True )
    sl_date_from  = Column(DateTime(timezone=True)  , nullable=True )
    sl_date_to  = Column(DateTime(timezone=True)  , nullable=True )
    sl_no  = Column(BigInteger  , nullable=True )
    snapshot_date  = Column(DateTime(timezone=True)  , nullable=True )
    snapshot_id  = Column(BigInteger, primary_key=True  , nullable=False )
    snapshot_month  = Column(String(20)  , nullable=True )
    snapshot_year  = Column(Integer  , nullable=True )
    sub_location_id  = Column(BigInteger  , nullable=True )
    total1  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    total2  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    total3  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    total4  = Column(Numeric(precision=22, scale=2)  , nullable=True )


class CmnReports(Base, AuditColumns):
    __tablename__ = 'cmn_reports'
    __table_args__ = {'extend_existing': True}
    cml_module_id  = Column(BigInteger  , nullable=False )
    crated_by  = Column(BigInteger  , nullable=True )
    default_printer_id  = Column(BigInteger  , nullable=True )
    desformat  = Column(String(30)  , nullable=True )
    destype  = Column(String(30)  , nullable=True )
    display_name  = Column(String(30)  , nullable=True )
    orientation  = Column(String(30)  , nullable=True )
    report_category  = Column(String(30)  , nullable=True )
    report_default_flag  = Column(String(1) ,default='N'  , nullable=True )
    report_group  = Column(String(30) ,default='SINGLE'  , nullable=True )
    report_groupby  = Column(String(2000)  , nullable=True )
    report_id  = Column(BigInteger, primary_key=True  , nullable=False )
    report_name  = Column(String(30)  , nullable=True )
    report_orderby  = Column(String(2000)  , nullable=True )
    report_type  = Column(String(10)  , nullable=True )
    sl_no  = Column(Integer ,default=1  , nullable=True )
    #c_cmnreportgrouplines  = relationship("CmnReportgroupLines")
    #c_cmnreportparameters  = relationship("CmnReportParameters")
    #c_cmnreportset  = relationship("CmnReportSet")
    #c_cmnreportset  = relationship("CmnReportSet")
    #c_cmnuserexclusions  = relationship("CmnUserExclusions")


class CmnReportColumns(Base, AuditColumns):
    __tablename__ = 'cmn_report_columns'
    __table_args__ = {'extend_existing': True}
    column10_title  = Column(String(30)  , nullable=True )
    column11_title  = Column(String(30)  , nullable=True )
    column12_title  = Column(String(30)  , nullable=True )
    column13_title  = Column(String(30)  , nullable=True )
    column14_title  = Column(String(30)  , nullable=True )
    column15_title  = Column(String(30)  , nullable=True )
    column16_title  = Column(String(30)  , nullable=True )
    column17_title  = Column(String(30)  , nullable=True )
    column18_title  = Column(String(30)  , nullable=True )
    column19_title  = Column(String(30)  , nullable=True )
    column1_title  = Column(String(30)  , nullable=True )
    column20_title  = Column(String(30)  , nullable=True )
    column21_title  = Column(String(30)  , nullable=True )
    column22_title  = Column(String(30)  , nullable=True )
    column23_title  = Column(String(30)  , nullable=True )
    column24_title  = Column(String(30)  , nullable=True )
    column25_title  = Column(String(30)  , nullable=True )
    column26_title  = Column(String(30)  , nullable=True )
    column27_title  = Column(String(30)  , nullable=True )
    column28_title  = Column(String(30)  , nullable=True )
    column29_title  = Column(String(30)  , nullable=True )
    column2_title  = Column(String(30)  , nullable=True )
    column30_title  = Column(String(30)  , nullable=True )
    column3_title  = Column(String(30)  , nullable=True )
    column4_title  = Column(String(30)  , nullable=True )
    column5_title  = Column(String(30)  , nullable=True )
    column6_title  = Column(String(30)  , nullable=True )
    column7_title  = Column(String(30)  , nullable=True )
    column8_title  = Column(String(30)  , nullable=True )
    column9_title  = Column(String(30)  , nullable=True )
    report_column_id  = Column(BigInteger, primary_key=True  , nullable=False )
    report_identifier  = Column(String(30)  , nullable=False )
    report_type  = Column(String(30)  , nullable=True )


class CmnReportConfig(Base, AuditColumns):
    __tablename__ = 'cmn_report_config'
    __table_args__ = {'extend_existing': True}
    categoryname  = Column(String(100)  , nullable=True )
    crc_id  = Column(BigInteger, primary_key=True  , nullable=False )
    defaultsetting  = Column(String(40)  , nullable=True )
    hide  = Column(String(1)  , nullable=True )
    nooftimesused  = Column(BigInteger  , nullable=True )
    reportdatefrom  = Column(DateTime(timezone=True)  , nullable=True )
    reportdateto  = Column(DateTime(timezone=True)  , nullable=True )
    reportdesc  = Column(String(100)  , nullable=True )
    reportmarketsector  = Column(String(50)  , nullable=True )
    reportname  = Column(String(100)  , nullable=True )
    reporttype  = Column(String(20) ,default='RELEASED'  , nullable=True )


class CmnReportParameters(Base, AuditColumns):
    __tablename__ = 'cmn_report_parameters'
    __table_args__ = {'extend_existing': True}
    cmp_parameter_id  = Column(BigInteger , ForeignKey('cmn_parameters.parameter_id')  , nullable=False )
    cmrr_report_id  = Column(BigInteger , ForeignKey('cmn_reports.report_id')  , nullable=False )
    crp_id  = Column(BigInteger, primary_key=True  , nullable=False )
    default_value  = Column(String(240)  , nullable=True )
    order_by  = Column(String(20)  , nullable=True )
    prompt  = Column(String(30)  , nullable=True )
    sl_no  = Column(Integer  , nullable=True )


class CmnReportSet(Base, AuditColumns):
    __tablename__ = 'cmn_report_set'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    parent_report_id  = Column(BigInteger , ForeignKey('cmn_reports.report_id')  , nullable=False )
    report_id  = Column(BigInteger , ForeignKey('cmn_reports.report_id')  , nullable=False )
    run_mode  = Column(String(30) ,default='SERIAL'  , nullable=True )
    set_id  = Column(BigInteger, primary_key=True  , nullable=False )
    sl_no  = Column(Integer  , nullable=True )


class CmnResponsibilities(Base, AuditColumns):
    __tablename__ = 'cmn_responsibilities'
    __table_args__ = {'extend_existing': True}
    email  = Column(String(400)  , nullable=True )
    end_date  = Column(String(240)  , nullable=True )
    resp_category_code  = Column(String(30)  , nullable=True )
    resp_description  = Column(String(100)  , nullable=True )
    resp_id  = Column(BigInteger, primary_key=True  , nullable=False )
    resp_name  = Column(String(30)  , nullable=True )
    sl_no  = Column(Integer ,default=1  , nullable=True )
    #c_cmnmenuresponsibilities  = relationship("CmnMenuResponsibilities")
    #c_cmnuserresponsibilities  = relationship("CmnUserResponsibilities")
    #c_sysnotificationrecipients  = relationship("SysNotificationRecipients")


class CmnSeasons(Base, AuditColumns):
    __tablename__ = 'cmn_seasons'
    __table_args__ = {'extend_existing': True}
    buying_period_from  = Column(DateTime(timezone=True)  , nullable=True )
    buying_period_to  = Column(DateTime(timezone=True)  , nullable=True )
    season_code  = Column(String(30)  , nullable=False )
    season_code_id  = Column(BigInteger, primary_key=True  , nullable=False )
    season_comment  = Column(String(2000)  , nullable=True )
    season_desc  = Column(String(40)  , nullable=True )
    selling_period_from  = Column(DateTime(timezone=True)  , nullable=True )
    selling_period_to  = Column(DateTime(timezone=True)  , nullable=True )
    #c_invitemmultiseasons  = relationship("InvItemMultiSeasons")


class CmnSequences(Base, AuditColumns):
    __tablename__ = 'cmn_sequences'
    __table_args__ = {'extend_existing': True}
    cs_id  = Column(BigInteger, primary_key=True  , nullable=False )
    prefix  = Column(String(10)  , nullable=True )
    seq_comment  = Column(String(240)  , nullable=True )
    seq_increment  = Column(BigInteger  , nullable=True )
    seq_name  = Column(String(30)  , nullable=True )
    seq_next_value  = Column(BigInteger  , nullable=True )
    suffix  = Column(String(10)  , nullable=True )


class CmnShifts(Base, AuditColumns):
    __tablename__ = 'cmn_shifts'
    __table_args__ = {'extend_existing': True}
    avg_hourly_cost  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    noof_hours  = Column(Numeric(precision=6, scale=2)  , nullable=True )
    shift_description  = Column(String(2000)  , nullable=True )
    shift_id  = Column(BigInteger, primary_key=True  , nullable=False )
    shift_name  = Column(String(100)  , nullable=False )
    shift_time_from  = Column(String(10)  , nullable=True )
    shift_time_to  = Column(String(10)  , nullable=True )
    shift_type  = Column(String(30)  , nullable=False )
    #c_cmnwdayshifts  = relationship("CmnWdayShifts")


class CmnStpAttributes(Base, AuditColumns):
    __tablename__ = 'cmn_stp_attributes'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    attribute_code  = Column(String(30)  , nullable=False )
    attribute_description  = Column(String(1000)  , nullable=True )
    attribute_id  = Column(BigInteger, primary_key=True  , nullable=False )
    attribute_value  = Column(String(100)  , nullable=True )
    stp_id  = Column(BigInteger , ForeignKey('cmn_style_patterns.stp_id')  , nullable=False )


class CmnStpLevels(Base, AuditColumns):
    __tablename__ = 'cmn_stp_levels'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    level_code  = Column(String(30)  , nullable=True )
    level_description  = Column(String(1000)  , nullable=True )
    level_id  = Column(BigInteger, primary_key=True  , nullable=False )
    level_id_concated  = Column(String(100)  , nullable=True )
    level_number  = Column(Integer  , nullable=False , unique=True)
    level_type  = Column(String(30)  , nullable=True )
    parent_level_id  = Column(BigInteger  , nullable=True )
    sl_no  = Column(Integer  , nullable=True )
    stp_id  = Column(BigInteger , ForeignKey('cmn_style_patterns.stp_id')  , nullable=False )


class CmnStylePatterns(Base, AuditColumns):
    __tablename__ = 'cmn_style_patterns'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    item_id  = Column(BigInteger  , nullable=True )
    item_numbering_hint  = Column(String(30) ,default='SYSTEM'  , nullable=True )
    last_item_seq  = Column(BigInteger  , nullable=True )
    manf_id  = Column(BigInteger , ForeignKey('inv_manufacturers.manf_id')  , nullable=True )
    picturelevel  = Column(String(30)  , nullable=True )
    picturename  = Column(String(400)  , nullable=True )
    picturetype  = Column(String(30)  , nullable=True )
    separator  = Column(String(1) ,default='.'  , nullable=True )
    start_item_seq  = Column(BigInteger  , nullable=True )
    stp_category_code  = Column(String(30) ,default='GENERAL'  , nullable=True )
    stp_code  = Column(String(30)  , nullable=False )
    stp_date_from  = Column(DateTime(timezone=True)  , nullable=True )
    stp_date_to  = Column(DateTime(timezone=True)  , nullable=True )
    stp_description  = Column(String(1000)  , nullable=True )
    stp_id  = Column(BigInteger, primary_key=True  , nullable=False )
    stp_level1_code  = Column(String(30)  , nullable=True )
    stp_level2_code  = Column(String(30)  , nullable=True )
    stp_level3_code  = Column(String(30)  , nullable=True )
    stp_level4_code  = Column(String(30)  , nullable=True )
    stp_level5_code  = Column(String(30)  , nullable=True )
    stp_level6_code  = Column(String(30)  , nullable=True )
    stp_name  = Column(String(100)  , nullable=True )
    stp_type_code  = Column(String(30) ,default='STYLE'  , nullable=True )
    supplier_id  = Column(BigInteger , ForeignKey('ap_suppliers.supplier_id')  , nullable=True )
    #c_cmnstpattributes  = relationship("CmnStpAttributes")
    #c_cmnstplevels  = relationship("CmnStpLevels")


class CmnSysOptions(Base, AuditColumns):
    __tablename__ = 'cmn_sys_options'
    __table_args__ = {'extend_existing': True}
    alternate_report_server  = Column(String(100)  , nullable=True )
    alternate_report_url  = Column(String(1000)  , nullable=True )
    application_directory  = Column(String(100)  , nullable=True )
    back_office_url  = Column(String(1000)  , nullable=True )
    batch_format  = Column(String(30)  , nullable=True )
    business_type  = Column(String(30)  , nullable=True )
    casetype  = Column(String(10)  , nullable=True )
    company_id  = Column(BigInteger  , nullable=True )
    company_logo  = Column(String(100)  , nullable=True )
    consolidate_item_in_trans  = Column(String(1) ,default='Y'  , nullable=True )
    country_code  = Column(String(10)  , nullable=True )
    currency_code  = Column(String(10)  , nullable=True )
    database_version  = Column(String(10) ,default='10'  , nullable=True )
    db_string  = Column(String(100)  , nullable=True )
    default_browser  = Column(String(100)  , nullable=True )
    dir_inbound  = Column(String(200) ,default='DIR_INBOUND'  , nullable=True )
    dir_inbound_backup  = Column(String(200) ,default='DIR_INBOUND_BACKUP'  , nullable=True )
    dir_outbound  = Column(String(200) ,default='DIR_OUTBOUND'  , nullable=True )
    dir_outbound_backup  = Column(String(200) ,default='DIR_OUTBOUND_BACKUP'  , nullable=True )
    dir_tmp  = Column(String(200) ,default='DIR_TMP'  , nullable=True )
    email_bcc  = Column(String(1000)  , nullable=True )
    email_cc  = Column(String(1000)  , nullable=True )
    enable_emailing  = Column(String(1) ,default='Y'  , nullable=True )
    enable_notifications  = Column(String(1) ,default='N'  , nullable=True )
    enable_tparty_interface  = Column(String(30) ,default='NO'  , nullable=False )
    external_mail_exe  = Column(String(400)  , nullable=True )
    financial_year_start_date  = Column(DateTime(timezone=True)  , nullable=True )
    forms_version  = Column(String(10) ,default='10'  , nullable=True )
    helpexec  = Column(String(100)  , nullable=True )
    helpfile  = Column(String(100)  , nullable=True )
    install_type  = Column(String(30) ,default='SINGLEBU'  , nullable=True )
    instance_name  = Column(String(100)  , nullable=True )
    licence_type  = Column(String(50)  , nullable=True )
    location_id  = Column(BigInteger  , nullable=True )
    menu_color_scheme  = Column(String(10)  , nullable=True )
    mobile_url  = Column(String(400)  , nullable=True )
    mobile_url_homepage  = Column(String(100)  , nullable=True )
    option_type  = Column(String(30)  , nullable=True )
    period_header_id  = Column(BigInteger  , nullable=True )
    picture_path  = Column(String(100)  , nullable=True )
    picture_type  = Column(String(20)  , nullable=True )
    remote_report_url  = Column(String(1000)  , nullable=True )
    report_execution_method  = Column(String(30)  , nullable=True )
    report_output_path  = Column(String(100)  , nullable=True )
    report_server_name  = Column(String(100)  , nullable=True )
    report_server_url  = Column(String(300)  , nullable=True )
    smtp_domain  = Column(String(256)  , nullable=True )
    smtp_from_address  = Column(String(256)  , nullable=True )
    smtp_password  = Column(String(100)  , nullable=True )
    smtp_port  = Column(BigInteger  , nullable=True )
    smtp_server_name  = Column(String(256)  , nullable=True )
    smtp_user_name  = Column(String(100)  , nullable=True )
    sys_attribute1  = Column(BigInteger  , nullable=True )
    sys_attribute2  = Column(DateTime(timezone=True)  , nullable=True )
    sys_attribute3  = Column(String(200)  , nullable=True )
    sys_attribute4  = Column(DateTime(timezone=True)  , nullable=True )
    sys_attribute5  = Column(BigInteger  , nullable=True )
    sys_options_id  = Column(BigInteger, primary_key=True  , nullable=False )
    tax_code_id  = Column(BigInteger  , nullable=True )
    ver_no  = Column(String(10)  , nullable=True )
    www_image_path  = Column(String(400)  , nullable=True )


class CmnTaxBreakups(Base, AuditColumns):
    __tablename__ = 'cmn_tax_breakups'
    __table_args__ = {'extend_existing': True}
    ctb_desc  = Column(String(100)  , nullable=True )
    ctb_id  = Column(BigInteger, primary_key=True  , nullable=False )
    ctb_name  = Column(String(30)  , nullable=False )
    ctb_percent  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    ctb_recoverable  = Column(String(1)  , nullable=True )
    ctc_tax_code_id  = Column(BigInteger , ForeignKey('cmn_tax_codes.tax_code_id')  , nullable=True )


class CmnTaxCodes(Base, AuditColumns):
    __tablename__ = 'cmn_tax_codes'
    __table_args__ = {'extend_existing': True}
    end_date  = Column(DateTime(timezone=True)  , nullable=True )
    gac_gl_account_id  = Column(BigInteger , ForeignKey('gl_account_codes.gl_account_id')  , nullable=True )
    tax_code  = Column(String(30)  , nullable=False )
    tax_code_id  = Column(BigInteger, primary_key=True  , nullable=False )
    tax_desc  = Column(String(50)  , nullable=True )
    tax_percent  = Column(Numeric(precision=14, scale=2) ,default=100  , nullable=True )
    tax_print_desc  = Column(String(400)  , nullable=True )
    tax_rate  = Column(Numeric(precision=5, scale=3) ,default=0  , nullable=True )
    #c_apdbnotelines  = relationship("ApDbnoteLines")
    #c_apinvoicelines  = relationship("ApInvoiceLines")
    #c_apsuppliers  = relationship("ApSuppliers")
    #c_arcustomers  = relationship("ArCustomers")
    #c_arinvoicelines  = relationship("ArInvoiceLines")
    #c_arsalesorderlines  = relationship("ArSalesorderLines")
    #c_cmntaxbreakups  = relationship("CmnTaxBreakups")
    #c_pogrnlines  = relationship("PoGrnLines")
    #c_polines  = relationship("PoLines")


class CmnTerminals(Base, AuditColumns):
    __tablename__ = 'cmn_terminals'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    application_directory  = Column(String(100)  , nullable=True )
    description  = Column(String(2000)  , nullable=True )
    hardware_type  = Column(String(30) ,default='PC'  , nullable=True )
    hard_disk_volumeno  = Column(String(100)  , nullable=True )
    install_date  = Column(DateTime(timezone=True), server_default=func.now() , nullable=True )
    name  = Column(String(30)  , nullable=False )
    print_flag  = Column(String(1) ,default='Y'  , nullable=True )
    terminal_id  = Column(BigInteger, primary_key=True  , nullable=False )
    terminal_type  = Column(String(30) ,default='FrontOffice'  , nullable=True )
    #c_cmnprintermatrix  = relationship("CmnPrinterMatrix")
    #c_cmnterminalproperties  = relationship("CmnTerminalProperties")


class CmnTerminalProperties(Base, AuditColumns):
    __tablename__ = 'cmn_terminal_properties'
    __table_args__ = {'extend_existing': True}
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    attribute5  = Column(String(240)  , nullable=True )
    attribute6  = Column(String(240)  , nullable=True )
    description  = Column(String(2000)  , nullable=True )
    name  = Column(String(30)  , nullable=False )
    property_id  = Column(BigInteger  , nullable=True )
    terminal_id  = Column(BigInteger , ForeignKey('cmn_terminals.terminal_id')  , nullable=False )
    terminal_property_id  = Column(BigInteger, primary_key=True  , nullable=False )


class CmnTerms(Base, AuditColumns):
    __tablename__ = 'cmn_terms'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    attribute5  = Column(String(240)  , nullable=True )
    attribute6  = Column(String(240)  , nullable=True )
    sl_no  = Column(BigInteger  , nullable=True )
    tc_code_id  = Column(BigInteger, primary_key=True  , nullable=False )
    tc_text  = Column(String(2000)  , nullable=True )
    usage  = Column(String(30)  , nullable=True )


class CmnUnitOfMeasurements(Base, AuditColumns):
    __tablename__ = 'cmn_unit_of_measurements'
    __table_args__ = {'extend_existing': True}
    uom_conversion  = Column(Numeric(precision=10, scale=3)  , nullable=True )
    uom_conversion_desc  = Column(String(15)  , nullable=True )
    uom_conv_sdesc  = Column(String(15)  , nullable=True )
    uom_id  = Column(BigInteger, primary_key=True  , nullable=False )
    uom_long_desc  = Column(String(100)  , nullable=True )
    uom_printsmalllabel  = Column(String(1) ,default='N'  , nullable=True )
    uom_short_desc  = Column(String(15)  , nullable=True )
    #c_invitemmasters  = relationship("InvItemMasters")
    #c_invitempricebreaks  = relationship("InvItemPricebreaks")
    #c_pricetemplatelines  = relationship("PriceTemplateLines")


class CmnUsers(Base, AuditColumns):
    __tablename__ = 'cmn_users'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    auto_exit_type  = Column(String(30)  , nullable=True )
    customer_id  = Column(BigInteger  , nullable=True )
    deliverto_contact_id  = Column(BigInteger  , nullable=True )
    deliverto_customer_id  = Column(BigInteger  , nullable=True )
    email  = Column( String(100) , nullable=True )
    employee_id  = Column(BigInteger  , nullable=True )
    end_date  = Column(DateTime(timezone=True)  , nullable=True )
    function_id  = Column(BigInteger  , nullable=True )
    invoiceto_contact_id  = Column(BigInteger  , nullable=True )
    invoiceto_customer_id  = Column(BigInteger  , nullable=True )
    is_active  = Column(Integer ,default=1  , nullable=True )
    is_admin  = Column(Integer ,default=0  , nullable=True )
    is_staff  = Column(Integer ,default=1  , nullable=True )
    last_login  = Column(DateTime(timezone=True)  , nullable=True )
    last_login_date  = Column(DateTime(timezone=True)  , nullable=True )
    last_password_date  = Column(DateTime(timezone=True), server_default=func.now() , nullable=True )
    location_id  = Column(BigInteger  , nullable=True )
    multi_location  = Column(String(1) ,default='N'  , nullable=True )
    password  = Column( String(150) , nullable=True )
    password_expire_after  = Column(Integer ,default=60  , nullable=True )
    start_date  = Column(DateTime(timezone=True), server_default=func.now() , nullable=True )
    supplier_id  = Column(BigInteger  , nullable=True )
    user_description  = Column(String(100)  , nullable=True )
    user_email  = Column(String(100)  , nullable=True )
    user_full_name  = Column(String(100)  , nullable=True )
    user_group  = Column(String(30)  , nullable=True )
    user_id  = Column(BigInteger, primary_key=True  , nullable=False )
    user_name  = Column(String(15)  , nullable=False )
    user_password  = Column(String(150)  , nullable=False )
    #c_cmnloggedinusers  = relationship("CmnLoggedinUsers")
    #c_cmnuserexclusions  = relationship("CmnUserExclusions")
    #c_cmnuserreportgroups  = relationship("CmnUserReportgroups")
    #c_cmnuserresponsibilities  = relationship("CmnUserResponsibilities")
    #c_djangoadminlog  = relationship("DjangoAdminLog")
    #c_hruserassignments  = relationship("HrUserAssignments")
    #c_sysnotificationrecipients  = relationship("SysNotificationRecipients")


class CmnUserExclusions(Base, AuditColumns):
    __tablename__ = 'cmn_user_exclusions'
    __table_args__ = {'extend_existing': True}
    exclusion_id  = Column(BigInteger, primary_key=True  , nullable=False )
    exclusion_type  = Column(String(30)  , nullable=True )
    function_id  = Column(BigInteger , ForeignKey('cmn_functions.function_id')  , nullable=True )
    report_id  = Column(BigInteger , ForeignKey('cmn_reports.report_id')  , nullable=True )
    user_id  = Column(BigInteger , ForeignKey('cmn_users.user_id')  , nullable=False )


class CmnUserReportgroups(Base, AuditColumns):
    __tablename__ = 'cmn_user_reportgroups'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    report_group_id  = Column(BigInteger , ForeignKey('cmn_reportgroup_headers.report_group_id')  , nullable=True )
    sl_no  = Column(Integer  , nullable=False )
    user_id  = Column(BigInteger , ForeignKey('cmn_users.user_id')  , nullable=False )
    user_reportgroup_id  = Column(BigInteger, primary_key=True  , nullable=False )


class CmnUserResponsibilities(Base, AuditColumns):
    __tablename__ = 'cmn_user_responsibilities'
    __table_args__ = {'extend_existing': True}
    cr_resp_id  = Column(BigInteger , ForeignKey('cmn_responsibilities.resp_id')  , nullable=False )
    cur_delete  = Column(String(1) ,default='Y'  , nullable=True )
    cu_user_id  = Column(BigInteger , ForeignKey('cmn_users.user_id')  , nullable=False )
    read  = Column(String(1) ,default='Y'  , nullable=True )
    user_resp_desc  = Column(String(100)  , nullable=True )
    user_resp_id  = Column(BigInteger, primary_key=True  , nullable=False )
    write  = Column(String(1) ,default='Y'  , nullable=True )


class CmnUserTopFunctions(Base, AuditColumns):
    __tablename__ = 'cmn_user_top_functions'
    __table_args__ = {'extend_existing': True}
    cutf_id  = Column(BigInteger, primary_key=True  , nullable=False )
    nooftimesused  = Column(BigInteger  , nullable=True )
    screen_number  = Column(BigInteger  , nullable=True )
    terminal_id  = Column(BigInteger  , nullable=True )


class CmnWdayShifts(Base, AuditColumns):
    __tablename__ = 'cmn_wday_shifts'
    __table_args__ = {'extend_existing': True}
    shift_id  = Column(BigInteger , ForeignKey('cmn_shifts.shift_id')  , nullable=True )
    wday_shift_id  = Column(BigInteger, primary_key=True  , nullable=False )
    working_day_id  = Column(BigInteger , ForeignKey('emp_working_days.working_day_id')  , nullable=True )


class CrmCommunications(Base, AuditColumns):
    __tablename__ = 'crm_communications'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    attach_file1  = Column(String(2000)  , nullable=True )
    attach_file1_identifier  = Column(String(2000)  , nullable=True )
    attach_file2  = Column(String(2000)  , nullable=True )
    attach_file2_identifier  = Column(String(2000)  , nullable=True )
    attach_file3  = Column(String(2000)  , nullable=True )
    attach_file3_identifier  = Column(String(2000)  , nullable=True )
    attach_file4  = Column(String(2000)  , nullable=True )
    attach_file4_identifier  = Column(String(2000)  , nullable=True )
    attach_file5  = Column(String(2000)  , nullable=True )
    attach_file5_identifier  = Column(String(2000)  , nullable=True )
    attach_file6  = Column(String(2000)  , nullable=True )
    attach_file6_identifier  = Column(String(2000)  , nullable=True )
    attach_url1  = Column(String(2000)  , nullable=True )
    attach_url1_identifier  = Column(String(2000)  , nullable=True )
    attach_url2  = Column(String(2000)  , nullable=True )
    attach_url2_identifier  = Column(String(2000)  , nullable=True )
    attach_url3  = Column(String(2000)  , nullable=True )
    attach_url3_identifier  = Column(String(2000)  , nullable=True )
    attach_url4  = Column(String(2000)  , nullable=True )
    attach_url4_identifier  = Column(String(2000)  , nullable=True )
    attach_url5  = Column(String(2000)  , nullable=True )
    attach_url5_identifier  = Column(String(2000)  , nullable=True )
    attach_url6  = Column(String(2000)  , nullable=True )
    attach_url6_identifier  = Column(String(2000)  , nullable=True )
    cmn_object_batch_id  = Column(BigInteger  , nullable=True )
    communication_blob  = Column(Text  , nullable=True )
    communication_clob  = Column(Text  , nullable=True )
    communication_description  = Column(String(4000)  , nullable=True )
    communication_id  = Column(BigInteger, primary_key=True  , nullable=False )
    communication_name  = Column(String(100)  , nullable=True )
    communication_type_code  = Column(String(30)  , nullable=False )
    communtication_method_code  = Column(String(30)  , nullable=True )
    date_from  = Column(DateTime(timezone=True)  , nullable=True )
    date_to  = Column(DateTime(timezone=True)  , nullable=True )
    from_email  = Column(String(240)  , nullable=True )
    item_batch_id  = Column(BigInteger  , nullable=True )
    merge_header_id  = Column(BigInteger  , nullable=True )
    plsql_function  = Column(String(4000)  , nullable=True )
    reply_email  = Column(String(240)  , nullable=True )
    source_url  = Column(String(4000)  , nullable=True )
    subject  = Column(String(1000)  , nullable=True )
    template_id  = Column(BigInteger  , nullable=True )
    whom_list  = Column(String(4000)  , nullable=True )


class CrmParties(Base, AuditColumns):
    __tablename__ = 'crm_parties'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    address  = Column(String(255)  , nullable=False )
    city  = Column(String(40)  , nullable=True )
    contact_firstname  = Column(String(140)  , nullable=True )
    contact_gender  = Column(String(30)  , nullable=True )
    contact_id  = Column(BigInteger  , nullable=True )
    contact_lastname  = Column(String(140)  , nullable=True )
    contact_method_code  = Column(String(30)  , nullable=True )
    contact_middlename  = Column(String(140)  , nullable=True )
    contact_title  = Column(String(30)  , nullable=True )
    country_code  = Column(String(10)  , nullable=False )
    county  = Column(String(40)  , nullable=True )
    customer_id  = Column(BigInteger  , nullable=True )
    email  = Column(String(255)  , nullable=True )
    email1  = Column(String(100)  , nullable=True )
    email2  = Column(String(100)  , nullable=True )
    email3  = Column(String(100)  , nullable=True )
    fax_business  = Column(String(20)  , nullable=True )
    fax_others  = Column(String(255)  , nullable=True )
    import_status  = Column(String(30)  , nullable=True )
    include_in_mailshot  = Column(String(1) ,default='Y'  , nullable=True )
    party_group_code  = Column(String(30)  , nullable=False )
    party_id  = Column(BigInteger, primary_key=True  , nullable=False )
    party_name  = Column(String(240)  , nullable=False )
    party_source  = Column(String(30)  , nullable=False )
    party_source_id  = Column(BigInteger  , nullable=False )
    party_type_code  = Column(String(30)  , nullable=False )
    phone_business  = Column(String(20)  , nullable=True )
    phone_mobile  = Column(String(20)  , nullable=True )
    phone_office  = Column(String(20)  , nullable=True )
    phone_others  = Column(String(255)  , nullable=True )
    post_code  = Column(String(10)  , nullable=True )
    primary_party_id  = Column(BigInteger  , nullable=True )
    subscribed_by  = Column(String(200)  , nullable=True )
    subscription_date  = Column(DateTime(timezone=True)  , nullable=True )
    subscription_method  = Column(String(30)  , nullable=True )
    subscription_notes  = Column(String(4000)  , nullable=True )
    subscription_type  = Column(String(30)  , nullable=True )
    supplier_id  = Column(BigInteger  , nullable=True )
    system_status_code  = Column(String(30)  , nullable=True )
    system_status_text  = Column(String(2000)  , nullable=True )
    user_id  = Column(BigInteger  , nullable=True )
    www  = Column(String(240)  , nullable=True )


class CrmTemplates(Base, AuditColumns):
    __tablename__ = 'crm_templates'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    attach_file1  = Column(String(2000)  , nullable=True )
    attach_file2  = Column(String(2000)  , nullable=True )
    attach_file3  = Column(String(2000)  , nullable=True )
    attach_file4  = Column(String(2000)  , nullable=True )
    attach_file5  = Column(String(2000)  , nullable=True )
    attach_file6  = Column(String(2000)  , nullable=True )
    attach_url1  = Column(String(2000)  , nullable=True )
    attach_url2  = Column(String(2000)  , nullable=True )
    attach_url3  = Column(String(2000)  , nullable=True )
    attach_url4  = Column(String(2000)  , nullable=True )
    attach_url5  = Column(String(2000)  , nullable=True )
    attach_url6  = Column(String(2000)  , nullable=True )
    date_from  = Column(DateTime(timezone=True)  , nullable=True )
    date_to  = Column(DateTime(timezone=True)  , nullable=True )
    from_email  = Column(String(240)  , nullable=True )
    merge_header_id  = Column(BigInteger  , nullable=True )
    plsql_function  = Column(String(4000)  , nullable=True )
    reply_email  = Column(String(240)  , nullable=True )
    source_url  = Column(String(4000)  , nullable=True )
    template_blob  = Column(Text  , nullable=True )
    template_clob  = Column(Text  , nullable=True )
    template_description  = Column(String(4000)  , nullable=True )
    template_id  = Column(BigInteger, primary_key=True  , nullable=False )
    template_name  = Column(String(100)  , nullable=True )
    template_subject  = Column(String(1000)  , nullable=True )
    template_type_code  = Column(String(30)  , nullable=False )


class DailyStockSnapshots(Base, AuditColumns):
    __tablename__ = 'daily_stock_snapshots'
    __table_args__ = {'extend_existing': True}
    closingbal  = Column(Numeric(precision=22, scale=3)  , nullable=True )
    datechar  = Column(String(15), primary_key=True  , nullable=False )
    datefrom  = Column(DateTime(timezone=True)  , nullable=True )
    dateto  = Column(DateTime(timezone=True)  , nullable=True )
    daychar  = Column(String(15)  , nullable=True )
    daynum  = Column(Integer  , nullable=True )
    item_cost_price  = Column(Numeric(precision=22, scale=3)  , nullable=True )
    item_curr_qty  = Column(Numeric(precision=22, scale=3)  , nullable=True )
    item_id  = Column(BigInteger, primary_key=True  , nullable=False )
    monthchar  = Column(String(15)  , nullable=True )
    monthnum  = Column(Integer  , nullable=True )
    openingbal  = Column(Numeric(precision=22, scale=3)  , nullable=True )
    qtyadjusted  = Column(Numeric(precision=22, scale=3)  , nullable=True )
    qtybought  = Column(Numeric(precision=22, scale=3)  , nullable=True )
    qtyinorder  = Column(Numeric(precision=22, scale=3)  , nullable=True )
    qtyminus  = Column(Numeric(precision=22, scale=3)  , nullable=True )
    qtyplus  = Column(Numeric(precision=22, scale=3)  , nullable=True )
    qtypro  = Column(Numeric(precision=22, scale=3)  , nullable=True )
    qtyshould  = Column(Numeric(precision=22, scale=3)  , nullable=True )
    qtysold  = Column(Numeric(precision=22, scale=3)  , nullable=True )
    quarternum  = Column(Integer  , nullable=True )
    stockpercent  = Column(Numeric(precision=22, scale=3)  , nullable=True )
    stockvalue  = Column(Numeric(precision=22, scale=3)  , nullable=True )
    valuebought  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    valueminus  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    valuepercent  = Column(Numeric(precision=22, scale=3)  , nullable=True )
    valueplus  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    valuepro  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    valuesold  = Column(Numeric(precision=22, scale=2)  , nullable=True )
    weekmonth  = Column(Integer  , nullable=True )
    weekyear  = Column(Integer  , nullable=True )
    yearnum  = Column(Integer  , nullable=True )


class DispatchHeaders(Base, AuditColumns):
    __tablename__ = 'dispatch_headers'
    __table_args__ = {'extend_existing': True}
    attribute1  = Column(String(255)  , nullable=True )
    attribute2  = Column(String(255)  , nullable=True )
    attribute3  = Column(String(255)  , nullable=True )
    attribute4  = Column(String(255)  , nullable=True )
    contact_name  = Column(String(100)  , nullable=True )
    courier_freight_name  = Column(String(400)  , nullable=True )
    delivery_address  = Column(String(400)  , nullable=True )
    description  = Column(String(400)  , nullable=True )
    dispatch_batch  = Column(String(50)  , nullable=True )
    dispatch_date  = Column(DateTime(timezone=True)  , nullable=False )
    dispatch_id  = Column(BigInteger, primary_key=True  , nullable=False )
    dispatch_number  = Column(String(50)  , nullable=False, unique=True )
    dispatch_status  = Column(String(30) ,default='NEW'  , nullable=True )
    dispatch_status_date  = Column(DateTime(timezone=True), server_default=func.now() , nullable=True )
    dispatch_type  = Column(String(50) ,default='DISPATCH'  , nullable=True )
    driver_name  = Column(String(100)  , nullable=True )
    freight_header_id  = Column(BigInteger , ForeignKey('ar_freight_headers.freight_header_id')  , nullable=True )
    location_id  = Column(BigInteger , ForeignKey('inv_locations.location_id')  , nullable=False )
    notes_to_customer  = Column(String(100)  , nullable=True )
    notes_to_driver  = Column(String(400)  , nullable=True )
    special_notes  = Column(String(400)  , nullable=True )
    veichle_registration  = Column(String(100)  , nullable=True )
    #c_palletheaders  = relationship("PalletHeaders")


class EmpDepartments(Base, AuditColumns):
    __tablename__ = 'emp_departments'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    department_description  = Column(String(240)  , nullable=True )
    department_id  = Column(BigInteger, primary_key=True  , nullable=False )
    department_name  = Column(String(30)  , nullable=False )
    gl_account_id  = Column(BigInteger  , nullable=True )
    #c_empemployees  = relationship("EmpEmployees")


class EmpEmployees(Base, AuditColumns):
    __tablename__ = 'emp_employees'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    address  = Column(String(240)  , nullable=True )
    city  = Column(String(40)  , nullable=True )
    country_code  = Column(String(10)  , nullable=True )
    county  = Column(String(40)  , nullable=True )
    date_of_birth  = Column(DateTime(timezone=True)  , nullable=True )
    department_id  = Column(BigInteger , ForeignKey('emp_departments.department_id')  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    email  = Column(String(240)  , nullable=True )
    employee_id  = Column(BigInteger, primary_key=True  , nullable=False )
    employee_number  = Column(String(30)  , nullable=True )
    first_name  = Column(String(50)  , nullable=True )
    full_name  = Column(String(240)  , nullable=True )
    gl_account_id  = Column(BigInteger  , nullable=True )
    job_end_date  = Column(DateTime(timezone=True)  , nullable=True )
    job_id  = Column(BigInteger , ForeignKey('emp_jobs.job_id')  , nullable=True )
    job_start_date  = Column(DateTime(timezone=True)  , nullable=True )
    job_type_id  = Column(BigInteger , ForeignKey('emp_job_types.job_type_id')  , nullable=True )
    last_name  = Column(String(50)  , nullable=True )
    middle_name  = Column(String(50)  , nullable=True )
    mobile  = Column(String(20)  , nullable=True )
    ni_number  = Column(String(30)  , nullable=True )
    payroll_number  = Column(String(30)  , nullable=True )
    phone1  = Column(String(20)  , nullable=True )
    phone2  = Column(String(20)  , nullable=True )
    position_id  = Column(BigInteger , ForeignKey('emp_positions.position_id')  , nullable=True )
    post_code  = Column(String(10)  , nullable=True )
    sex  = Column(String(1) ,default='N'  , nullable=True )
    title  = Column(String(20)  , nullable=True )


class EmpJobs(Base, AuditColumns):
    __tablename__ = 'emp_jobs'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    gl_account_id  = Column(BigInteger  , nullable=True )
    job_description  = Column(String(240)  , nullable=True )
    job_id  = Column(BigInteger, primary_key=True  , nullable=False )
    job_name  = Column(String(30)  , nullable=False )
    #c_empemployees  = relationship("EmpEmployees")


class EmpJobTypes(Base, AuditColumns):
    __tablename__ = 'emp_job_types'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    job_type  = Column(String(30)  , nullable=False )
    job_type_description  = Column(String(240)  , nullable=True )
    job_type_id  = Column(BigInteger, primary_key=True  , nullable=False )
    #c_empemployees  = relationship("EmpEmployees")
    #c_empjobtypedays  = relationship("EmpJobTypeDays")


class EmpJobTypeDays(Base, AuditColumns):
    __tablename__ = 'emp_job_type_days'
    __table_args__ = {'extend_existing': True}
    description  = Column(String(240)  , nullable=True )
    job_type_day_id  = Column(BigInteger, primary_key=True  , nullable=False )
    job_type_id  = Column(BigInteger , ForeignKey('emp_job_types.job_type_id')  , nullable=False )
    working_day_id  = Column(BigInteger , ForeignKey('emp_working_days.working_day_id')  , nullable=False )


class EmpPositions(Base, AuditColumns):
    __tablename__ = 'emp_positions'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    gl_account_id  = Column(BigInteger  , nullable=True )
    position_description  = Column(String(240)  , nullable=True )
    position_id  = Column(BigInteger, primary_key=True  , nullable=False )
    position_name  = Column(String(30)  , nullable=False )
    #c_empemployees  = relationship("EmpEmployees")


class EmpWorkingDays(Base, AuditColumns):
    __tablename__ = 'emp_working_days'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    break_hours  = Column(Numeric(precision=5, scale=2)  , nullable=True )
    break_timefrom  = Column(String(10)  , nullable=True )
    break_timeto  = Column(String(10)  , nullable=True )
    week_day  = Column(String(30)  , nullable=True )
    working_day  = Column(String(30)  , nullable=False )
    working_day_id  = Column(BigInteger, primary_key=True  , nullable=False )
    working_description  = Column(String(240)  , nullable=True )
    working_hours  = Column(Numeric(precision=5, scale=2)  , nullable=True )
    working_timefrom  = Column(String(10)  , nullable=True )
    working_timeto  = Column(String(10)  , nullable=True )
    #c_cmnwdayshifts  = relationship("CmnWdayShifts")
    #c_empjobtypedays  = relationship("EmpJobTypeDays")


class ExportHeaders(Base, AuditColumns):
    __tablename__ = 'export_headers'
    __table_args__ = {'extend_existing': True}
    export_header_id  = Column(BigInteger, primary_key=True  , nullable=False )
    export_name  = Column(String(100)  , nullable=False )
    export_type  = Column(String(30) ,default='ITEM'  , nullable=True )
    param1  = Column(String(400)  , nullable=True )
    param10  = Column(String(400)  , nullable=True )
    param11  = Column(String(400)  , nullable=True )
    param12  = Column(String(400)  , nullable=True )
    param13  = Column(String(400)  , nullable=True )
    param14  = Column(String(400)  , nullable=True )
    param15  = Column(String(400)  , nullable=True )
    param16  = Column(String(400)  , nullable=True )
    param17  = Column(String(400)  , nullable=True )
    param18  = Column(String(400)  , nullable=True )
    param19  = Column(String(400)  , nullable=True )
    param2  = Column(String(400)  , nullable=True )
    param20  = Column(String(400)  , nullable=True )
    param21  = Column(String(400)  , nullable=True )
    param22  = Column(String(400)  , nullable=True )
    param23  = Column(String(400)  , nullable=True )
    param24  = Column(String(400)  , nullable=True )
    param25  = Column(String(400)  , nullable=True )
    param26  = Column(String(400)  , nullable=True )
    param27  = Column(String(400)  , nullable=True )
    param28  = Column(String(400)  , nullable=True )
    param29  = Column(String(400)  , nullable=True )
    param3  = Column(String(400)  , nullable=True )
    param30  = Column(String(400)  , nullable=True )
    param31  = Column(String(400)  , nullable=True )
    param32  = Column(String(400)  , nullable=True )
    param33  = Column(String(400)  , nullable=True )
    param34  = Column(String(400)  , nullable=True )
    param35  = Column(String(400)  , nullable=True )
    param36  = Column(String(400)  , nullable=True )
    param37  = Column(String(400)  , nullable=True )
    param38  = Column(String(400)  , nullable=True )
    param39  = Column(String(400)  , nullable=True )
    param4  = Column(String(400)  , nullable=True )
    param40  = Column(String(400)  , nullable=True )
    param5  = Column(String(400)  , nullable=True )
    param6  = Column(String(400)  , nullable=True )
    param7  = Column(String(400)  , nullable=True )
    param8  = Column(String(400)  , nullable=True )
    param9  = Column(String(400)  , nullable=True )
    source_id  = Column(BigInteger  , nullable=True )
    source_name  = Column(String(50) ,default='INV_ITEM_MASTERS'  , nullable=True )
    #c_exportlines  = relationship("ExportLines")


class ExtTransHeaders(Base, AuditColumns):
    __tablename__ = 'ext_trans_headers'
    __table_args__ = {'extend_existing': True}
    batch_name  = Column(String(100)  , nullable=False )
    customer_id  = Column(BigInteger  , nullable=True )
    ext_trans_type  = Column(String(30) ,default='IMPORT'  , nullable=True )
    file_name  = Column(String(100)  , nullable=True )
    header_id  = Column(BigInteger, primary_key=True  , nullable=False )
    payment_source  = Column(String(100)  , nullable=True )
    status  = Column(String(30) ,default='NEW'  , nullable=True )
    status_date  = Column(DateTime(timezone=True), server_default=func.now() , nullable=True )
    supplier_id  = Column(BigInteger  , nullable=True )
    trans_source  = Column(String(100) ,default='MARKETPLACE'  , nullable=True )
    trans_source_id  = Column(BigInteger  , nullable=True )
    trans_subsource_id  = Column(BigInteger  , nullable=True )
    trans_target  = Column(String(30) ,default='AR'  , nullable=True )
    #c_exttranslines  = relationship("ExtTransLines")


class GlAccountCodes(Base, AuditColumns):
    __tablename__ = 'gl_account_codes'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    attribute1  = Column(String(2000)  , nullable=True )
    attribute10  = Column(String(2000)  , nullable=True )
    attribute10_type  = Column(String(30)  , nullable=True )
    attribute11  = Column(String(2000)  , nullable=True )
    attribute11_type  = Column(String(30)  , nullable=True )
    attribute12  = Column(String(2000)  , nullable=True )
    attribute12_type  = Column(String(30)  , nullable=True )
    attribute1_type  = Column(String(30)  , nullable=True )
    attribute2  = Column(String(2000)  , nullable=True )
    attribute2_type  = Column(String(30)  , nullable=True )
    attribute3  = Column(String(2000)  , nullable=True )
    attribute3_type  = Column(String(30)  , nullable=True )
    attribute4  = Column(String(2000)  , nullable=True )
    attribute4_type  = Column(String(30)  , nullable=True )
    attribute5  = Column(String(2000)  , nullable=True )
    attribute5_type  = Column(String(30)  , nullable=True )
    attribute6  = Column(String(2000)  , nullable=True )
    attribute6_type  = Column(String(30)  , nullable=True )
    attribute7  = Column(String(2000)  , nullable=True )
    attribute7_type  = Column(String(30)  , nullable=True )
    attribute8  = Column(String(2000)  , nullable=True )
    attribute8_type  = Column(String(30)  , nullable=True )
    attribute9  = Column(String(2000)  , nullable=True )
    attribute9_type  = Column(String(30)  , nullable=True )
    description  = Column(String(50)  , nullable=True )
    end_date  = Column(DateTime(timezone=True)  , nullable=True )
    gc_gl_category_id  = Column(BigInteger , ForeignKey('gl_categories.gl_category_id')  , nullable=False )
    gl_account_code  = Column(BigInteger ,default=0  , nullable=True )
    gl_account_id  = Column(BigInteger, primary_key=True  , nullable=False )
    gl_code_category  = Column(String(30)  , nullable=True )
    gl_code_char  = Column(String(30)  , nullable=True )
    gl_qualifier_code1  = Column(String(30)  , nullable=True )
    gl_qualifier_code2  = Column(String(30)  , nullable=True )
    gsc_gl_sub_category_id  = Column(BigInteger , ForeignKey('gl_sub_categories.gl_sub_category_id')  , nullable=False )
    orig_system_ref1  = Column(String(30)  , nullable=True )
    orig_system_ref2  = Column(String(30)  , nullable=True )
    short_name  = Column(String(30)  , nullable=True )
    #c_apinvoiceheaders  = relationship("ApInvoiceHeaders")
    #c_apinvoicelines  = relationship("ApInvoiceLines")
    #c_arfreightmasters  = relationship("ArFreightMasters")
    #c_cmnbankaccounts  = relationship("CmnBankAccounts")
    #c_cmnpayments  = relationship("CmnPayments")
    #c_cmnpaymentmethods  = relationship("CmnPaymentMethods")
    #c_cmnpaymentmethods  = relationship("CmnPaymentMethods")
    #c_cmnpaymenttrans  = relationship("CmnPaymentTrans")
    #c_cmntaxcodes  = relationship("CmnTaxCodes")
    #c_glcashinguplines  = relationship("GlCashingupLines")
    #c_glcashinguplines  = relationship("GlCashingupLines")
    #c_gljelines  = relationship("GlJeLines")
    #c_glpaymentheaders  = relationship("GlPaymentHeaders")
    #c_glpaymentlines  = relationship("GlPaymentLines")
    #c_invlocations  = relationship("InvLocations")
    #c_poheaders  = relationship("PoHeaders")
    #c_polines  = relationship("PoLines")


class GlCashingupHeaders(Base, AuditColumns):
    __tablename__ = 'gl_cashingup_headers'
    __table_args__ = {'extend_existing': True}
    actual_cashed_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    banked_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    bank_account_id  = Column(BigInteger , ForeignKey('cmn_bank_accounts.bank_account_id')  , nullable=True )
    bank_id  = Column(BigInteger  , nullable=True )
    batch_name  = Column(String(30)  , nullable=False )
    cashingup_category  = Column(String(30)  , nullable=False )
    cashingup_id  = Column(BigInteger, primary_key=True  , nullable=False )
    cashingup_reference  = Column(String(400)  , nullable=True )
    cashingup_source  = Column(String(30)  , nullable=False )
    cashingup_status  = Column(String(30)  , nullable=True )
    cashingup_status_date  = Column(DateTime(timezone=True)  , nullable=True )
    closing_balance  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    date_from  = Column(DateTime(timezone=True)  , nullable=False )
    date_to  = Column(DateTime(timezone=True)  , nullable=False )
    description  = Column(String(400)  , nullable=True )
    difference_amount1  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    difference_amount2  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    difference_reason1  = Column(String(400)  , nullable=True )
    difference_reason2  = Column(String(400)  , nullable=True )
    gl_date  = Column(DateTime(timezone=True)  , nullable=True )
    location_id  = Column(BigInteger  , nullable=True )
    opening_balance  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    terminal_id  = Column(BigInteger  , nullable=True )
    user_id  = Column(BigInteger  , nullable=True )
    #c_glcashinguplines  = relationship("GlCashingupLines")


class GlCashingupLines(Base, AuditColumns):
    __tablename__ = 'gl_cashingup_lines'
    __table_args__ = {'extend_existing': True}
    cashingup_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    cashingup_id  = Column(BigInteger , ForeignKey('gl_cashingup_headers.cashingup_id')  , nullable=False )
    cashingup_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    cashingup_line_status  = Column(String(30)  , nullable=True )
    cashingup_line_status_date  = Column(DateTime(timezone=True)  , nullable=True )
    cashingup_reference  = Column(String(400)  , nullable=True )
    description  = Column(String(400)  , nullable=True )
    difference_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    diff_gl_account_id  = Column(BigInteger , ForeignKey('gl_account_codes.gl_account_id')  , nullable=False )
    diff_reason  = Column(String(250)  , nullable=True )
    gl_account_id  = Column(BigInteger , ForeignKey('gl_account_codes.gl_account_id')  , nullable=False )
    gl_account_name  = Column(String(400)  , nullable=True )
    location_id  = Column(BigInteger  , nullable=True )
    payment_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    payment_date  = Column(DateTime(timezone=True)  , nullable=True )
    pmnt_method  = Column(String(100)  , nullable=True )
    pmnt_method_id  = Column(BigInteger , ForeignKey('cmn_payment_methods.pmnt_method_id')  , nullable=False )
    terminal_id  = Column(BigInteger  , nullable=True )
    transaction_batch  = Column(String(30)  , nullable=True )
    transaction_date  = Column(DateTime(timezone=True)  , nullable=True )
    transaction_number  = Column(String(30)  , nullable=True )
    transaction_payment_id  = Column(BigInteger  , nullable=True )
    transaction_ref1  = Column(String(250)  , nullable=True )
    transaction_ref2  = Column(String(250)  , nullable=True )
    transaction_ref3  = Column(String(250)  , nullable=True )
    transaction_ref4  = Column(String(250)  , nullable=True )
    transaction_ref5  = Column(String(250)  , nullable=True )
    transaction_ref6  = Column(String(250)  , nullable=True )
    transaction_source  = Column(String(30)  , nullable=True )
    transaction_source_id  = Column(BigInteger  , nullable=True )
    transaction_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    user_id  = Column(BigInteger  , nullable=True )


class GlCategories(Base, AuditColumns):
    __tablename__ = 'gl_categories'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1)  , nullable=True )
    gl_category_desc  = Column(String(240)  , nullable=True )
    gl_category_id  = Column(BigInteger, primary_key=True  , nullable=False )
    gl_category_name  = Column(String(30)  , nullable=True )
    gl_qualifier_code1  = Column(String(30)  , nullable=True )
    gl_qualifier_code2  = Column(String(30)  , nullable=True )
    #c_glaccountcodes  = relationship("GlAccountCodes")
    #c_glsubcategories  = relationship("GlSubCategories")


class GlJeHeaders(Base, AuditColumns):
    __tablename__ = 'gl_je_headers'
    __table_args__ = {'extend_existing': True}
    batch_name  = Column(String(30)  , nullable=False )
    date_entered  = Column(DateTime(timezone=True), server_default=func.now() , nullable=True )
    gl_accounting_date  = Column(DateTime(timezone=True)  , nullable=False )
    je_category  = Column(String(30) ,default='JOURNAL'  , nullable=True )
    je_decription  = Column(String(400)  , nullable=True )
    je_header_id  = Column(BigInteger, primary_key=True  , nullable=False )
    je_header_status  = Column(String(30) ,default='NEW'  , nullable=True )
    je_header_status_date  = Column(DateTime(timezone=True), server_default=func.now() , nullable=True )
    je_name  = Column(String(30)  , nullable=True )
    je_type  = Column(String(30) ,default='JOURNAL'  , nullable=True )
    #c_gljelines  = relationship("GlJeLines")


class GlJeLines(Base, AuditColumns):
    __tablename__ = 'gl_je_lines'
    __table_args__ = {'extend_existing': True}
    credit_amount  = Column(Numeric(precision=12, scale=2) ,default=0  , nullable=True )
    debit_amount  = Column(Numeric(precision=12, scale=2) ,default=0  , nullable=True )
    gl_account_id  = Column(BigInteger , ForeignKey('gl_account_codes.gl_account_id')  , nullable=False )
    je_header_id  = Column(BigInteger , ForeignKey('gl_je_headers.je_header_id')  , nullable=False )
    je_lines_id  = Column(BigInteger, primary_key=True  , nullable=False )
    je_line_decription  = Column(String(400)  , nullable=True )
    je_line_status  = Column(String(30) ,default='NEW'  , nullable=True )
    je_line_status_date  = Column(DateTime(timezone=True), server_default=func.now() , nullable=True )
    line_amount  = Column(Numeric(precision=12, scale=2) ,default=0  , nullable=True )
    sl_no  = Column(BigInteger  , nullable=False )
    trans_type  = Column(String(30) ,default='JOURNAL'  , nullable=True )


class GlPaymentHeaders(Base, AuditColumns):
    __tablename__ = 'gl_payment_headers'
    __table_args__ = {'extend_existing': True}
    batch_name  = Column(String(30)  , nullable=False )
    description  = Column(String(400)  , nullable=True )
    gl_account_id  = Column(BigInteger , ForeignKey('gl_account_codes.gl_account_id')  , nullable=False )
    gl_date  = Column(DateTime(timezone=True)  , nullable=True )
    location_id  = Column(BigInteger  , nullable=True )
    payment_category  = Column(String(30)  , nullable=False )
    payment_id  = Column(BigInteger, primary_key=True  , nullable=False )
    payment_reference  = Column(String(400)  , nullable=True )
    payment_source  = Column(String(30)  , nullable=False )
    payment_status  = Column(String(30)  , nullable=True )
    payment_status_date  = Column(DateTime(timezone=True)  , nullable=True )
    pmnt_method_id  = Column(BigInteger , ForeignKey('cmn_payment_methods.pmnt_method_id')  , nullable=False )
    terminal_id  = Column(BigInteger  , nullable=True )
    #c_glpaymentlines  = relationship("GlPaymentLines")


class GlPaymentLines(Base, AuditColumns):
    __tablename__ = 'gl_payment_lines'
    __table_args__ = {'extend_existing': True}
    description  = Column(String(400)  , nullable=True )
    gl_account_id  = Column(BigInteger , ForeignKey('gl_account_codes.gl_account_id')  , nullable=False )
    payin_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    payment_id  = Column(BigInteger , ForeignKey('gl_payment_headers.payment_id')  , nullable=False )
    payment_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    payment_line_status  = Column(String(30)  , nullable=True )
    payment_line_status_date  = Column(DateTime(timezone=True)  , nullable=True )
    payment_reference  = Column(String(400)  , nullable=True )
    payout_amount  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    pmnt_method_id  = Column(BigInteger , ForeignKey('cmn_payment_methods.pmnt_method_id')  , nullable=False )


class GlSubCategories(Base, AuditColumns):
    __tablename__ = 'gl_sub_categories'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1)  , nullable=True )
    gc_gl_category_id  = Column(BigInteger , ForeignKey('gl_categories.gl_category_id')  , nullable=False )
    gl_qualifier_code1  = Column(String(30)  , nullable=True )
    gl_qualifier_code2  = Column(String(30)  , nullable=True )
    gl_sub_category_desc  = Column(String(240)  , nullable=True )
    gl_sub_category_id  = Column(BigInteger, primary_key=True  , nullable=False )
    gl_sub_category_name  = Column(String(30)  , nullable=True )
    #c_glaccountcodes  = relationship("GlAccountCodes")


class GlTemplates(Base, AuditColumns):
    __tablename__ = 'gl_templates'
    __table_args__ = {'extend_existing': True}
    active_flag  = Column(String(1) ,default='Y'  , nullable=True )
    date_from  = Column(DateTime(timezone=True)  , nullable=True )
    date_to  = Column(DateTime(timezone=True)  , nullable=True )
    reporting_period  = Column(String(30) ,default='MONTHLY'  , nullable=True )
    template_category  = Column(String(30) ,default='PL'  , nullable=True )
    template_description  = Column(String(400)  , nullable=True )
    template_id  = Column(BigInteger, primary_key=True  , nullable=False )
    template_name  = Column(String(100)  , nullable=False )
    template_type  = Column(String(30) ,default='GENERAL'  , nullable=True )
    #c_gltemplatelines  = relationship("GlTemplateLines")


class GlTemplateLines(Base, AuditColumns):
    __tablename__ = 'gl_template_lines'
    __table_args__ = {'extend_existing': True}
    active_flag  = Column(String(1) ,default='Y'  , nullable=True )
    date_from  = Column(DateTime(timezone=True)  , nullable=True )
    date_to  = Column(DateTime(timezone=True)  , nullable=True )
    gl_account_id  = Column(BigInteger  , nullable=True )
    line_description  = Column(String(250)  , nullable=True )
    line_expression  = Column(String(4000)  , nullable=True )
    line_expression_type  = Column(String(30) ,default='SQL'  , nullable=True )
    line_type  = Column(String(30) ,default='DYNAMIC'  , nullable=True )
    line_value  = Column(Numeric(precision=12, scale=2) ,default='100'  , nullable=True )
    plus_minus  = Column(String(1) ,default='+'  , nullable=True )
    sl_no  = Column(BigInteger ,default=1  , nullable=True )
    template_id  = Column(BigInteger , ForeignKey('gl_templates.template_id')  , nullable=False )
    template_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    trans_source  = Column(String(30) ,default='GL'  , nullable=True )
    trans_type  = Column(String(30)  , nullable=False )
    xref_gl_account_id  = Column(BigInteger  , nullable=True )


class GlTemplateTransHeaders(Base, AuditColumns):
    __tablename__ = 'gl_template_trans_headers'
    __table_args__ = {'extend_existing': True}
    reporting_period  = Column(String(30) ,default='MONTHLY'  , nullable=True )
    report_date_from  = Column(DateTime(timezone=True)  , nullable=True )
    report_date_to  = Column(DateTime(timezone=True)  , nullable=True )
    template_category  = Column(String(30) ,default='PL'  , nullable=True )
    template_description  = Column(String(400)  , nullable=True )
    template_id  = Column(BigInteger  , nullable=False )
    template_name  = Column(String(100)  , nullable=False )
    template_trans_header_id  = Column(BigInteger, primary_key=True  , nullable=False )
    template_type  = Column(String(30) ,default='GENERAL'  , nullable=True )
    #c_gltemplatetrans  = relationship("GlTemplateTrans")


class GrnOrderpadHeaders(Base, AuditColumns):
    __tablename__ = 'grn_orderpad_headers'
    __table_args__ = {'extend_existing': True}
    customer_id  = Column(BigInteger , ForeignKey('ar_customers.customer_id')  , nullable=True )
    deliverto_contact_id  = Column(BigInteger  , nullable=True )
    deliverto_customer_id  = Column(BigInteger  , nullable=True )
    delivery_date  = Column(DateTime(timezone=True), server_default=func.now() , nullable=True )
    delivery_note_ref  = Column(String(100)  , nullable=True )
    discount_total  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    grn_date  = Column(DateTime(timezone=True), server_default=func.now() , nullable=True )
    grn_id  = Column(BigInteger, primary_key=True  , nullable=False )
    grn_status  = Column(String(30) ,default='NEW'  , nullable=True )
    grn_status_date  = Column(DateTime(timezone=True), server_default=func.now() , nullable=True )
    gross_total  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    ingredient_total  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    invoiceto_contact_id  = Column(BigInteger  , nullable=True )
    invoiceto_customer_id  = Column(BigInteger  , nullable=True )
    invoice_date  = Column(DateTime(timezone=True), server_default=func.now() , nullable=True )
    invoice_number  = Column(String(100)  , nullable=True )
    location_id  = Column(BigInteger , ForeignKey('inv_locations.location_id')  , nullable=True )
    net_total  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    orderpad_header_id  = Column(BigInteger , ForeignKey('po_orderpad_headers.orderpad_header_id')  , nullable=True )
    supplier_id  = Column(BigInteger , ForeignKey('ap_suppliers.supplier_id')  , nullable=False )
    tax_total  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    user_id  = Column(BigInteger ,default=-1  , nullable=True )
    volume_total  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    weight_total  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    #c_grnorderpadlines  = relationship("GrnOrderpadLines")


class GrnOrderpadLines(Base, AuditColumns):
    __tablename__ = 'grn_orderpad_lines'
    __table_args__ = {'extend_existing': True}
    case_cp  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    case_size  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    discount_price  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    grn_id  = Column(BigInteger , ForeignKey('grn_orderpad_headers.grn_id')  , nullable=False )
    grn_line_id  = Column(BigInteger  , nullable=False )
    grn_line_status  = Column(String(30) ,default='NEW'  , nullable=True )
    grn_line_status_date  = Column(DateTime(timezone=True), server_default=func.now() , nullable=True )
    ingredient_total  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=False )
    item_name  = Column(String(400)  , nullable=True )
    item_number  = Column(String(50)  , nullable=True )
    net_ingredient  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    net_price  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    orderpad_header_id  = Column(BigInteger , ForeignKey('po_orderpad_headers.orderpad_header_id')  , nullable=False )
    orderpad_line_id  = Column(BigInteger , ForeignKey('po_orderpad_lines.orderpad_line_id'), primary_key=True  , nullable=False )
    qty_in_pad  = Column(Numeric(precision=12, scale=3)  , nullable=False )
    qty_in_pad_cases  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_received_cases  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_received_units  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    sl_no  = Column(BigInteger  , nullable=True )
    tax_code_id  = Column(BigInteger  , nullable=True )
    tax_price  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    tax_rate  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    unit_cp  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    unit_volume  = Column(Numeric(precision=9, scale=3)  , nullable=True )
    unit_weight  = Column(Numeric(precision=12, scale=6)  , nullable=True )
    volume_total  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    weight_total  = Column(Numeric(precision=12, scale=3)  , nullable=True )


class HrUserAssignments(Base, AuditColumns):
    __tablename__ = 'hr_user_assignments'
    __table_args__ = {'extend_existing': True}
    assignment_id  = Column(BigInteger, primary_key=True  , nullable=False )
    assignment_status  = Column(String(30) ,default='NEW'  , nullable=True )
    assignment_status_date  = Column(DateTime(timezone=True), server_default=func.now() , nullable=True )
    assignment_type  = Column(String(50) ,default='PICKING'  , nullable=True )
    category_id  = Column(BigInteger , ForeignKey('inv_item_categories.category_id')  , nullable=True )
    description  = Column(String(400)  , nullable=True )
    location_id  = Column(BigInteger , ForeignKey('inv_locations.location_id')  , nullable=False )
    source_object_ref  = Column(String(100)  , nullable=True )
    source_ref_id1  = Column(BigInteger  , nullable=True )
    source_ref_id2  = Column(String(30)  , nullable=True )
    sub_category_id  = Column(BigInteger , ForeignKey('inv_item_sub_categories.sub_category_id')  , nullable=True )
    sub_location_id  = Column(BigInteger , ForeignKey('inv_sub_locations.sub_location_id') ,default=-1  , nullable=True )
    user_id  = Column(BigInteger , ForeignKey('cmn_users.user_id') ,default=1  , nullable=True )


class ImpexpHeaders(Base, AuditColumns):
    __tablename__ = 'impexp_headers'
    __table_args__ = {'extend_existing': True}
    access_level  = Column(String(30) ,default='SYSTEM'  , nullable=True )
    active  = Column(String(1) ,default='Y'  , nullable=True )
    column_delimiter  = Column(String(1) ,default=','  , nullable=True )
    column_headers  = Column(String(1) ,default='Y'  , nullable=True )
    copied_from  = Column(BigInteger  , nullable=True )
    directory_name  = Column(String(400)  , nullable=True )
    distinct_clause  = Column(String(1) ,default='N'  , nullable=True )
    file_name  = Column(String(100)  , nullable=True )
    file_name_delimiter  = Column(String(1) ,default='_'  , nullable=True )
    groupby_clause  = Column(String(2000)  , nullable=True )
    impexp_decription  = Column(String(400)  , nullable=True )
    impexp_header_id  = Column(BigInteger, primary_key=True  , nullable=False )
    impexp_name  = Column(String(100)  , nullable=False )
    impexp_type  = Column(String(30) ,default='IMPORT'  , nullable=True )
    object_name  = Column(String(50)  , nullable=True )
    orderby_clause  = Column(String(2000)  , nullable=True )
    param_daterange  = Column(String(30)  , nullable=True )
    param_date_from  = Column(DateTime(timezone=True)  , nullable=True )
    param_date_to  = Column(DateTime(timezone=True)  , nullable=True )
    table_operation  = Column(String(30)  , nullable=True )
    use_api  = Column(String(1) ,default='N'  , nullable=True )
    where_clause  = Column(String(2000)  , nullable=True )
    #c_impexplines  = relationship("ImpexpLines")


class ImpexpLines(Base, AuditColumns):
    __tablename__ = 'impexp_lines'
    __table_args__ = {'extend_existing': True}
    builtin_functions  = Column(String(400)  , nullable=True )
    column_name  = Column(String(100)  , nullable=True )
    data_type  = Column(String(15)  , nullable=True )
    expression  = Column(String(1000)  , nullable=True )
    expression_type  = Column(String(50) ,default='EXPRESSION'  , nullable=True )
    expresstion_type  = Column(String(50) ,default='EXPRESSION'  , nullable=True )
    file_column_header  = Column(String(100)  , nullable=True )
    file_position  = Column(Integer  , nullable=True )
    filter_condition  = Column(String(1000)  , nullable=True )
    filter_type  = Column(String(10) ,default='EXCLUDE'  , nullable=True )
    format  = Column(String(100)  , nullable=True )
    if_null  = Column(String(400)  , nullable=True )
    impexp_header_id  = Column(BigInteger , ForeignKey('impexp_headers.impexp_header_id')  , nullable=False )
    impexp_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    insert_flag  = Column(String(1) ,default='Y'  , nullable=True )
    max_length  = Column(Integer  , nullable=True )
    parameter_name  = Column(String(100)  , nullable=True )
    primary_flag  = Column(String(1) ,default='N'  , nullable=True )
    sl_no  = Column(BigInteger  , nullable=False )
    table_alias  = Column(String(30)  , nullable=True )
    update_flag  = Column(String(1) ,default='Y'  , nullable=True )


class InvBarcodeRepository(Base, AuditColumns):
    __tablename__ = 'inv_barcode_repository'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    barcode  = Column(String(30)  , nullable=True )
    barcode_description  = Column(String(400)  , nullable=True )
    barcode_status  = Column(String(30) ,default='AVAILABLE'  , nullable=True )
    barcode_type  = Column(String(30) ,default='EAN13'  , nullable=True )
    item_id  = Column(BigInteger  , nullable=True )
    repository_id  = Column(BigInteger, primary_key=True  , nullable=False )
    su_id  = Column(BigInteger  , nullable=True )


class InvBom(Base, AuditColumns):
    __tablename__ = 'inv_bom'
    __table_args__ = {'extend_existing': True}
    bom_action  = Column(String(30)  , nullable=True )
    bom_category  = Column(String(30)  , nullable=True )
    bom_id  = Column(BigInteger, primary_key=True  , nullable=False )
    bom_level  = Column(BigInteger  , nullable=True )
    bom_type  = Column(String(30)  , nullable=True )
    description  = Column(String(400)  , nullable=True )
    item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=False )
    level0_item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=True )
    parent_bom_id  = Column(BigInteger  , nullable=True )
    parent_item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=True )
    picklist  = Column(String(1)  , nullable=True )
    quantity  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    sl_no  = Column(BigInteger  , nullable=True )


class InvBomTrans(Base, AuditColumns):
    __tablename__ = 'inv_bom_trans'
    __table_args__ = {'extend_existing': True}
    bom_action  = Column(String(30)  , nullable=True )
    bom_category  = Column(String(30)  , nullable=True )
    bom_level  = Column(BigInteger  , nullable=True )
    bom_quantity  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    bom_trans_id  = Column(BigInteger, primary_key=True  , nullable=False )
    bom_trans_status  = Column(String(30) ,default='CREATED'  , nullable=True )
    bom_trans_status_date  = Column(DateTime(timezone=True), server_default=func.now() , nullable=True )
    bom_type  = Column(String(30)  , nullable=True )
    comments  = Column(String(1000)  , nullable=True )
    description  = Column(String(400)  , nullable=True )
    item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=False )
    level0_item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=True )
    order_header_id  = Column(BigInteger , ForeignKey('ar_salesorder_headers.order_header_id')  , nullable=False )
    order_line_id  = Column(BigInteger , ForeignKey('ar_salesorder_lines.order_line_id')  , nullable=True )
    parent_bom_id  = Column(BigInteger  , nullable=False )
    parent_item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=True )
    picklist  = Column(String(1)  , nullable=True )
    qty_userpicked_units  = Column(Numeric(precision=12, scale=3) ,default=0  , nullable=True )
    quantity  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    sl_no  = Column(BigInteger  , nullable=True )
    transaction_header_id  = Column(BigInteger  , nullable=False )
    transaction_line_id  = Column(BigInteger  , nullable=True )
    transaction_source  = Column(String(30) ,default='SALESORDER'  , nullable=True )
    trans_quantity  = Column(Numeric(precision=12, scale=3)  , nullable=True )


class InvContainerLog(Base, AuditColumns):
    __tablename__ = 'inv_container_log'
    __table_args__ = {'extend_existing': True}
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    attribute5  = Column(String(240)  , nullable=True )
    attribute6  = Column(String(240)  , nullable=True )
    container_log_id  = Column(BigInteger, primary_key=True  , nullable=False )
    container_number  = Column(String(200)  , nullable=False, unique=True )
    description  = Column(String(400)  , nullable=True )
    height  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    length  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    quantity  = Column(BigInteger  , nullable=True )
    received_from  = Column(String(100)  , nullable=True )
    received_on  = Column(DateTime(timezone=True)  , nullable=True )
    released_on  = Column(DateTime(timezone=True)  , nullable=True )
    sl_no  = Column(BigInteger  , nullable=True )
    source_header_id  = Column(BigInteger  , nullable=False )
    source_line_id  = Column(BigInteger  , nullable=True )
    transaction_source  = Column(String(30)  , nullable=False )
    width  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    #c_invpallets  = relationship("InvPallets")


class InvItemsalpursumSnap(Base, AuditColumns):
    __tablename__ = 'inv_itemsalpursum_snap'
    __table_args__ = {'extend_existing': True}
    item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=True )
    location_id  = Column(BigInteger , ForeignKey('inv_locations.location_id')  , nullable=True )
    pur_apr  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pur_aug  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pur_dec  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pur_feb  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pur_jan  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pur_jul  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pur_jun  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pur_lastmonth  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pur_lasttrandate  = Column(DateTime(timezone=True)  , nullable=True )
    pur_lastyear  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pur_mar  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pur_may  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pur_nov  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pur_oct  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pur_sep  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pur_thisweek  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pur_total  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pur_week1  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pur_week2  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pur_week3  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pur_week4  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pur_week5  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pur_week6  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pur_year2  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pur_year3  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pur_year4  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    pur_ytd  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    sal_apr  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    sal_aug  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    sal_dec  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    sal_feb  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    sal_jan  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    sal_jul  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    sal_jun  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    sal_lastmonth  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    sal_lasttrandate  = Column(DateTime(timezone=True)  , nullable=True )
    sal_lastyear  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    sal_mar  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    sal_may  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    sal_nov  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    sal_oct  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    sal_sep  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    sal_thisweek  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    sal_total  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    sal_week1  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    sal_week2  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    sal_week3  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    sal_week4  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    sal_week5  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    sal_week6  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    sal_year2  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    sal_year3  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    sal_year4  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    sal_ytd  = Column(Numeric(precision=17, scale=3)  , nullable=True )
    snapshot_date  = Column(DateTime(timezone=True)  , nullable=True )
    snapshot_id  = Column(BigInteger, primary_key=True  , nullable=False )
    sub_location_id  = Column(BigInteger , ForeignKey('inv_sub_locations.sub_location_id')  , nullable=True )


class InvItemAdjustmentHeaders(Base, AuditColumns):
    __tablename__ = 'inv_item_adjustment_headers'
    __table_args__ = {'extend_existing': True}
    adjust_date  = Column(DateTime(timezone=True)  , nullable=True )
    adjust_header_id  = Column(BigInteger, primary_key=True  , nullable=False )
    batch_name  = Column(String(30)  , nullable=True )
    comments  = Column(String(2000)  , nullable=True )
    location_id  = Column(BigInteger  , nullable=True )
    #c_invitemadjustmentlines  = relationship("InvItemAdjustmentLines")


class InvItemAdjustmentLines(Base, AuditColumns):
    __tablename__ = 'inv_item_adjustment_lines'
    __table_args__ = {'extend_existing': True}
    adjust_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    crea_reason_code_id  = Column(BigInteger  , nullable=False )
    gl_account_code  = Column(BigInteger  , nullable=True )
    iiah_adjust_header_id  = Column(BigInteger , ForeignKey('inv_item_adjustment_headers.adjust_header_id')  , nullable=False )
    iim_item_id  = Column(BigInteger  , nullable=False )
    location_id  = Column(BigInteger  , nullable=True )
    qty_adjusted  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    reason_desc  = Column(String(240)  , nullable=True )
    sub_location_id  = Column(BigInteger  , nullable=True )


class InvItemBarcodes(Base, AuditColumns):
    __tablename__ = 'inv_item_barcodes'
    __table_args__ = {'extend_existing': True}
    barcode_id = Column(BigInteger, primary_key=True  , nullable=False )
    barcode  = Column(String(30), unique=True  , nullable=False )
    barcode_type  = Column(String(30) ,default='EAN13'  , nullable=True )
    bar_end_date  = Column(DateTime(timezone=True)  , nullable=True )
    bar_in_directory  = Column(String(1)  , nullable=True )
    bar_printlabel  = Column(String(1) ,default='Y'  , nullable=True )
    create_type  = Column(String(30)  , nullable=True )
    description  = Column(String(150)  , nullable=True )
    iim_item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=False )
    iisu_su_id  = Column(BigInteger , ForeignKey('inv_item_sales_units.su_id')  , nullable=False )
    item_sl_no  = Column(Integer  , nullable=True )
    orig_sys_ref_name  = Column(String(30)  , nullable=True )
    price_exltax  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    price_inctax  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    primary_flag  = Column(String(1) ,default='N'  , nullable=True )
    purchase_qty  = Column(Numeric(precision=12, scale=3) ,default=1  , nullable=True )
    sales_qty  = Column(Numeric(precision=12, scale=3) ,default=1  , nullable=True )
    sl_no  = Column(Integer  , nullable=True )
    #c_arcustbarcodeuploads  = relationship("ArCustBarcodeUploads")


class InvItemBatches(Base, AuditColumns):
    __tablename__ = 'inv_item_batches'
    __table_args__ = {'extend_existing': True}
    access_level  = Column(String(30)  , nullable=True )
    batch_id  = Column(BigInteger, primary_key=True  , nullable=False )
    batch_name  = Column(String(30)  , nullable=True )
    date_from  = Column(DateTime(timezone=True)  , nullable=True )
    date_to  = Column(DateTime(timezone=True)  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    item_batch_category  = Column(String(30)  , nullable=True )
    last_query_criteria  = Column(String(4000)  , nullable=True )
    name  = Column(String(150)  , nullable=False )
    #c_invitembatchlines  = relationship("InvItemBatchLines")


class InvItemBatchLines(Base, AuditColumns):
    __tablename__ = 'inv_item_batch_lines'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    barcode  = Column(BigInteger  , nullable=True )
    batch_id  = Column(BigInteger , ForeignKey('inv_item_batches.batch_id')  , nullable=True )
    batch_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    date_from  = Column(DateTime(timezone=True)  , nullable=True )
    date_to  = Column(DateTime(timezone=True)  , nullable=True )
    item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=False )
    quantity  = Column(Numeric(precision=12, scale=3) ,default=1  , nullable=True )
    sl_no  = Column(BigInteger  , nullable=True )
    su_id  = Column(BigInteger  , nullable=True )


class InvItemCategories(Base, AuditColumns):
    __tablename__ = 'inv_item_categories'
    __table_args__ = {'extend_existing': True}
    amazon_percent  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    attribute1  = Column(String(1000)  , nullable=True )
    attribute2  = Column(String(1000)  , nullable=True )
    bin_identifier  = Column(String(30)  , nullable=True )
    category_code  = Column(String(15)  , nullable=True )
    category_id  = Column(BigInteger, primary_key=True  , nullable=False )
    category_markup  = Column(Numeric(precision=6, scale=3)  , nullable=True )
    category_name  = Column(String(50)  , nullable=True )
    description  = Column(String(2000)  , nullable=True )
    ebay_percent  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    key_words  = Column(String(400)  , nullable=True )
    picturename  = Column(String(200)  , nullable=True )
    take_snapshot  = Column(String(1) ,default='N'  , nullable=True )
    #c_arcustitemexlcategories  = relationship("ArCustItemExlcategories")
    #c_hruserassignments  = relationship("HrUserAssignments")
    #c_invitemmasters  = relationship("InvItemMasters")
    #c_invitemmulticategories  = relationship("InvItemMultiCategories")
    #c_invitemsubcategories  = relationship("InvItemSubCategories")
    #c_invsimilarcategories  = relationship("InvSimilarCategories")
    #c_prpricelistlines  = relationship("PrPricelistLines")
    #c_wwwnodelinks  = relationship("WwwNodeLinks")


class InvItemCountHeaders(Base, AuditColumns):
    __tablename__ = 'inv_item_count_headers'
    __table_args__ = {'extend_existing': True}
    batch_name  = Column(String(30)  , nullable=True )
    comments  = Column(String(2000)  , nullable=True )
    count_date  = Column(DateTime(timezone=True)  , nullable=True )
    count_status  = Column(String(20)  , nullable=True )
    count_status_date  = Column(DateTime(timezone=True)  , nullable=True )
    item_count_header_id  = Column(BigInteger, primary_key=True  , nullable=False )
    location_id  = Column(BigInteger  , nullable=True )
    stktake_phase_code  = Column(String(30)  , nullable=True )
    stktake_source_code  = Column(String(30)  , nullable=True )
    stktake_type_id  = Column(BigInteger  , nullable=True )


class InvItemCountLines(Base, AuditColumns):
    __tablename__ = 'inv_item_count_lines'
    __table_args__ = {'extend_existing': True}
    count_status  = Column(String(20)  , nullable=True )
    count_status_date  = Column(DateTime(timezone=True)  , nullable=True )
    crea_reason_code_id  = Column(BigInteger  , nullable=True )
    item_count_header_id  = Column(BigInteger  , nullable=True )
    item_count_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    item_id  = Column(BigInteger  , nullable=True )
    location_id  = Column(BigInteger  , nullable=True )
    minus_quantity  = Column(Numeric(precision=12, scale=3) ,default=0  , nullable=True )
    qty_counted  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_instock  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    reason_desc  = Column(String(240)  , nullable=True )
    sl_no  = Column(BigInteger  , nullable=True )
    stktake_item_id  = Column(BigInteger  , nullable=True )
    stktake_item_sl_no  = Column(Integer  , nullable=True )
    sub_location_id  = Column(BigInteger  , nullable=True )


class InvItemDimensions(Base, AuditColumns):
    __tablename__ = 'inv_item_dimensions'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    dimension_description  = Column(String(240)  , nullable=True )
    dimension_id  = Column(BigInteger, primary_key=True  , nullable=False )
    dimension_name  = Column(String(150)  , nullable=False )
    dim_sales_criteria  = Column(String(30)  , nullable=True )
    dim_stock_update_criteria  = Column(String(30)  , nullable=True )
    end_date  = Column(DateTime(timezone=True)  , nullable=True )
    item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=False )
    start_date  = Column(DateTime(timezone=True)  , nullable=True )
    #c_invitemdimensionlines  = relationship("InvItemDimensionLines")


class InvItemDimensionLines(Base, AuditColumns):
    __tablename__ = 'inv_item_dimension_lines'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    dimension_id  = Column(BigInteger , ForeignKey('inv_item_dimensions.dimension_id')  , nullable=False )
    dimension_item_id  = Column(BigInteger  , nullable=False )
    dimension_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=False )
    line_description  = Column(String(240)  , nullable=True )
    quantity  = Column(Numeric(precision=12, scale=3)  , nullable=False )
    sl_no  = Column(Integer  , nullable=True )


class InvItemExtras(Base, AuditColumns):
    __tablename__ = 'inv_item_extras'
    __table_args__ = {'extend_existing': True}
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    attribute5  = Column(String(240)  , nullable=True )
    attribute6  = Column(String(240)  , nullable=True )
    description  = Column(String(400)  , nullable=True )
    itemextras_id  = Column(BigInteger, primary_key=True  , nullable=False )
    item_extras_category  = Column(String(30)  , nullable=False )
    item_extras_meaning  = Column(String(400)  , nullable=False )
    item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=False )
    sl_no  = Column(BigInteger  , nullable=True )


class InvItemFreights(Base, AuditColumns):
    __tablename__ = 'inv_item_freights'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    country_code  = Column(String(10) , ForeignKey('cmn_countries.country_code')  , nullable=False )
    expedite_flag  = Column(String(30)  , nullable=True )
    freight_header_id  = Column(BigInteger , ForeignKey('ar_freight_headers.freight_header_id')  , nullable=False )
    freight_line_id  = Column(BigInteger , ForeignKey('ar_freight_lines.freight_line_id')  , nullable=False )
    freight_rate  = Column(Numeric(precision=12, scale=2)  , nullable=False )
    freight_weight  = Column(Numeric(precision=12, scale=6)  , nullable=True )
    item_freight_id  = Column(BigInteger, primary_key=True  , nullable=False )
    item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=True )
    price1  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    price2  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    price3  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    price4  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    price5  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    price6  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    su_id  = Column(BigInteger , ForeignKey('inv_item_sales_units.su_id')  , nullable=True )


class InvItemMasters(Base, AuditColumns):
    __tablename__ = 'inv_item_masters'
    __table_args__ = {'extend_existing': True}
    alternate_case_cp  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    alternate_unit_cp  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    apply_offer  = Column(String(1)  , nullable=True )
    average_unitcp  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    balancesheet_gl_account_id  = Column(BigInteger  , nullable=True )
    case_cp  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    case_height  = Column(Numeric(precision=9, scale=3)  , nullable=True )
    case_length  = Column(Numeric(precision=9, scale=3)  , nullable=True )
    case_unit  = Column(Integer  , nullable=True )
    case_volume  = Column(Numeric(precision=9, scale=3)  , nullable=True )
    case_volumetric_weight  = Column(Numeric(precision=12, scale=6)  , nullable=True )
    case_width  = Column(Numeric(precision=9, scale=3)  , nullable=True )
    ccc_id  = Column(BigInteger  , nullable=True )
    closing_balance  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    cmc_pc_id  = Column(BigInteger  , nullable=True )
    costofsales_gl_account_id  = Column(BigInteger  , nullable=True )
    ctc_tax_code_id  = Column(BigInteger  , nullable=False )
    customer_notes1  = Column(String(1000)  , nullable=True )
    customer_notes2  = Column(String(1000)  , nullable=True )
    customer_notes3  = Column(String(1000)  , nullable=True )
    default_label_name  = Column(String(100)  , nullable=True )
    delivery_charges  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    demo_video_file  = Column(String(240)  , nullable=True )
    end_date_active  = Column(DateTime(timezone=True)  , nullable=True )
    enforce_reorder_qty  = Column(String(1)  , nullable=True )
    enforce_tax_code  = Column(String(1)  , nullable=True )
    exchange_rate  = Column(Numeric(precision=12, scale=6)  , nullable=True )
    external_reference  = Column(String(30)  , nullable=True )
    flagindatefrom  = Column(DateTime(timezone=True)  , nullable=True )
    flagindateto  = Column(DateTime(timezone=True)  , nullable=True )
    flaginwebexport  = Column(String(1)  , nullable=True )
    freight  = Column(String(1)  , nullable=True )
    freight_line_id  = Column(BigInteger  , nullable=True )
    freight_name  = Column(String(100)  , nullable=True )
    freight_price_criteria  = Column(String(10)  , nullable=True )
    gac_gl_account_id  = Column(BigInteger  , nullable=True )
    goodsin_location_id  = Column(BigInteger  , nullable=True )
    gross_case_weight  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    gross_unit_weight  = Column(Numeric(precision=12, scale=6)  , nullable=True )
    group1  = Column(String(30)  , nullable=True )
    group2  = Column(String(30)  , nullable=True )
    group3  = Column(String(30)  , nullable=True )
    group4  = Column(String(30)  , nullable=True )
    iic_category_id  = Column(BigInteger , ForeignKey('inv_item_categories.category_id')  , nullable=False )
    iisc_sub_category_id  = Column(BigInteger , ForeignKey('inv_item_sub_categories.sub_category_id')  , nullable=False )
    image_hint  = Column(String(30) ,default='AVAILABLE'  , nullable=True )
    im_manf_id  = Column(BigInteger  , nullable=True )
    inner_qty  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    instrunction  = Column(String(400)  , nullable=True )
    ipbh_price_break_id  = Column(BigInteger  , nullable=True )
    item_class_category  = Column(String(30)  , nullable=True )
    item_colour  = Column(String(30)  , nullable=True )
    item_comment  = Column(String(1000)  , nullable=True )
    item_condition  = Column(String(30)  , nullable=True )
    item_dimension  = Column(String(1) ,default='N'  , nullable=True )
    item_dimension_type  = Column(String(30)  , nullable=True )
    item_fitting  = Column(String(20)  , nullable=True )
    item_id  = Column(BigInteger, primary_key=True  , nullable=False )
    item_name  = Column(String(150)  , nullable=False )
    item_number  = Column(String(50)  , nullable=False, unique=True )
    item_size  = Column(String(100)  , nullable=True )
    item_specifications  = Column(String(1000)  , nullable=True )
    item_status  = Column(String(30)  , nullable=True )
    item_style  = Column(String(50)  , nullable=True )
    iwc_charge_id  = Column(BigInteger  , nullable=True )
    key_words  = Column(String(2000)  , nullable=True )
    last_bought_unitcp  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    long_desc  = Column(String(1000)  , nullable=True )
    max_qty  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    min_max_cal_type  = Column(String(30) ,default='DYNAMIC'  , nullable=True )
    min_pb_qty  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    min_qty  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    mkuptemp_id  = Column(BigInteger  , nullable=True )
    net_case_weight  = Column(Numeric(precision=12, scale=6)  , nullable=True )
    net_ingredient  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    net_unit_weight  = Column(Numeric(precision=12, scale=6)  , nullable=True )
    opening_balance  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    pallet_qty  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    picturename  = Column(String(100)  , nullable=True )
    picturename1  = Column(String(150)  , nullable=True )
    picturename2  = Column(String(150)  , nullable=True )
    picturename3  = Column(String(150)  , nullable=True )
    picturetype  = Column(String(20)  , nullable=True )
    pnl_gl_account_id  = Column(BigInteger  , nullable=True )
    pricevariance_gl_account_id  = Column(BigInteger  , nullable=True )
    print_picture  = Column(String(1)  , nullable=True )
    publish_to_web  = Column(String(1)  , nullable=True )
    purchaseable  = Column(String(1)  , nullable=True )
    qtyinstock  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    reorder_interval  = Column(Integer  , nullable=True )
    reorder_qty  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    reorder_uomid  = Column(BigInteger  , nullable=True )
    replenished_from_location  = Column(BigInteger  , nullable=True )
    replenishment_options  = Column(String(30)  , nullable=True )
    reservable  = Column(String(1)  , nullable=True )
    saleable  = Column(String(1)  , nullable=True )
    sales_gl_account_id  = Column(BigInteger  , nullable=True )
    sales_location_id  = Column(BigInteger  , nullable=True )
    sales_location_qty  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    sales_price_flag  = Column(String(30) ,default='CALCULATED'  , nullable=True )
    season_code_id  = Column(BigInteger  , nullable=True )
    serial_numbered  = Column(String(1)  , nullable=True )
    serviceditem  = Column(String(1)  , nullable=True )
    short_desc  = Column(String(50)  , nullable=True )
    similar_item_concated  = Column(String(4000)  , nullable=True )
    similar_item_id  = Column(BigInteger  , nullable=True )
    start_date_active  = Column(DateTime(timezone=True)  , nullable=True )
    stockable  = Column(String(1)  , nullable=True )
    stock_holding_unit  = Column(Integer  , nullable=True )
    stock_take_category  = Column(String(30)  , nullable=True )
    stp_id  = Column(BigInteger  , nullable=True )
    stp_level1_id  = Column(BigInteger  , nullable=True )
    stp_level2_id  = Column(BigInteger  , nullable=True )
    stp_level3_id  = Column(BigInteger  , nullable=True )
    stp_level4_id  = Column(BigInteger  , nullable=True )
    stp_level5_id  = Column(BigInteger  , nullable=True )
    stp_level6_id  = Column(BigInteger  , nullable=True )
    supplier_case_cp  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    supplier_notes1  = Column(String(1000)  , nullable=True )
    supplier_notes2  = Column(String(1000)  , nullable=True )
    supplier_notes3  = Column(String(1000)  , nullable=True )
    supplier_product_code  = Column(String(30)  , nullable=True )
    supplier_unit_cp  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    sup_supplier_id  = Column(BigInteger  , nullable=False )
    take_snapshot  = Column(String(1) ,default='N'  , nullable=True )
    technical_specs  = Column(String(2000)  , nullable=True )
    technical_specs_file  = Column(String(240)  , nullable=True )
    track_usage  = Column(String(1)  , nullable=True )
    trading_casecp  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    trading_unitcp  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    typical_daily_usage  = Column(Numeric(precision=13, scale=3) ,default=1  , nullable=True )
    unit_cp  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    unit_height  = Column(Numeric(precision=9, scale=3)  , nullable=True )
    unit_length  = Column(Numeric(precision=9, scale=3)  , nullable=True )
    unit_volume  = Column(Numeric(precision=9, scale=3)  , nullable=True )
    unit_volumetric_weight  = Column(Numeric(precision=12, scale=6)  , nullable=True )
    unit_width  = Column(Numeric(precision=9, scale=3)  , nullable=True )
    uom_id  = Column(BigInteger , ForeignKey('cmn_unit_of_measurements.uom_id')  , nullable=True )
    valuable  = Column(String(1) ,default='Y'  , nullable=True )
    virtual_stock  = Column(Numeric(precision=12, scale=3) ,default=0  , nullable=True )
    volume_uomid  = Column(BigInteger  , nullable=True )
    warrantied  = Column(String(1)  , nullable=True )
    warranty_period  = Column(String(20)  , nullable=True )
    web_expedite_flag  = Column(String(150)  , nullable=True )
    weighed_item  = Column(String(1)  , nullable=True )
    weight_uomid  = Column(BigInteger  , nullable=True )
    whose_for  = Column(String(20)  , nullable=True )
    www_barcode_type  = Column(String(30)  , nullable=True )
    www_design_pattern  = Column(String(100)  , nullable=True )
    www_package_quantity  = Column(String(100)  , nullable=True )
    www_parentage  = Column(String(100)  , nullable=True )
    www_parent_sku  = Column(String(100)  , nullable=True )
    www_relationship_type  = Column(String(100)  , nullable=True )
    www_variation_theme  = Column(String(100)  , nullable=True )
    #c_arcustbarcodeuploads  = relationship("ArCustBarcodeUploads")
    #c_arcustitemuploads  = relationship("ArCustItemUploads")
    #c_aritemfulfillment  = relationship("ArItemFulfillment")
    #c_arorderpadlines  = relationship("ArOrderpadLines")
    #c_arsalesorderpicklist  = relationship("ArSalesorderPicklist")
    #c_auditstockhistory  = relationship("AuditStockHistory")
    #c_grnorderpadlines  = relationship("GrnOrderpadLines")
    #c_invbom  = relationship("InvBom")
    #c_invbom  = relationship("InvBom")
    #c_invbom  = relationship("InvBom")
    #c_invbomtrans  = relationship("InvBomTrans")
    #c_invbomtrans  = relationship("InvBomTrans")
    #c_invbomtrans  = relationship("InvBomTrans")
    #c_invitemsalpursumsnap  = relationship("InvItemsalpursumSnap")
    #c_invitembarcodes  = relationship("InvItemBarcodes")
    #c_invitembatchlines  = relationship("InvItemBatchLines")
    #c_invitemdimensions  = relationship("InvItemDimensions")
    #c_invitemdimensionlines  = relationship("InvItemDimensionLines")
    #c_invitemextras  = relationship("InvItemExtras")
    #c_invitemfreights  = relationship("InvItemFreights")
    #c_invitemmulticategories  = relationship("InvItemMultiCategories")
    #c_invitemmultiseasons  = relationship("InvItemMultiSeasons")
    #c_invitempicklist  = relationship("InvItemPicklist")
    #c_invitempohistories  = relationship("InvItemPoHistories")
    #c_invitempricebreaks  = relationship("InvItemPricebreaks")
    #c_invitempricehistories  = relationship("InvItemPricehistories")
    #c_invitemprices  = relationship("InvItemPrices")
    #c_invitemsalesunits  = relationship("InvItemSalesUnits")
    #c_invitemsublocgroups  = relationship("InvItemSublocGroups")
    #c_invitemsublocsnap  = relationship("InvItemSublocSnap")
    #c_invquickcodelines  = relationship("InvQuickcodeLines")
    #c_invrequisitionlines  = relationship("InvRequisitionLines")
    #c_invserialnumtransactions  = relationship("InvSerialnumTransactions")
    #c_invstocksplitlines  = relationship("InvStocksplitLines")
    #c_palletlines  = relationship("PalletLines")
    #c_poorderpadlines  = relationship("PoOrderpadLines")
    #c_priceupdateitemcplines  = relationship("PriceUpdateitemcpLines")
    #c_priceupdatespprices  = relationship("PriceUpdatespPrices")
    #c_prpricelistlines  = relationship("PrPricelistLines")
    #c_wwwnodelinks  = relationship("WwwNodeLinks")


class InvItemMovementHeaders(Base, AuditColumns):
    __tablename__ = 'inv_item_movement_headers'
    __table_args__ = {'extend_existing': True}
    attribute1  = Column(String(1000)  , nullable=True )
    batch_name  = Column(String(30)  , nullable=True )
    from_location_id  = Column(BigInteger  , nullable=True )
    from_sub_location_id  = Column(BigInteger  , nullable=True )
    header_movement_status  = Column(String(30)  , nullable=True )
    header_movement_status_date  = Column(DateTime(timezone=True)  , nullable=True )
    issued_to  = Column(String(30)  , nullable=True )
    issue_ref_no  = Column(String(30)  , nullable=True )
    item_extloc_lookup_type  = Column(String(30)  , nullable=True )
    item_movement_category  = Column(String(30)  , nullable=True )
    item_movement_header_id  = Column(BigInteger, primary_key=True  , nullable=False )
    movement_type  = Column(String(30)  , nullable=True )
    orig_sys_ref_header  = Column(String(30)  , nullable=True )
    sourced_from  = Column(String(30)  , nullable=True )
    source_object  = Column(String(30)  , nullable=True )
    source_ref_no  = Column(String(30)  , nullable=True )
    to_location_id  = Column(BigInteger  , nullable=True )
    to_sub_location_id  = Column(BigInteger  , nullable=True )
    transfered_on  = Column(DateTime(timezone=True)  , nullable=True )
    #c_invitemmovementlines  = relationship("InvItemMovementLines")


class InvItemMovementLines(Base, AuditColumns):
    __tablename__ = 'inv_item_movement_lines'
    __table_args__ = {'extend_existing': True}
    gl_account_code  = Column(BigInteger  , nullable=True )
    iimh_item_movement_header_id  = Column(BigInteger , ForeignKey('inv_item_movement_headers.item_movement_header_id')  , nullable=False )
    iim_item_id  = Column(BigInteger  , nullable=False )
    item_movement_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    location_id  = Column(BigInteger  , nullable=True )
    notes  = Column(String(2000)  , nullable=True )
    notes_destination  = Column(String(2000)  , nullable=True )
    orig_sys_ref_header  = Column(String(30)  , nullable=True )
    orig_sys_ref_line  = Column(String(30)  , nullable=True )
    qty_goodsin  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_rejected  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    quantity  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    reason_code_id  = Column(BigInteger  , nullable=True )
    reason_for_rejection  = Column(String(30)  , nullable=True )
    rejection_sub_location_id  = Column(BigInteger  , nullable=True )
    sl_no  = Column(Integer  , nullable=True )
    source_object  = Column(String(30)  , nullable=True )
    sub_location_id  = Column(BigInteger  , nullable=True )
    to_location_id  = Column(BigInteger  , nullable=True )
    to_sub_location_id  = Column(BigInteger  , nullable=True )


class InvItemMultiCategories(Base, AuditColumns):
    __tablename__ = 'inv_item_multi_categories'
    __table_args__ = {'extend_existing': True}
    category_id  = Column(BigInteger , ForeignKey('inv_item_categories.category_id')  , nullable=False )
    item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=False )
    multi_category_id  = Column(BigInteger, primary_key=True  , nullable=False )
    sub_category_id  = Column(BigInteger , ForeignKey('inv_item_sub_categories.sub_category_id')  , nullable=False )
    user_category_desc  = Column(String(50)  , nullable=True )


class InvItemMultiSeasons(Base, AuditColumns):
    __tablename__ = 'inv_item_multi_seasons'
    __table_args__ = {'extend_existing': True}
    item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=False )
    multi_season_id  = Column(BigInteger, primary_key=True  , nullable=False )
    season_code_id  = Column(BigInteger , ForeignKey('cmn_seasons.season_code_id')  , nullable=False )


class InvItemOfferHeaders(Base, AuditColumns):
    __tablename__ = 'inv_item_offer_headers'
    __table_args__ = {'extend_existing': True}
    attribute1  = Column(String(2000)  , nullable=True )
    attribute2  = Column(String(2000)  , nullable=True )
    buy_qty  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    date_from  = Column(DateTime(timezone=True)  , nullable=True )
    date_to  = Column(DateTime(timezone=True)  , nullable=True )
    free_qty  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    free_qty_at_price  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    free_qty_price_type  = Column(String(30)  , nullable=True )
    group_code  = Column(String(30)  , nullable=True )
    offer_description  = Column(String(240)  , nullable=True )
    offer_header_id  = Column(BigInteger, primary_key=True  , nullable=False )
    offer_name  = Column(String(100)  , nullable=True )
    offer_type_code  = Column(String(30)  , nullable=True )
    promotion_code  = Column(String(30)  , nullable=True )
    #c_arcustitemoffers  = relationship("ArCustItemOffers")


class InvItemOfferLines(Base, AuditColumns):
    __tablename__ = 'inv_item_offer_lines'
    __table_args__ = {'extend_existing': True}
    buy_qty  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    category_id  = Column(BigInteger  , nullable=True )
    free_item_id  = Column(BigInteger  , nullable=True )
    free_item_qty  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    free_item_qty_at_price  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    free_item_qty_price_type  = Column(String(30)  , nullable=True )
    free_qty  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    free_qty_at_price  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    free_qty_price_type  = Column(String(30)  , nullable=True )
    group_code  = Column(String(30)  , nullable=True )
    item_id  = Column(BigInteger  , nullable=True )
    offer_header_id  = Column(String(240)  , nullable=True )
    offer_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    sub_category_id  = Column(BigInteger  , nullable=True )


class InvItemPicklist(Base, AuditColumns):
    __tablename__ = 'inv_item_picklist'
    __table_args__ = {'extend_existing': True}
    comments  = Column(String(1000)  , nullable=True )
    item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=False )
    location_id  = Column(BigInteger  , nullable=True )
    parent_item_id  = Column(BigInteger  , nullable=True )
    picklist_id  = Column(BigInteger, primary_key=True  , nullable=False )
    picklist_status  = Column(String(30)  , nullable=True )
    picklist_status_date  = Column(DateTime(timezone=True)  , nullable=True )
    quantity  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    sl_no  = Column(BigInteger  , nullable=True )
    source_header_id  = Column(BigInteger  , nullable=False )
    source_line_id  = Column(BigInteger  , nullable=False )
    sub_location_id  = Column(BigInteger  , nullable=True )
    transaction_source  = Column(String(30)  , nullable=False )


class InvItemPoHistories(Base, AuditColumns):
    __tablename__ = 'inv_item_po_histories'
    __table_args__ = {'extend_existing': True}
    iim_item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=False )
    iiph_id  = Column(BigInteger, primary_key=True  , nullable=False )
    item_cost_price  = Column(Numeric(precision=10, scale=3) ,default=0  , nullable=True )
    item_curr_qty  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    item_list_price  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    source_name  = Column(String(20)  , nullable=True )
    stkpur_id  = Column(BigInteger  , nullable=True )
    sup_id  = Column(BigInteger  , nullable=True )
    sup_supplier_id  = Column(BigInteger , ForeignKey('ap_suppliers.supplier_id')  , nullable=True )


class InvItemPricebreaks(Base, AuditColumns):
    __tablename__ = 'inv_item_pricebreaks'
    __table_args__ = {'extend_existing': True}
    cuom_uom_id  = Column(BigInteger , ForeignKey('cmn_unit_of_measurements.uom_id')  , nullable=True )
    id  = Column(BigInteger, primary_key=True  , nullable=False )
    iim_item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=True )
    iisu_su_id  = Column(BigInteger , ForeignKey('inv_item_sales_units.su_id')  , nullable=False )
    pbreak_date_from  = Column(DateTime(timezone=True), server_default=func.now() , nullable=True )
    pbreak_date_to  = Column(DateTime(timezone=True), server_default=func.now() , nullable=True )
    pbreak_type  = Column(String(1) ,default='D'  , nullable=True )
    pbreak_value  = Column(Numeric(precision=5, scale=3) ,default=0  , nullable=True )
    pbreak_value_type  = Column(String(1) ,default='P'  , nullable=True )
    qty_from  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    qty_to  = Column(Numeric(precision=13, scale=3)  , nullable=True )


class InvItemPricehistories(Base, AuditColumns):
    __tablename__ = 'inv_item_pricehistories'
    __table_args__ = {'extend_existing': True}
    aftercostprice  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    afterlistprice  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    bonus1_amount  = Column(Numeric(precision=13, scale=3) ,default=0  , nullable=True )
    bonus1_type  = Column(String(1)  , nullable=True )
    bonus2_amount  = Column(Numeric(precision=13, scale=3) ,default=0  , nullable=True )
    bonus2_type  = Column(String(1)  , nullable=True )
    bonus3_amount  = Column(Numeric(precision=13, scale=3) ,default=0  , nullable=True )
    bonus3_type  = Column(String(1)  , nullable=True )
    bonus4_amount  = Column(Numeric(precision=13, scale=3) ,default=0  , nullable=True )
    bonus4_type  = Column(String(1)  , nullable=True )
    cp_changed  = Column(String(1)  , nullable=True )
    cp_changed_on  = Column(DateTime(timezone=True)  , nullable=True )
    cp_change_on  = Column(DateTime(timezone=True)  , nullable=True )
    cp_effectupto  = Column(DateTime(timezone=True)  , nullable=True )
    iim_item_id  = Column(BigInteger  , nullable=True )
    iip1_id  = Column(BigInteger, primary_key=True  , nullable=False )
    item_cost_price  = Column(Numeric(precision=12, scale=3) ,default=0  , nullable=True )
    item_desc  = Column(String(150)  , nullable=True )
    item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=True )
    item_list_price  = Column(Numeric(precision=13, scale=3) ,default=0  , nullable=True )
    item_reference  = Column(String(15)  , nullable=True )
    item_reorder_unit  = Column(Integer  , nullable=True )
    item_unit_size  = Column(Numeric(precision=13, scale=3) ,default=1  , nullable=True )
    sourced_from  = Column(String(30)  , nullable=True )
    source_ref_no  = Column(String(30)  , nullable=True )
    suspend  = Column(String(1)  , nullable=True )
    suspend_reason  = Column(String(100)  , nullable=True )


class InvItemSalesUnits(Base, AuditColumns):
    __tablename__ = 'inv_item_sales_units'
    __table_args__ = {'extend_existing': True}
    amazon_asin  = Column(String(30)  , nullable=True )
    attribute1  = Column(String(1000)  , nullable=True )
    attribute2  = Column(String(1000)  , nullable=True )
    bin_identifier  = Column(String(30)  , nullable=True )
    create_type  = Column(String(20)  , nullable=True )
    freight_line_id  = Column(BigInteger  , nullable=True )
    freight_name  = Column(String(100)  , nullable=True )
    gross_unit_weight  = Column(Numeric(precision=12, scale=6)  , nullable=True )
    iim_item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=False )
    item_sub_location_id  = Column(BigInteger  , nullable=True )
    markup  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    net_unit_weight  = Column(Numeric(precision=12, scale=6)  , nullable=True )
    pricetemp_id  = Column(BigInteger  , nullable=True )
    pricetemp_line_id  = Column(BigInteger  , nullable=True )
    price_exltax  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    price_inctax  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    print_in_directory  = Column(String(1)  , nullable=True )
    print_in_pricelist  = Column(String(1)  , nullable=True )
    publish_to_web  = Column(String(1) ,default='Y'  , nullable=True )
    sales_unit  = Column(Integer  , nullable=True )
    su_category  = Column(String(30) ,default='SALESUNIT'  , nullable=True )
    su_id  = Column(BigInteger, primary_key=True  , nullable=False )
    su_name  = Column(String(150)  , nullable=True )
    su_number  = Column(String(50)  , nullable=True, unique=True )
    unit_height  = Column(Numeric(precision=12, scale=6)  , nullable=True )
    unit_length  = Column(Numeric(precision=12, scale=6)  , nullable=True )
    unit_volume  = Column(Numeric(precision=12, scale=6)  , nullable=True )
    unit_volumetric_weight  = Column(Numeric(precision=12, scale=6)  , nullable=True )
    unit_width  = Column(Numeric(precision=12, scale=6)  , nullable=True )
    uom_id  = Column(BigInteger  , nullable=True )
    web_expedite_flag  = Column(String(150)  , nullable=True )
    web_price1  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    web_price2  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    web_price3  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    web_price4  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    sp1_markup  = Column(Numeric(precision=12, scale=3)  , nullable=False )
    sp1_exltax  = Column(Numeric(precision=14, scale=2)  , nullable=False )
    sp1_inctax  = Column(Numeric(precision=14, scale=2)  , nullable=False )
    sp2_markup  = Column(Numeric(precision=12, scale=3)  , nullable=False )
    sp2_exltax  = Column(Numeric(precision=14, scale=2)  , nullable=False )
    sp2_inctax  = Column(Numeric(precision=14, scale=2)  , nullable=False )
    sp3_markup  = Column(Numeric(precision=12, scale=3)  , nullable=False )
    sp3_exltax  = Column(Numeric(precision=14, scale=2)  , nullable=False )
    sp3_inctax  = Column(Numeric(precision=14, scale=2)  , nullable=False )
    sp4_markup  = Column(Numeric(precision=12, scale=3)  , nullable=False )
    sp4_exltax  = Column(Numeric(precision=14, scale=2)  , nullable=False )
    sp4_inctax  = Column(Numeric(precision=14, scale=2)  , nullable=False )
    sp5_markup  = Column(Numeric(precision=12, scale=3)  , nullable=False )
    sp5_exltax  = Column(Numeric(precision=14, scale=2)  , nullable=False )
    sp5_inctax  = Column(Numeric(precision=14, scale=2)  , nullable=False )
    #c_arcustbarcodeuploads  = relationship("ArCustBarcodeUploads")
    #c_invitembarcodes  = relationship("InvItemBarcodes")
    #c_invitemfreights  = relationship("InvItemFreights")
    #c_invitempricebreaks  = relationship("InvItemPricebreaks")
    #c_invitemprices  = relationship("InvItemPrices")
    #c_priceupdatespprices  = relationship("PriceUpdatespPrices")

class InvItemPrices(Base, AuditColumns):
    __tablename__ = 'inv_item_prices'
    __table_args__ = {'extend_existing': True}
    item_price_id  = Column(BigInteger, primary_key=True  , nullable=False )
    iim_item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=False )
    iisu_su_id  = Column(BigInteger , ForeignKey('inv_item_sales_units.su_id')  , nullable=False )
    ipt_price_type_id  = Column(BigInteger , ForeignKey('inv_price_types.price_type_id')  , nullable=False )
    markup  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    price_exltax  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    price_inctax  = Column(Numeric(precision=14, scale=2)  , nullable=True )

class InvItemSerialNumbers(Base, AuditColumns):
    __tablename__ = 'inv_item_serial_numbers'
    __table_args__ = {'extend_existing': True}
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    attribute5  = Column(String(240)  , nullable=True )
    attribute6  = Column(String(240)  , nullable=True )
    create_type  = Column(String(20)  , nullable=True )
    cust_customer_id  = Column(BigInteger  , nullable=True )
    dbnote_line_id  = Column(BigInteger  , nullable=True )
    delivery_line_id  = Column(BigInteger  , nullable=True )
    description  = Column(String(2000)  , nullable=True )
    end_date  = Column(DateTime(timezone=True)  , nullable=True )
    grn_line_id  = Column(BigInteger  , nullable=True )
    iim_item_id  = Column(BigInteger  , nullable=True )
    invoice_line_id  = Column(BigInteger  , nullable=True )
    in_date  = Column(DateTime(timezone=True)  , nullable=True )
    order_line_id  = Column(BigInteger  , nullable=True )
    out_date  = Column(DateTime(timezone=True)  , nullable=True )
    quantity  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    serial_number  = Column(String(100)  , nullable=True, unique=True )
    serial_number_id  = Column(BigInteger, primary_key=True  , nullable=False )
    sup_supplier_id  = Column(BigInteger  , nullable=True )
    #c_invserialnumtransactions  = relationship("InvSerialnumTransactions")


class InvItemStatuses(Base, AuditColumns):
    __tablename__ = 'inv_item_statuses'
    __table_args__ = {'extend_existing': True}
    average_unitcp  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    item_id  = Column(BigInteger, primary_key=True  , nullable=False )
    last_adjust_date  = Column(DateTime(timezone=True)  , nullable=True )
    last_bought_date  = Column(DateTime(timezone=True)  , nullable=True )
    last_bought_unitcp  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    last_grn_qty  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    last_po_date  = Column(DateTime(timezone=True)  , nullable=True )
    last_po_qty  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    last_sold_date  = Column(DateTime(timezone=True)  , nullable=True )
    last_sold_qty  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    last_year1_purchase_qty  = Column(BigInteger  , nullable=True )
    last_year1_sales_qty  = Column(BigInteger  , nullable=True )
    last_year2_purchase_qty  = Column(BigInteger  , nullable=True )
    last_year2_sales_qty  = Column(BigInteger  , nullable=True )
    last_year3_purchase_qty  = Column(BigInteger  , nullable=True )
    last_year3_sales_qty  = Column(BigInteger  , nullable=True )
    last_year4_purchase_qty  = Column(BigInteger  , nullable=True )
    last_year4_sales_qty  = Column(BigInteger  , nullable=True )
    max_qty  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    min_max_cal_type  = Column(String(30) ,default='DYNAMIC'  , nullable=True )
    min_qty  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_adjusted  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_allocated  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_goodsin  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_inorder  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_instock  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_reserved  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_reserved_balance  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_reserved_fulfilled  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_reserved_grn  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_reserved_invoiced  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_reserved_po  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_returned_from_customer  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_returned_to_supplier  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_sold  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    typical_daily_usage  = Column(Numeric(precision=12, scale=3) ,default=1  , nullable=True )
    ytd_purchase_qty  = Column(BigInteger  , nullable=True )
    ytd_sales_qty  = Column(BigInteger  , nullable=True )


class InvItemSublocGroups(Base, AuditColumns):
    __tablename__ = 'inv_item_subloc_groups'
    __table_args__ = {'extend_existing': True}
    assignment_type  = Column(String(30) ,default='AUTOMATIC'  , nullable=True )
    isg_id  = Column(BigInteger, primary_key=True  , nullable=False )
    item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=False )
    location_id  = Column(BigInteger , ForeignKey('inv_locations.location_id')  , nullable=False )
    sub_location_id  = Column(BigInteger , ForeignKey('inv_sub_locations.sub_location_id')  , nullable=False )
    sub_loc_group_code  = Column(String(30)  , nullable=False )


class InvItemSublocSnap(Base, AuditColumns):
    __tablename__ = 'inv_item_subloc_snap'
    __table_args__ = {'extend_existing': True}
    item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=True )
    location_id  = Column(BigInteger , ForeignKey('inv_locations.location_id')  , nullable=True )
    max_qty  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    minus_quantity  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    min_qty  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    quantity  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    snapshot_date  = Column(DateTime(timezone=True)  , nullable=True )
    snapshot_id  = Column(BigInteger, primary_key=True  , nullable=False )
    sub_location_id  = Column(BigInteger , ForeignKey('inv_sub_locations.sub_location_id')  , nullable=True )


class InvItemSubCategories(Base, AuditColumns):
    __tablename__ = 'inv_item_sub_categories'
    __table_args__ = {'extend_existing': True}
    amazon_percent  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    attribute1  = Column(String(1000)  , nullable=True )
    attribute2  = Column(String(1000)  , nullable=True )
    bin_identifier  = Column(String(30)  , nullable=True )
    description  = Column(String(2000)  , nullable=True )
    ebay_percent  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    iic_category_id  = Column(BigInteger , ForeignKey('inv_item_categories.category_id')  , nullable=False )
    key_words  = Column(String(400)  , nullable=True )
    picturename  = Column(String(200)  , nullable=True )
    sub_category_code  = Column(String(15)  , nullable=True )
    sub_category_id  = Column(BigInteger, primary_key=True  , nullable=False )
    sub_category_markup  = Column(Numeric(precision=6, scale=3)  , nullable=True )
    sub_category_name  = Column(String(50)  , nullable=True )
    take_snapshot  = Column(String(1) ,default='N'  , nullable=True )
    #c_arcustitemexlcategories  = relationship("ArCustItemExlcategories")
    #c_hruserassignments  = relationship("HrUserAssignments")
    #c_invitemmasters  = relationship("InvItemMasters")
    #c_invitemmulticategories  = relationship("InvItemMultiCategories")
    #c_invsimilarcategories  = relationship("InvSimilarCategories")
    #c_prpricelistlines  = relationship("PrPricelistLines")
    #c_wwwnodelinks  = relationship("WwwNodeLinks")


class InvItemTemps(Base, AuditColumns):
    __tablename__ = 'inv_item_temps'
    __table_args__ = {'extend_existing': True}
    barcode  = Column(String(20)  , nullable=True )
    category_id  = Column(BigInteger  , nullable=True )
    field_number1  = Column(BigInteger  , nullable=True )
    field_number10  = Column(BigInteger  , nullable=True )
    field_number2  = Column(BigInteger  , nullable=True )
    field_number3  = Column(BigInteger  , nullable=True )
    field_number4  = Column(BigInteger  , nullable=True )
    field_number5  = Column(BigInteger  , nullable=True )
    field_number6  = Column(BigInteger  , nullable=True )
    field_number7  = Column(BigInteger  , nullable=True )
    field_number8  = Column(BigInteger  , nullable=True )
    field_number9  = Column(BigInteger  , nullable=True )
    field_text1  = Column(String(255)  , nullable=True )
    field_text2  = Column(String(255)  , nullable=True )
    field_text3  = Column(String(255)  , nullable=True )
    field_text4  = Column(String(255)  , nullable=True )
    id  = Column(BigInteger, primary_key=True  , nullable=False )
    item_id  = Column(BigInteger  , nullable=True )
    item_name  = Column(String(200)  , nullable=True )
    item_reference  = Column(String(20)  , nullable=True )
    machine_name  = Column(String(100)  , nullable=True )
    pg_name  = Column(String(255)  , nullable=True )
    program_name  = Column(String(30)  , nullable=True )
    pt_name  = Column(String(255)  , nullable=True )
    quantity  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    selectforlabel  = Column(String(1) ,default='N'  , nullable=True )
    sessionno  = Column(BigInteger  , nullable=True )
    sub_category_id  = Column(BigInteger  , nullable=True )
    su_id  = Column(BigInteger  , nullable=True )
    su_ref  = Column(String(20)  , nullable=True )


class InvLocations(Base, AuditColumns):
    __tablename__ = 'inv_locations'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    address  = Column(String(255)  , nullable=True )
    bill_to  = Column(String(1)  , nullable=True )
    city  = Column(String(40)  , nullable=True )
    country_code  = Column(String(10)  , nullable=True )
    county  = Column(String(40)  , nullable=True )
    currency_code  = Column(String(5)  , nullable=True )
    email  = Column(String(240)  , nullable=True )
    fax  = Column(String(30)  , nullable=True )
    gl_account_id  = Column(BigInteger , ForeignKey('gl_account_codes.gl_account_id')  , nullable=True )
    height  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    item_snapshot_schedule_id  = Column(BigInteger  , nullable=True )
    item_snapshot_type  = Column(String(30)  , nullable=True )
    item_sub_location_hint  = Column(String(30)  , nullable=True )
    length  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    location_area_code  = Column(String(10)  , nullable=True )
    location_comment  = Column(String(1000)  , nullable=True )
    location_contact  = Column(String(240)  , nullable=True )
    location_desc  = Column(String(100)  , nullable=True )
    location_id  = Column(BigInteger, primary_key=True  , nullable=False )
    location_name  = Column(String(100)  , nullable=True )
    location_number  = Column(BigInteger  , nullable=True , unique=True)
    location_region_code  = Column(String(30)  , nullable=True )
    location_type  = Column(String(30)  , nullable=True )
    noof_levels  = Column(Integer  , nullable=True )
    orig_system_ref  = Column(String(30)  , nullable=True )
    phone1  = Column(String(20)  , nullable=True )
    phone2  = Column(String(20)  , nullable=True )
    post_code  = Column(String(10)  , nullable=True )
    purge_snapshot_days  = Column(Integer  , nullable=True )
    relative_distance  = Column(BigInteger  , nullable=True )
    replenish_location_id  = Column(BigInteger  , nullable=True )
    ship_to  = Column(String(1)  , nullable=True )
    stockable  = Column(String(1)  , nullable=True )
    stockable_area  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    sub_loc_separator  = Column(String(1)  , nullable=True )
    take_snapshot  = Column(String(1) ,default='N'  , nullable=True )
    tax_code_id  = Column(BigInteger  , nullable=True )
    total_area  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    weee_gl_account_id  = Column(BigInteger  , nullable=True )
    width  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    #c_apsupsumsnap  = relationship("ApSupsumSnap")
    #c_arcustsumsnap  = relationship("ArCustsumSnap")
    #c_arinvoiceheaders  = relationship("ArInvoiceHeaders")
    #c_arinvoiceheaders  = relationship("ArInvoiceHeaders")
    #c_arorderpadheaders  = relationship("ArOrderpadHeaders")
    #c_arsalesorderheaders  = relationship("ArSalesorderHeaders")
    #c_arsalesorderheaders  = relationship("ArSalesorderHeaders")
    #c_auditstockhistory  = relationship("AuditStockHistory")
    #c_cmnprintermatrix  = relationship("CmnPrinterMatrix")
    #c_dispatchheaders  = relationship("DispatchHeaders")
    #c_grnorderpadheaders  = relationship("GrnOrderpadHeaders")
    #c_hruserassignments  = relationship("HrUserAssignments")
    #c_invitemsalpursumsnap  = relationship("InvItemsalpursumSnap")
    #c_invitemsublocgroups  = relationship("InvItemSublocGroups")
    #c_invitemsublocsnap  = relationship("InvItemSublocSnap")
    #c_invlocationpricelists  = relationship("InvLocationPricelists")
    #c_invmonhlyreviewvalsnap  = relationship("InvMonhlyreviewValSnap")
    #c_invrequisitionheaders  = relationship("InvRequisitionHeaders")
    #c_invrequisitionheaders  = relationship("InvRequisitionHeaders")
    #c_invrequisitionlines  = relationship("InvRequisitionLines")
    #c_invslocassignlines  = relationship("InvSlocassignLines")
    #c_invstocksplitheaders  = relationship("InvStocksplitHeaders")
    #c_invsublochierarchy  = relationship("InvSublocHierarchy")
    #c_invsublocvalsnap  = relationship("InvSublocValSnap")
    #c_invsublocations  = relationship("InvSubLocations")
    #c_palletheaders  = relationship("PalletHeaders")
    #c_palletheaders  = relationship("PalletHeaders")
    #c_palletlines  = relationship("PalletLines")
    #c_pallettransactions  = relationship("PalletTransactions")
    #c_pallettransactions  = relationship("PalletTransactions")
    #c_poorderpadheaders  = relationship("PoOrderpadHeaders")


class InvLocationPricelists(Base, AuditColumns):
    __tablename__ = 'inv_location_pricelists'
    __table_args__ = {'extend_existing': True}
    attribute1  = Column(String(2000)  , nullable=True )
    attribute2  = Column(String(2000)  , nullable=True )
    date_from  = Column(DateTime(timezone=True)  , nullable=True )
    date_to  = Column(DateTime(timezone=True)  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    location_id  = Column(BigInteger , ForeignKey('inv_locations.location_id')  , nullable=True )
    location_pricelist_id  = Column(BigInteger, primary_key=True  , nullable=False )
    pricelist_header_id  = Column(BigInteger , ForeignKey('pr_pricelist_headers.pricelist_header_id')  , nullable=False )
    sl_no  = Column(BigInteger  , nullable=True )


class InvManufacturers(Base, AuditColumns):
    __tablename__ = 'inv_manufacturers'
    __table_args__ = {'extend_existing': True}
    address_line1  = Column(String(255)  , nullable=True )
    address_line2  = Column(String(50)  , nullable=True )
    address_line3  = Column(String(50)  , nullable=True )
    attribute1  = Column(String(1000)  , nullable=True )
    attribute2  = Column(String(1000)  , nullable=True )
    city  = Column(String(40)  , nullable=True )
    contact_name  = Column(String(2000)  , nullable=True )
    country_code  = Column(String(10)  , nullable=True )
    county  = Column(String(40)  , nullable=True )
    email  = Column(String(100)  , nullable=True )
    fax  = Column(String(20)  , nullable=True )
    manf_id  = Column(BigInteger, primary_key=True  , nullable=False )
    manf_name  = Column(String(50)  , nullable=True )
    manf_number  = Column(String(20)  , nullable=True )
    manf_short_name  = Column(String(30)  , nullable=True )
    mkuptemp_id  = Column(BigInteger  , nullable=True )
    mobile  = Column(String(20)  , nullable=True )
    phone1  = Column(String(20)  , nullable=True )
    phone2  = Column(String(20)  , nullable=True )
    post_code  = Column(String(10)  , nullable=True )
    www  = Column(String(240)  , nullable=True )
    #c_cmnstylepatterns  = relationship("CmnStylePatterns")


class InvMkuptempHeaders(Base, AuditColumns):
    __tablename__ = 'inv_mkuptemp_headers'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1)  , nullable=True )
    description  = Column(String(2000)  , nullable=True )
    mkuptemp_id  = Column(BigInteger, primary_key=True  , nullable=False )
    mkuptemp_name  = Column(String(30)  , nullable=True )
    #c_invmkuptemplines  = relationship("InvMkuptempLines")


class InvMkuptempLines(Base, AuditColumns):
    __tablename__ = 'inv_mkuptemp_lines'
    __table_args__ = {'extend_existing': True}
    description  = Column(String(400)  , nullable=True )
    mark_updown  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    mkuptemp_id  = Column(BigInteger , ForeignKey('inv_mkuptemp_headers.mkuptemp_id')  , nullable=False )
    mkuptemp_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    price_type_id  = Column(BigInteger , ForeignKey('inv_price_types.price_type_id')  , nullable=False )


class InvMonhlyreviewValSnap(Base, AuditColumns):
    __tablename__ = 'inv_monhlyreview_val_snap'
    __table_args__ = {'extend_existing': True}
    identifier1  = Column(String(100)  , nullable=True )
    identifier2  = Column(String(100)  , nullable=True )
    identifier3  = Column(String(100)  , nullable=True )
    item_id  = Column(BigInteger  , nullable=True )
    location_id  = Column(BigInteger , ForeignKey('inv_locations.location_id')  , nullable=True )
    period_line_id  = Column(BigInteger  , nullable=True )
    period_name  = Column(String(30)  , nullable=True )
    record_value  = Column(BigInteger  , nullable=True )
    snapshot_date  = Column(DateTime(timezone=True)  , nullable=True )
    snapshot_id  = Column(BigInteger, primary_key=True  , nullable=False )
    snapshot_month  = Column(String(20)  , nullable=True )
    snapshot_year  = Column(Integer  , nullable=True )
    sub_location_id  = Column(BigInteger , ForeignKey('inv_sub_locations.sub_location_id')  , nullable=True )


class InvOptions(Base, AuditColumns):
    __tablename__ = 'inv_options'
    __table_args__ = {'extend_existing': True}
    add_item_to_location  = Column(String(1) ,default='Y'  , nullable=True )
    auto_release_to_web  = Column(String(1) ,default='Y'  , nullable=True )
    balancesheet_gl_account_id  = Column(BigInteger  , nullable=True )
    batch_format  = Column(String(30)  , nullable=True )
    box_uom_id  = Column(BigInteger  , nullable=True )
    category_id  = Column(BigInteger  , nullable=True )
    company_id  = Column(BigInteger  , nullable=True )
    costofsales_gl_account_id  = Column(BigInteger  , nullable=True )
    credit_gl_account_id  = Column(BigInteger  , nullable=True )
    debit_gl_account_id  = Column(BigInteger  , nullable=True )
    default_markup  = Column(Numeric(precision=6, scale=3)  , nullable=True )
    defualt_picture_name  = Column(String(1)  , nullable=True )
    dimension_uom_id  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    enable_palleting  = Column(String(1) ,default='N'  , nullable=True )
    export_all_items  = Column(String(1) ,default='N'  , nullable=True )
    gl_account_id  = Column(BigInteger  , nullable=True )
    ignore_location_attributes  = Column(String(1) ,default='Y'  , nullable=True )
    inv_options_id  = Column(BigInteger, primary_key=True  , nullable=False )
    item_number  = Column(String(15)  , nullable=True )
    item_order_by  = Column(String(100)  , nullable=True )
    location_id  = Column(BigInteger  , nullable=True )
    maintain_minusstock_separately  = Column(String(1) ,default='Y'  , nullable=True )
    manf_id  = Column(BigInteger  , nullable=True )
    markup_type  = Column(String(30) ,default='C'  , nullable=True )
    max_qty_formula  = Column(String(15)  , nullable=True )
    min_qty_formula  = Column(String(15)  , nullable=True )
    noof_selling_price  = Column(Integer ,default=5  , nullable=True )
    option_location_id  = Column(BigInteger  , nullable=True )
    option_type  = Column(String(30)  , nullable=True )
    period_header_id  = Column(BigInteger  , nullable=True )
    pnl_gl_account_id  = Column(BigInteger  , nullable=True )
    populate_stock_history  = Column(String(30) ,default='NONE'  , nullable=True )
    prefix_itemnumber  = Column(String(1) ,default='N'  , nullable=True )
    pricevariance_gl_account_id  = Column(BigInteger  , nullable=True )
    price_break_criteria  = Column(String(30) ,default='FORMULA'  , nullable=True )
    price_break_id  = Column(BigInteger  , nullable=True )
    price_check_hint  = Column(String(30) ,default='NOSTOCK'  , nullable=True )
    primary_sub_location_hint  = Column(String(30)  , nullable=True )
    printer_copies  = Column(Integer  , nullable=True )
    printer_id  = Column(BigInteger  , nullable=True )
    print_output_path  = Column(String(240)  , nullable=True )
    quantity_format  = Column(String(30)  , nullable=True )
    reorder_qty_formula  = Column(String(15)  , nullable=True )
    report_markup_type  = Column(String(30)  , nullable=True )
    req_rcv_sub_location_hint  = Column(String(30)  , nullable=True )
    sales_gl_account_id  = Column(BigInteger  , nullable=True )
    season_code_id  = Column(BigInteger  , nullable=True )
    single_uom_id  = Column(BigInteger  , nullable=True )
    snapshot_all_items  = Column(String(1) ,default='Y'  , nullable=True )
    stock_adjustment_reason  = Column(BigInteger  , nullable=True )
    stock_search  = Column(String(30)  , nullable=True )
    sub_category_id  = Column(BigInteger  , nullable=True )
    sub_location  = Column(String(30)  , nullable=True )
    uom_id  = Column(BigInteger  , nullable=True )
    value_format  = Column(String(30)  , nullable=True )
    volume_divider  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    volume_uom_id  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    weight_uom_id  = Column(Numeric(precision=12, scale=2)  , nullable=True )


class InvPallets(Base, AuditColumns):
    __tablename__ = 'inv_pallets'
    __table_args__ = {'extend_existing': True}
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    attribute5  = Column(String(240)  , nullable=True )
    attribute6  = Column(String(240)  , nullable=True )
    container_log_id  = Column(BigInteger , ForeignKey('inv_container_log.container_log_id')  , nullable=False )
    description  = Column(String(400)  , nullable=True )
    height  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    length  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    pallet_id  = Column(BigInteger, primary_key=True  , nullable=False )
    pallet_number  = Column(String(100)  , nullable=True, unique=True )
    quantity  = Column(BigInteger  , nullable=True )
    sl_no  = Column(BigInteger  , nullable=True )
    width  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    #c_pogrnlines  = relationship("PoGrnLines")


class InvPriceBreakHeaders(Base, AuditColumns):
    __tablename__ = 'inv_price_break_headers'
    __table_args__ = {'extend_existing': True}
    date_from  = Column(DateTime(timezone=True)  , nullable=True )
    date_to  = Column(DateTime(timezone=True)  , nullable=True )
    description  = Column(String(2000)  , nullable=True )
    item_id  = Column(BigInteger  , nullable=True )
    name  = Column(String(100)  , nullable=True )
    price_break_id  = Column(BigInteger, primary_key=True  , nullable=False )
    user_display_text  = Column(String(400)  , nullable=True )
    #c_invpricebreaklines  = relationship("InvPriceBreakLines")


class InvPriceBreakLines(Base, AuditColumns):
    __tablename__ = 'inv_price_break_lines'
    __table_args__ = {'extend_existing': True}
    ipbh_price_break_id  = Column(BigInteger , ForeignKey('inv_price_break_headers.price_break_id')  , nullable=False )
    ipt_price_type_id  = Column(BigInteger  , nullable=False )
    price_break_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    price_break_source_type  = Column(String(30)  , nullable=True )
    price_break_type  = Column(String(30)  , nullable=True )
    price_break_value  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    qty_from  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_from_plusminus  = Column(Integer  , nullable=True )
    qty_from_source  = Column(String(30)  , nullable=True )
    qty_to  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_to_plusminus  = Column(Integer  , nullable=True )
    qty_to_source  = Column(String(30)  , nullable=True )
    sales_unit  = Column(BigInteger ,default=1  , nullable=True )
    sl_no  = Column(BigInteger  , nullable=True )
    user_display_text  = Column(String(400)  , nullable=True )


class InvPriceTypes(Base, AuditColumns):
    __tablename__ = 'inv_price_types'
    __table_args__ = {'extend_existing': True}
    currency_code  = Column(String(10)  , nullable=True )
    description  = Column(String(100)  , nullable=True )
    min_unit  = Column(Integer  , nullable=True )
    price_exltax  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    price_inctax  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    price_markup  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    price_type_group_code  = Column(String(30)  , nullable=True )
    price_type_id  = Column(BigInteger, primary_key=True  , nullable=False )
    price_type_name  = Column(String(10)  , nullable=True )
    sl_no  = Column(Integer  , nullable=True )
    #c_invitemprices  = relationship("InvItemPrices")
    #c_invmkuptemplines  = relationship("InvMkuptempLines")
    #c_priceupdatespprices  = relationship("PriceUpdatespPrices")
    #c_prpricelistlines  = relationship("PrPricelistLines")


class InvQuickcodeHeaders(Base, AuditColumns):
    __tablename__ = 'inv_quickcode_headers'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1)  , nullable=True )
    description  = Column(String(2000)  , nullable=True )
    end_date_active  = Column(DateTime(timezone=True)  , nullable=True )
    quickcode_category  = Column(String(30)  , nullable=False )
    quickcode_id  = Column(BigInteger, primary_key=True  , nullable=False )
    quickcode_name  = Column(String(30)  , nullable=True )
    quickcode_status  = Column(String(30)  , nullable=True )
    quickcode_status_date  = Column(DateTime(timezone=True)  , nullable=True )
    sl_no  = Column(BigInteger  , nullable=True )
    start_date_active  = Column(DateTime(timezone=True)  , nullable=True )
    #c_invquickcodelines  = relationship("InvQuickcodeLines")


class InvQuickcodeLines(Base, AuditColumns):
    __tablename__ = 'inv_quickcode_lines'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1)  , nullable=True )
    description  = Column(String(400)  , nullable=True )
    display_category  = Column(String(30)  , nullable=True )
    display_item_name  = Column(String(30)  , nullable=True )
    display_sub_category  = Column(String(30)  , nullable=True )
    end_date_active  = Column(DateTime(timezone=True)  , nullable=True )
    item_code  = Column(String(20)  , nullable=True )
    item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=False )
    quickcode_id  = Column(BigInteger , ForeignKey('inv_quickcode_headers.quickcode_id')  , nullable=False )
    quickcode_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    sl_no  = Column(BigInteger  , nullable=True )
    start_date_active  = Column(DateTime(timezone=True)  , nullable=True )


class InvRequisitionHeaders(Base, AuditColumns):
    __tablename__ = 'inv_requisition_headers'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1)  , nullable=True )
    batch_name  = Column(String(30)  , nullable=False )
    cancelled_by  = Column(BigInteger  , nullable=True )
    description  = Column(String(2000)  , nullable=True )
    end_date_active  = Column(DateTime(timezone=True)  , nullable=True )
    from_location_id  = Column(BigInteger , ForeignKey('inv_locations.location_id')  , nullable=True )
    fulfilled_by  = Column(BigInteger  , nullable=True )
    fulfilled_date  = Column(DateTime(timezone=True)  , nullable=True )
    need_by_date  = Column(DateTime(timezone=True)  , nullable=True )
    orig_sys_ref  = Column(String(30)  , nullable=True )
    orig_sys_source  = Column(String(30)  , nullable=True )
    picked_by  = Column(BigInteger  , nullable=True )
    picked_date  = Column(DateTime(timezone=True)  , nullable=True )
    priority_code  = Column(String(30)  , nullable=True )
    received_by  = Column(BigInteger  , nullable=True )
    received_date  = Column(DateTime(timezone=True)  , nullable=True )
    requested_by  = Column(BigInteger  , nullable=True )
    requisition_category  = Column(String(30)  , nullable=True )
    requisition_date  = Column(DateTime(timezone=True)  , nullable=True )
    requisition_id  = Column(BigInteger, primary_key=True  , nullable=False )
    requisition_name  = Column(String(30)  , nullable=True )
    requisition_number  = Column(String(30)  , nullable=True, unique=True )
    requisition_phase_code  = Column(String(30)  , nullable=True )
    requisition_source  = Column(String(30)  , nullable=True )
    requisition_status  = Column(String(30)  , nullable=True )
    requisition_status_date  = Column(DateTime(timezone=True)  , nullable=True )
    requisition_type  = Column(String(30)  , nullable=True )
    start_date_active  = Column(DateTime(timezone=True)  , nullable=True )
    to_location_id  = Column(BigInteger , ForeignKey('inv_locations.location_id')  , nullable=True )
    #c_invrequisitionlines  = relationship("InvRequisitionLines")


class InvRequisitionLines(Base, AuditColumns):
    __tablename__ = 'inv_requisition_lines'
    __table_args__ = {'extend_existing': True}
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    attribute5  = Column(String(240)  , nullable=True )
    cancelled_by  = Column(BigInteger  , nullable=True )
    case_size  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    description  = Column(String(400)  , nullable=True )
    from_location_id  = Column(BigInteger  , nullable=True )
    fulfilled_by  = Column(BigInteger  , nullable=True )
    hint  = Column(String(30)  , nullable=True )
    item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=True )
    need_by_date  = Column(DateTime(timezone=True)  , nullable=True )
    notes1  = Column(String(2000)  , nullable=True )
    orig_sys_ref  = Column(String(30)  , nullable=True )
    orig_sys_ref_header  = Column(String(30)  , nullable=True )
    orig_sys_source  = Column(String(30)  , nullable=True )
    picked_by  = Column(BigInteger  , nullable=True )
    picked_location_id  = Column(BigInteger , ForeignKey('inv_locations.location_id')  , nullable=True )
    picked_sub_location_id  = Column(BigInteger , ForeignKey('inv_sub_locations.sub_location_id')  , nullable=True )
    priority_code  = Column(String(30)  , nullable=True )
    qty_allocated_units  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_balance_units  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_cancelled_units  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_difference_units  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_fullfilled_units  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_received_units  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_requested_units  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    reason_for_difference  = Column(String(30)  , nullable=True )
    received_by  = Column(BigInteger  , nullable=True )
    received_sub_location_id  = Column(BigInteger  , nullable=True )
    requested_by  = Column(BigInteger  , nullable=True )
    requisition_id  = Column(BigInteger , ForeignKey('inv_requisition_headers.requisition_id')  , nullable=False )
    requisition_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    requisition_line_status  = Column(String(30)  , nullable=True )
    requisition_line_status_date  = Column(DateTime(timezone=True)  , nullable=True )
    sl_no  = Column(BigInteger  , nullable=True )
    to_location_id  = Column(BigInteger  , nullable=True )
    to_sub_location_id  = Column(BigInteger  , nullable=True )


class InvSerialnumTransactions(Base, AuditColumns):
    __tablename__ = 'inv_serialnum_transactions'
    __table_args__ = {'extend_existing': True}
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    attribute5  = Column(String(240)  , nullable=True )
    attribute6  = Column(String(240)  , nullable=True )
    item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=True )
    quantity  = Column(BigInteger  , nullable=True )
    serial_number_id  = Column(BigInteger , ForeignKey('inv_item_serial_numbers.serial_number_id')  , nullable=True )
    transaction_id  = Column(BigInteger, primary_key=True  , nullable=False )
    transaction_source  = Column(String(30)  , nullable=False )
    transaction_source_id  = Column(BigInteger  , nullable=False )


class InvSimilarCategories(Base, AuditColumns):
    __tablename__ = 'inv_similar_categories'
    __table_args__ = {'extend_existing': True}
    category_id  = Column(BigInteger , ForeignKey('inv_item_categories.category_id')  , nullable=False )
    parent_category_id  = Column(BigInteger  , nullable=False )
    parent_sub_category_id  = Column(BigInteger  , nullable=False )
    similar_category_id  = Column(BigInteger, primary_key=True  , nullable=False )
    sub_category_id  = Column(BigInteger , ForeignKey('inv_item_sub_categories.sub_category_id')  , nullable=False )


class InvSimilarItemHeaders(Base, AuditColumns):
    __tablename__ = 'inv_similar_item_headers'
    __table_args__ = {'extend_existing': True}
    include_in_po  = Column(String(1)  , nullable=True )
    long_desc  = Column(String(150)  , nullable=True )
    short_desc  = Column(String(30)  , nullable=True )
    similar_item_category  = Column(String(30)  , nullable=True )
    similar_item_id  = Column(BigInteger, primary_key=True  , nullable=False )
    total_curr_qty  = Column(Numeric(precision=22, scale=3)  , nullable=True )
    #c_invsimilaritemlines  = relationship("InvSimilarItemLines")


class InvSlocassignBatchs(Base, AuditColumns):
    __tablename__ = 'inv_slocassign_batchs'
    __table_args__ = {'extend_existing': True}
    assignment_batch_id  = Column(BigInteger, primary_key=True  , nullable=False )
    assignment_id  = Column(BigInteger  , nullable=True )
    assignment_line_id  = Column(BigInteger  , nullable=True )
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    attribute5  = Column(String(240)  , nullable=True )
    attribute6  = Column(String(240)  , nullable=True )
    batch_date  = Column(DateTime(timezone=True)  , nullable=False )
    batch_name  = Column(String(30)  , nullable=True )
    from_location_id  = Column(BigInteger  , nullable=False )
    from_location_name  = Column(String(100)  , nullable=True )
    from_qtyinstock  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    from_sub_location  = Column(String(100)  , nullable=True )
    from_sub_location_id  = Column(BigInteger  , nullable=False )
    item_id  = Column(BigInteger  , nullable=False )
    max_qty  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    min_qty  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    moveto_qty  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    record_type  = Column(String(30)  , nullable=True )
    subloc_columns  = Column(String(30)  , nullable=True )
    subloc_levels  = Column(String(30)  , nullable=True )
    subloc_rows  = Column(String(30)  , nullable=True )
    to_location_id  = Column(BigInteger  , nullable=True )
    to_location_name  = Column(String(100)  , nullable=True )
    to_qtyinstock  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    to_sub_location  = Column(String(100)  , nullable=True )
    to_sub_location_id  = Column(BigInteger  , nullable=True )
    user_id  = Column(BigInteger  , nullable=True )
    user_name  = Column(String(100)  , nullable=True )


class InvSlocassignHeaders(Base, AuditColumns):
    __tablename__ = 'inv_slocassign_headers'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1)  , nullable=True )
    assigned_to  = Column(BigInteger  , nullable=True )
    assignment_id  = Column(BigInteger, primary_key=True  , nullable=False )
    assignment_name  = Column(String(30)  , nullable=True )
    description  = Column(String(2000)  , nullable=True )
    end_date_active  = Column(DateTime(timezone=True)  , nullable=True )
    location_id  = Column(BigInteger  , nullable=False )
    start_date_active  = Column(DateTime(timezone=True)  , nullable=True )
    #c_invslocassignlines  = relationship("InvSlocassignLines")


class InvSlocassignLines(Base, AuditColumns):
    __tablename__ = 'inv_slocassign_lines'
    __table_args__ = {'extend_existing': True}
    assignment_id  = Column(BigInteger , ForeignKey('inv_slocassign_headers.assignment_id')  , nullable=False )
    assignment_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    description  = Column(String(400)  , nullable=True )
    location_id  = Column(BigInteger , ForeignKey('inv_locations.location_id')  , nullable=False )
    subloc_columns  = Column(String(30)  , nullable=True )
    subloc_levels  = Column(String(30)  , nullable=True )
    subloc_rows  = Column(String(30)  , nullable=True )
    sub_location_id  = Column(BigInteger  , nullable=False )


class InvStktakeItems(Base, AuditColumns):
    __tablename__ = 'inv_stktake_items'
    __table_args__ = {'extend_existing': True}
    item_id  = Column(BigInteger  , nullable=True )
    last_run_date  = Column(DateTime(timezone=True)  , nullable=True )
    sl_no  = Column(Integer  , nullable=True )
    stktake_item_id  = Column(BigInteger, primary_key=True  , nullable=False )
    stktake_type_id  = Column(BigInteger  , nullable=True )


class InvStktakeTypes(Base, AuditColumns):
    __tablename__ = 'inv_stktake_types'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    count_method  = Column(String(20)  , nullable=True )
    end_date_active  = Column(DateTime(timezone=True)  , nullable=True )
    last_run_date  = Column(DateTime(timezone=True)  , nullable=True )
    noof_items  = Column(Integer  , nullable=True )
    picklist_method  = Column(String(20)  , nullable=True )
    schedule_id  = Column(BigInteger  , nullable=True )
    start_date_active  = Column(DateTime(timezone=True)  , nullable=True )
    stktake_desc  = Column(String(2000)  , nullable=True )
    stktake_frequency  = Column(String(10)  , nullable=True )
    stktake_name  = Column(String(50)  , nullable=True )
    stktake_type  = Column(String(30)  , nullable=True )
    stktake_type_id  = Column(BigInteger, primary_key=True  , nullable=False )
    sub_location_type  = Column(String(30)  , nullable=True )


class InvStocksplitHeaders(Base, AuditColumns):
    __tablename__ = 'inv_stocksplit_headers'
    __table_args__ = {'extend_existing': True}
    batch_id  = Column(BigInteger  , nullable=True )
    customer_id1  = Column(BigInteger  , nullable=True )
    customer_id10  = Column(BigInteger  , nullable=True )
    customer_id11  = Column(BigInteger  , nullable=True )
    customer_id12  = Column(BigInteger  , nullable=True )
    customer_id13  = Column(BigInteger  , nullable=True )
    customer_id14  = Column(BigInteger  , nullable=True )
    customer_id15  = Column(BigInteger  , nullable=True )
    customer_id16  = Column(BigInteger  , nullable=True )
    customer_id17  = Column(BigInteger  , nullable=True )
    customer_id18  = Column(BigInteger  , nullable=True )
    customer_id19  = Column(BigInteger  , nullable=True )
    customer_id2  = Column(BigInteger  , nullable=True )
    customer_id20  = Column(BigInteger  , nullable=True )
    customer_id21  = Column(BigInteger  , nullable=True )
    customer_id22  = Column(BigInteger  , nullable=True )
    customer_id23  = Column(BigInteger  , nullable=True )
    customer_id24  = Column(BigInteger  , nullable=True )
    customer_id25  = Column(BigInteger  , nullable=True )
    customer_id26  = Column(BigInteger  , nullable=True )
    customer_id27  = Column(BigInteger  , nullable=True )
    customer_id28  = Column(BigInteger  , nullable=True )
    customer_id29  = Column(BigInteger  , nullable=True )
    customer_id3  = Column(BigInteger  , nullable=True )
    customer_id30  = Column(BigInteger  , nullable=True )
    customer_id4  = Column(BigInteger  , nullable=True )
    customer_id5  = Column(BigInteger  , nullable=True )
    customer_id6  = Column(BigInteger  , nullable=True )
    customer_id7  = Column(BigInteger  , nullable=True )
    customer_id8  = Column(BigInteger  , nullable=True )
    customer_id9  = Column(BigInteger  , nullable=True )
    custsplit_id  = Column(BigInteger  , nullable=True )
    description  = Column(String(2000)  , nullable=True )
    grn_id  = Column(BigInteger  , nullable=True )
    header_status  = Column(String(30) ,default='NEW'  , nullable=True )
    header_status_date  = Column(DateTime(timezone=True), server_default=func.now() , nullable=True )
    location_id  = Column(BigInteger , ForeignKey('inv_locations.location_id')  , nullable=True )
    no_of_customers  = Column(Integer  , nullable=True )
    stocksplit_id  = Column(BigInteger, primary_key=True  , nullable=False )
    stocksplit_name  = Column(String(30)  , nullable=True )
    #c_invstocksplitlines  = relationship("InvStocksplitLines")


class InvStocksplitLines(Base, AuditColumns):
    __tablename__ = 'inv_stocksplit_lines'
    __table_args__ = {'extend_existing': True}
    case_unit  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    category_name  = Column(String(100)  , nullable=True )
    customer_qty1  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    customer_qty10  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    customer_qty11  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    customer_qty12  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    customer_qty13  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    customer_qty14  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    customer_qty15  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    customer_qty16  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    customer_qty17  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    customer_qty18  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    customer_qty19  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    customer_qty2  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    customer_qty20  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    customer_qty21  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    customer_qty22  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    customer_qty23  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    customer_qty24  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    customer_qty25  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    customer_qty26  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    customer_qty27  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    customer_qty28  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    customer_qty29  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    customer_qty3  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    customer_qty30  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    customer_qty4  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    customer_qty5  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    customer_qty6  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    customer_qty7  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    customer_qty8  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    customer_qty9  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    grn_line_id  = Column(BigInteger  , nullable=True )
    inner_qty  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=True )
    item_name  = Column(String(400)  , nullable=True )
    item_number  = Column(String(50)  , nullable=True )
    line_status  = Column(String(30) ,default='NEW'  , nullable=True )
    line_status_date  = Column(DateTime(timezone=True), server_default=func.now() , nullable=True )
    qty_in_stock  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    qty_in_stock_units  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    stocksplit_id  = Column(BigInteger , ForeignKey('inv_stocksplit_headers.stocksplit_id')  , nullable=False )
    stocksplit_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    sub_category_name  = Column(String(100)  , nullable=True )


class InvSublocHierarchy(Base, AuditColumns):
    __tablename__ = 'inv_subloc_hierarchy'
    __table_args__ = {'extend_existing': True}
    description  = Column(String(400)  , nullable=True )
    hierarchy_id  = Column(BigInteger, primary_key=True  , nullable=False )
    location_id  = Column(BigInteger , ForeignKey('inv_locations.location_id')  , nullable=False )
    name  = Column(String(100)  , nullable=True )
    noofchar  = Column(Integer  , nullable=True )
    sl_no  = Column(Integer  , nullable=True )


class InvSublocValSnap(Base, AuditColumns):
    __tablename__ = 'inv_subloc_val_snap'
    __table_args__ = {'extend_existing': True}
    close_value_average  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    close_value_base  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    close_value_lastbought  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    groupedby1_value  = Column(String(30)  , nullable=True )
    groupedby2_value  = Column(String(30)  , nullable=True )
    groupedby3_value  = Column(String(30)  , nullable=True )
    location_id  = Column(BigInteger , ForeignKey('inv_locations.location_id')  , nullable=True )
    movement_value_average  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    movement_value_base  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    movement_value_lastbought  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    open_value_average  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    open_value_base  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    open_value_lastbought  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    period_line_id  = Column(BigInteger  , nullable=True )
    period_name  = Column(String(30)  , nullable=True )
    snapshot_date  = Column(DateTime(timezone=True)  , nullable=True )
    snapshot_id  = Column(BigInteger, primary_key=True  , nullable=False )
    snapshot_month  = Column(String(20)  , nullable=True )
    snapshot_year  = Column(Integer  , nullable=True )
    sub_location_id  = Column(BigInteger , ForeignKey('inv_sub_locations.sub_location_id')  , nullable=True )


class InvSubLocations(Base, AuditColumns):
    __tablename__ = 'inv_sub_locations'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    adjustable  = Column(String(1) ,default='Y'  , nullable=False )
    aisle  = Column(String(20)  , nullable=True )
    bin  = Column(String(20)  , nullable=True )
    description  = Column(String(50)  , nullable=True )
    gl_account_id  = Column(BigInteger  , nullable=True )
    height  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    hierarchy1  = Column(String(30)  , nullable=True )
    hierarchy10  = Column(String(30)  , nullable=True )
    hierarchy2  = Column(String(30)  , nullable=True )
    hierarchy3  = Column(String(30)  , nullable=True )
    hierarchy4  = Column(String(30)  , nullable=True )
    hierarchy5  = Column(String(30)  , nullable=True )
    hierarchy6  = Column(String(30)  , nullable=True )
    hierarchy7  = Column(String(30)  , nullable=True )
    hierarchy8  = Column(String(30)  , nullable=True )
    hierarchy9  = Column(String(30)  , nullable=True )
    il_location_id  = Column(BigInteger , ForeignKey('inv_locations.location_id')  , nullable=False )
    include_stock  = Column(String(1) ,default='Y'  , nullable=True )
    length  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    level0_hierarchy  = Column(String(30)  , nullable=True )
    max_qty  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    min_qty  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    noof_units  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    pallet_header_id  = Column(BigInteger  , nullable=True )
    pickable  = Column(String(1) ,default='Y'  , nullable=True )
    primary_flag  = Column(String(1) ,default='N'  , nullable=True )
    relative_distance  = Column(Numeric(precision=10, scale=2)  , nullable=True )
    short_name  = Column(String(50)  , nullable=True )
    stockable  = Column(String(1) ,default='Y'  , nullable=True )
    stockable_area  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    stocktake  = Column(String(1) ,default='Y'  , nullable=True )
    storage_area1  = Column(String(30)  , nullable=True )
    storage_area2  = Column(String(30)  , nullable=True )
    storage_area3  = Column(String(30)  , nullable=True )
    sub_location  = Column(String(15)  , nullable=True )
    sub_location_id  = Column(BigInteger, primary_key=True  , nullable=False )
    sub_location_number  = Column(BigInteger  , nullable=True, unique=True )
    sub_location_type  = Column(String(30) ,default='INTERNAL'  , nullable=True )
    sub_loc_group_code  = Column(String(30)  , nullable=True )
    take_snapshot  = Column(String(1) ,default='N'  , nullable=True )
    total_area  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    valuable  = Column(String(1) ,default='Y'  , nullable=True )
    width  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    #c_apsupsumsnap  = relationship("ApSupsumSnap")
    #c_arcustsumsnap  = relationship("ArCustsumSnap")
    #c_arinvoiceheaders  = relationship("ArInvoiceHeaders")
    #c_arsalesorderheaders  = relationship("ArSalesorderHeaders")
    #c_hruserassignments  = relationship("HrUserAssignments")
    #c_invitemsalpursumsnap  = relationship("InvItemsalpursumSnap")
    #c_invitemsublocgroups  = relationship("InvItemSublocGroups")
    #c_invitemsublocsnap  = relationship("InvItemSublocSnap")
    #c_invmonhlyreviewvalsnap  = relationship("InvMonhlyreviewValSnap")
    #c_invrequisitionlines  = relationship("InvRequisitionLines")
    #c_invsublocvalsnap  = relationship("InvSublocValSnap")
    #c_palletheaders  = relationship("PalletHeaders")
    #c_palletheaders  = relationship("PalletHeaders")
    #c_palletlines  = relationship("PalletLines")
    #c_pallettransactions  = relationship("PalletTransactions")
    #c_pallettransactions  = relationship("PalletTransactions")
    #c_pogrnheaders  = relationship("PoGrnHeaders")
    #c_poheaders  = relationship("PoHeaders")


class InvWeeeCharges(Base, AuditColumns):
    __tablename__ = 'inv_weee_charges'
    __table_args__ = {'extend_existing': True}
    charge_id  = Column(BigInteger, primary_key=True  , nullable=False )
    description  = Column(String(2000)  , nullable=True )
    from_date  = Column(DateTime(timezone=True)  , nullable=True )
    name  = Column(String(50), primary_key=True  , nullable=False )
    to_date  = Column(DateTime(timezone=True)  , nullable=True )
    unit_rate  = Column(Numeric(precision=14, scale=2)  , nullable=True )


class PalletBoxes(Base, AuditColumns):
    __tablename__ = 'pallet_boxes'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    box_date  = Column(DateTime(timezone=True), server_default=func.now() , nullable=True )
    box_decription  = Column(String(400)  , nullable=True )
    box_height  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    box_id  = Column(BigInteger, primary_key=True  , nullable=False )
    box_length  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    box_name  = Column(String(255)  , nullable=False )
    box_number  = Column(String(50)  , nullable=False , unique=True)
    box_status  = Column(String(30) ,default='NEW'  , nullable=True )
    box_status_date  = Column(DateTime(timezone=True), server_default=func.now() , nullable=True )
    box_tag  = Column(String(50)  , nullable=True )
    box_type  = Column(String(30) ,default='BOX'  , nullable=True )
    box_volume  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    box_weight  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    box_width  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    grn_id  = Column(BigInteger , ForeignKey('po_grn_headers.grn_id')  , nullable=True )
    invoice_header_id  = Column(BigInteger , ForeignKey('ar_invoice_headers.invoice_header_id')  , nullable=True )
    no_of_itens  = Column(Integer  , nullable=True )
    order_header_id  = Column(BigInteger , ForeignKey('ar_salesorder_headers.order_header_id')  , nullable=True )
    pallet_header_id  = Column(BigInteger , ForeignKey('pallet_headers.pallet_header_id')  , nullable=True )
    pc_id  = Column(BigInteger , ForeignKey('cmn_containers.pc_id')  , nullable=True )
    sl_no  = Column(BigInteger ,default=1  , nullable=True )
    source_object_ref  = Column(String(100)  , nullable=True )
    source_ref_id1  = Column(BigInteger  , nullable=True )
    source_ref_id2  = Column(String(30)  , nullable=True )
    #c_palletlines  = relationship("PalletLines")
    #c_pallettransactions  = relationship("PalletTransactions")


class PalletHeaders(Base, AuditColumns):
    __tablename__ = 'pallet_headers'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    attribute1  = Column(String(255)  , nullable=True )
    attribute2  = Column(String(255)  , nullable=True )
    attribute3  = Column(String(255)  , nullable=True )
    attribute4  = Column(String(255)  , nullable=True )
    current_location_id  = Column(BigInteger , ForeignKey('inv_locations.location_id')  , nullable=True )
    current_sub_location_id  = Column(BigInteger , ForeignKey('inv_sub_locations.sub_location_id')  , nullable=True )
    dispatched_on  = Column(DateTime(timezone=True)  , nullable=True )
    dispatch_id  = Column(BigInteger , ForeignKey('dispatch_headers.dispatch_id')  , nullable=True )
    ext_ref_id1  = Column(BigInteger  , nullable=True )
    ext_ref_id2  = Column(String(100)  , nullable=True )
    ext_ref_id3  = Column(String(100)  , nullable=True )
    grn_id  = Column(BigInteger , ForeignKey('po_grn_headers.grn_id')  , nullable=True )
    invoice_header_id  = Column(BigInteger , ForeignKey('ar_invoice_headers.invoice_header_id')  , nullable=True )
    location_id  = Column(BigInteger , ForeignKey('inv_locations.location_id')  , nullable=False )
    no_of_units  = Column(Integer  , nullable=True )
    order_header_id  = Column(BigInteger , ForeignKey('ar_salesorder_headers.order_header_id')  , nullable=True )
    pallet_age  = Column(Integer ,default=0  , nullable=True )
    pallet_date  = Column(DateTime(timezone=True), server_default=func.now() , nullable=True )
    pallet_decription  = Column(String(400)  , nullable=True )
    pallet_destination  = Column(String(30) ,default='INTERNAL'  , nullable=True )
    pallet_header_id  = Column(BigInteger, primary_key=True  , nullable=False )
    pallet_header_status  = Column(String(30) ,default='NEW'  , nullable=True )
    pallet_header_status_date  = Column(DateTime(timezone=True), server_default=func.now() , nullable=True )
    pallet_height  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    pallet_length  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    pallet_name  = Column(String(255)  , nullable=False )
    pallet_number  = Column(String(50)  , nullable=False, unique=True )
    pallet_source  = Column(String(30) ,default='INTERNAL'  , nullable=True )
    pallet_tag  = Column(String(50)  , nullable=True )
    pallet_type  = Column(String(30) ,default='PALLET'  , nullable=True )
    pallet_volume  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    pallet_weight  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    pallet_width  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    pc_id  = Column(BigInteger , ForeignKey('cmn_containers.pc_id')  , nullable=True )
    sl_no  = Column(BigInteger ,default=1  , nullable=True )
    source_object_ref  = Column(String(30)  , nullable=True )
    source_ref_id1  = Column(BigInteger  , nullable=True )
    source_ref_id2  = Column(String(30)  , nullable=True )
    sub_location_id  = Column(BigInteger , ForeignKey('inv_sub_locations.sub_location_id')  , nullable=True )
    unit_desc  = Column(String(50)  , nullable=True )
    #c_palletboxes  = relationship("PalletBoxes")
    #c_palletlines  = relationship("PalletLines")
    #c_pallettransactions  = relationship("PalletTransactions")


class PalletLines(Base, AuditColumns):
    __tablename__ = 'pallet_lines'
    __table_args__ = {'extend_existing': True}
    box_id  = Column(BigInteger , ForeignKey('pallet_boxes.box_id')  , nullable=False )
    case_unit  = Column(Numeric(precision=12, scale=2) ,default=1  , nullable=True )
    item_description  = Column(String(400)  , nullable=True )
    item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id') ,default=-1  , nullable=True )
    item_number  = Column(String(100)  , nullable=True )
    line_type  = Column(String(50) ,default='ITEM'  , nullable=True )
    location_id  = Column(BigInteger , ForeignKey('inv_locations.location_id')  , nullable=False )
    pallet_header_id  = Column(BigInteger , ForeignKey('pallet_headers.pallet_header_id')  , nullable=True )
    pallet_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    pallet_line_status  = Column(String(30) ,default='NEW'  , nullable=True )
    pallet_line_status_date  = Column(DateTime(timezone=True), server_default=func.now() , nullable=True )
    quantity  = Column(Numeric(precision=12, scale=3) ,default=1  , nullable=True )
    quantity_cases  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    sl_no  = Column(BigInteger ,default=1  , nullable=True )
    source_object_ref  = Column(String(100)  , nullable=True )
    source_ref_id1  = Column(BigInteger  , nullable=True )
    source_ref_id2  = Column(String(30)  , nullable=True )
    sub_location_id  = Column(BigInteger , ForeignKey('inv_sub_locations.sub_location_id') ,default=-1  , nullable=True )
    #c_pallettransactions  = relationship("PalletTransactions")


class PalletTransactions(Base, AuditColumns):
    __tablename__ = 'pallet_transactions'
    __table_args__ = {'extend_existing': True}
    box_id  = Column(BigInteger , ForeignKey('pallet_boxes.box_id')  , nullable=True )
    from_ext_location  = Column(String(100)  , nullable=True )
    from_location_id  = Column(BigInteger , ForeignKey('inv_locations.location_id')  , nullable=True )
    from_sub_location_id  = Column(BigInteger , ForeignKey('inv_sub_locations.sub_location_id')  , nullable=True )
    item_description  = Column(String(400)  , nullable=True )
    item_id  = Column(BigInteger ,default=-1  , nullable=True )
    pallet_header_id  = Column(BigInteger , ForeignKey('pallet_headers.pallet_header_id')  , nullable=False )
    pallet_line_id  = Column(BigInteger , ForeignKey('pallet_lines.pallet_line_id')  , nullable=True )
    pallet_trans_id  = Column(BigInteger, primary_key=True  , nullable=False )
    pallet_trans_status  = Column(String(30) ,default='NEW'  , nullable=True )
    pallet_trans_status_date  = Column(DateTime(timezone=True), server_default=func.now() , nullable=True )
    quantity  = Column(Numeric(precision=12, scale=3) ,default=1  , nullable=True )
    sl_no  = Column(BigInteger ,default=1  , nullable=True )
    to_ext_location  = Column(String(100)  , nullable=True )
    to_location_id  = Column(BigInteger , ForeignKey('inv_locations.location_id')  , nullable=True )
    to_sub_location_id  = Column(BigInteger , ForeignKey('inv_sub_locations.sub_location_id')  , nullable=True )
    transaction_category  = Column(String(50) ,default='MOVEMENT'  , nullable=True )
    transaction_type  = Column(String(50) ,default='INTERNALTOINTERNAL'  , nullable=True )


class PoBuyers(Base, AuditColumns):
    __tablename__ = 'po_buyers'
    __table_args__ = {'extend_existing': True}
    approval_limit  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    buyer_id  = Column(BigInteger  , nullable=True )
    end_date  = Column(DateTime(timezone=True)  , nullable=True )
    po_buyer_id  = Column(BigInteger, primary_key=True  , nullable=False )
    start_date  = Column(DateTime(timezone=True)  , nullable=True )
    supervisor_id  = Column(BigInteger  , nullable=True )


class PoGrnHeaders(Base, AuditColumns):
    __tablename__ = 'po_grn_headers'
    __table_args__ = {'extend_existing': True}
    attribute1  = Column(String(2000)  , nullable=True )
    attribute2  = Column(String(2000)  , nullable=True )
    billto_location_id  = Column(BigInteger  , nullable=True )
    carriage_total  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    containers_by_volume  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    containers_by_weight  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    container_id  = Column(BigInteger  , nullable=True )
    container_name  = Column(String(100)  , nullable=True )
    currency_code  = Column(String(10)  , nullable=True )
    delivery_date  = Column(DateTime(timezone=True)  , nullable=True )
    delivery_note_ref  = Column(String(100)  , nullable=True )
    discount_total  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    ext_po_reference  = Column(String(30)  , nullable=True )
    grn_date  = Column(DateTime(timezone=True)  , nullable=True )
    grn_id  = Column(BigInteger, primary_key=True  , nullable=False )
    grn_number  = Column(String(240)  , nullable=True, unique=True )
    grn_status  = Column(String(30)  , nullable=True )
    grn_status_date  = Column(DateTime(timezone=True)  , nullable=True )
    grn_user_id  = Column(BigInteger  , nullable=True )
    gross_total  = Column(Numeric(precision=10, scale=2) ,default=0  , nullable=True )
    ingredient_total  = Column(BigInteger  , nullable=True )
    landing_cost1  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    landing_cost2  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    landing_cost3  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    landing_cost4  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    landing_cost_percent  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    landing_cost_total  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    net_total  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    orig_system_ref  = Column(String(30)  , nullable=True )
    po_header_id  = Column(BigInteger  , nullable=True )
    received_date  = Column(DateTime(timezone=True)  , nullable=True )
    shipto_location_id  = Column(BigInteger  , nullable=True )
    sub_location_id  = Column(BigInteger , ForeignKey('inv_sub_locations.sub_location_id')  , nullable=True )
    sup_supplier_id  = Column(BigInteger  , nullable=True )
    terms1  = Column(String(240)  , nullable=True )
    terms2  = Column(String(240)  , nullable=True )
    total_net_weight  = Column(BigInteger  , nullable=True )
    trans_category  = Column(String(30)  , nullable=True )
    update_base_cost  = Column(String(1)  , nullable=True )
    update_stock  = Column(String(1) ,default='Y'  , nullable=True )
    vat_total  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    volume_total  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    weight_total  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    #c_palletboxes  = relationship("PalletBoxes")
    #c_palletheaders  = relationship("PalletHeaders")
    #c_pogrnlines  = relationship("PoGrnLines")


class PoGrnLines(Base, AuditColumns):
    __tablename__ = 'po_grn_lines'
    __table_args__ = {'extend_existing': True}
    case_cp  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    case_size  = Column(Integer  , nullable=True )
    delivered_qty  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    delivery_date  = Column(DateTime(timezone=True)  , nullable=True )
    delivery_note_ref  = Column(String(100)  , nullable=True )
    discount_price  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    exchange_rate  = Column(Numeric(precision=12, scale=6) ,default=1  , nullable=True )
    gl_account_code  = Column(BigInteger  , nullable=True )
    grn_line_desc  = Column(String(1000)  , nullable=True )
    grn_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    grn_line_notes  = Column(String(1000)  , nullable=True )
    grn_status  = Column(String(30)  , nullable=True )
    gross_unit_weight  = Column(Numeric(precision=12, scale=6)  , nullable=True )
    ingredient_total  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    item_id  = Column(BigInteger  , nullable=False )
    item_name  = Column(String(100)  , nullable=True )
    landing_net_price  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    landing_unit_price  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    line_type  = Column(String(30) ,default='ITEM'  , nullable=True )
    location_id  = Column(BigInteger  , nullable=True )
    net_ingredient  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    net_price  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    pallet_id  = Column(BigInteger , ForeignKey('inv_pallets.pallet_id')  , nullable=True )
    pallet_number  = Column(String(100)  , nullable=True )
    pgh_grn_id  = Column(BigInteger , ForeignKey('po_grn_headers.grn_id')  , nullable=False )
    po_header_id  = Column(BigInteger  , nullable=True )
    po_line_id  = Column(BigInteger  , nullable=True )
    qty_delivered_cases  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_delivered_units  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_difference  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_distributed_units  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_goodsin  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    qty_instock  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_invoiced_units  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_ordered_cases  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_ordered_units  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_received_cases  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_received_units  = Column(Numeric(precision=12, scale=3)  , nullable=False )
    qty_rejected  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_reserved  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_reserved_units  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    reason_for_difference  = Column(String(30)  , nullable=True )
    reason_for_rejection  = Column(String(30)  , nullable=True )
    received_date  = Column(DateTime(timezone=True)  , nullable=True )
    rejection_sub_location_id  = Column(BigInteger  , nullable=True )
    rejection_update_stock  = Column(String(1) ,default='Y'  , nullable=True )
    sl_no  = Column(Integer  , nullable=True )
    sub_location_id  = Column(BigInteger  , nullable=True )
    sup_product_code  = Column(String(100)  , nullable=True )
    tax_code_id  = Column(BigInteger , ForeignKey('cmn_tax_codes.tax_code_id')  , nullable=True )
    tax_price  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    tax_rate  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    unapproved_sub_location_id  = Column(BigInteger  , nullable=True )
    unit_cp  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    unit_volume  = Column(Numeric(precision=9, scale=3)  , nullable=True )
    volume_total  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    weight_total  = Column(Numeric(precision=12, scale=3)  , nullable=True )


class PoHeaders(Base, AuditColumns):
    __tablename__ = 'po_headers'
    __table_args__ = {'extend_existing': True}
    agreement_number  = Column(String(100)  , nullable=True )
    attribute1  = Column(String(2000)  , nullable=True )
    attribute2  = Column(String(2000)  , nullable=True )
    billto_location_id  = Column(BigInteger  , nullable=True )
    buyer_id  = Column(BigInteger  , nullable=True )
    carriage_total  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    containers_by_volume  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    containers_by_weight  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    container_id  = Column(BigInteger  , nullable=True )
    container_name  = Column(String(100)  , nullable=True )
    currency_code  = Column(String(10)  , nullable=True )
    customer_id  = Column(BigInteger  , nullable=True )
    discount_total  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    gl_account_id  = Column(BigInteger , ForeignKey('gl_account_codes.gl_account_id')  , nullable=True )
    gross_total  = Column(Numeric(precision=10, scale=2) ,default=0  , nullable=True )
    ingredient_total  = Column(BigInteger  , nullable=True )
    needby_date  = Column(DateTime(timezone=True)  , nullable=True )
    net_total  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    order_status  = Column(String(30)  , nullable=True )
    order_status_date  = Column(DateTime(timezone=True)  , nullable=True )
    orig_system_ref  = Column(String(30)  , nullable=True )
    po_date  = Column(DateTime(timezone=True)  , nullable=True )
    po_header_id  = Column(BigInteger, primary_key=True  , nullable=False )
    po_number  = Column(String(20)  , nullable=True, unique=True )
    po_type  = Column(String(30)  , nullable=True )
    promised_date  = Column(DateTime(timezone=True)  , nullable=True )
    revision_number  = Column(BigInteger ,default=0  , nullable=True )
    salorder_header_id  = Column(BigInteger  , nullable=True )
    shipto_address  = Column(String(240)  , nullable=True )
    shipto_city  = Column(String(100)  , nullable=True )
    shipto_contact  = Column(String(240)  , nullable=True )
    shipto_country_code  = Column(String(10)  , nullable=True )
    shipto_county  = Column(String(100)  , nullable=True )
    shipto_location_id  = Column(BigInteger  , nullable=True )
    shipto_phone  = Column(String(100)  , nullable=True )
    shipto_post_code  = Column(String(30)  , nullable=True )
    sub_location_id  = Column(BigInteger , ForeignKey('inv_sub_locations.sub_location_id')  , nullable=True )
    sup_supplier_id  = Column(BigInteger  , nullable=False )
    terms1  = Column(String(240)  , nullable=True )
    terms2  = Column(String(240)  , nullable=True )
    total_net_weight  = Column(BigInteger  , nullable=True )
    trans_category  = Column(String(30)  , nullable=True )
    update_stock  = Column(String(1) ,default='Y'  , nullable=True )
    update_stock_on_grn  = Column(String(1) ,default='Y'  , nullable=True )
    vat_total  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    volume_total  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    weight_total  = Column(Numeric(precision=14, scale=2)  , nullable=True )


class PoLines(Base, AuditColumns):
    __tablename__ = 'po_lines'
    __table_args__ = {'extend_existing': True}
    case_cp  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    case_size  = Column(Integer  , nullable=True )
    customer_id  = Column(BigInteger  , nullable=True )
    discount_price  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    exchange_rate  = Column(Numeric(precision=12, scale=6) ,default=1  , nullable=True )
    gl_account_code  = Column(BigInteger  , nullable=True )
    gl_account_id  = Column(BigInteger , ForeignKey('gl_account_codes.gl_account_id')  , nullable=True )
    gross_unit_weight  = Column(Numeric(precision=12, scale=6)  , nullable=True )
    ingredient_total  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    item_id  = Column(BigInteger  , nullable=False )
    item_name  = Column(String(100)  , nullable=True )
    line_type  = Column(String(30) ,default='ITEM'  , nullable=True )
    max_qty  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    min_qty  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    needby_date  = Column(DateTime(timezone=True)  , nullable=True )
    net_ingredient  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    net_price  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    order_status  = Column(String(30)  , nullable=True )
    orig_system_ref  = Column(String(30)  , nullable=True )
    poh_po_header_id  = Column(BigInteger  , nullable=False )
    po_line_desc  = Column(String(1000)  , nullable=True )
    po_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    po_line_notes  = Column(String(1000)  , nullable=True )
    promised_date  = Column(DateTime(timezone=True)  , nullable=True )
    qty_allocated  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_balance  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_free_units  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_goodsin  = Column(Numeric(precision=13, scale=3)  , nullable=True )
    qty_inorder  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_instock  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_invoiced_units  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_ordered_cases  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_ordered_units  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_reserved  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_reserved_units  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_similar_inorder  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_similar_stock  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    reorder_qty  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    revision_number  = Column(BigInteger ,default=0  , nullable=True )
    saloder_line_id  = Column(BigInteger  , nullable=True )
    salorder_header_id  = Column(BigInteger  , nullable=True )
    shipto_address  = Column(String(240)  , nullable=True )
    shipto_city  = Column(String(100)  , nullable=True )
    shipto_contact  = Column(String(240)  , nullable=True )
    shipto_country_code  = Column(String(10)  , nullable=True )
    shipto_county  = Column(String(100)  , nullable=True )
    shipto_phone  = Column(String(100)  , nullable=True )
    shipto_post_code  = Column(String(30)  , nullable=True )
    sl_no  = Column(Integer  , nullable=True )
    sup_product_code  = Column(String(100)  , nullable=True )
    tax_code_id  = Column(BigInteger , ForeignKey('cmn_tax_codes.tax_code_id')  , nullable=True )
    tax_price  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    tax_rate  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    unit_cp  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    unit_volume  = Column(Numeric(precision=9, scale=3)  , nullable=True )
    volume_total  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    weight_total  = Column(Numeric(precision=12, scale=3)  , nullable=True )


class PoOrderpadHeaders(Base, AuditColumns):
    __tablename__ = 'po_orderpad_headers'
    __table_args__ = {'extend_existing': True}
    batch_name  = Column(String(30)  , nullable=False )
    customer_id  = Column(BigInteger , ForeignKey('ar_customers.customer_id')  , nullable=True )
    deliverto_contact_id  = Column(BigInteger  , nullable=True )
    deliverto_customer_id  = Column(BigInteger  , nullable=True )
    discount_total  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    gross_total  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    ingredient_total  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    invoiceto_contact_id  = Column(BigInteger  , nullable=True )
    invoiceto_customer_id  = Column(BigInteger  , nullable=True )
    location_id  = Column(BigInteger , ForeignKey('inv_locations.location_id')  , nullable=True )
    net_total  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    orderpad_category  = Column(String(30) ,default='SALES'  , nullable=True )
    orderpad_date  = Column(DateTime(timezone=True), server_default=func.now() , nullable=True )
    orderpad_description  = Column(String(400)  , nullable=True )
    orderpad_header_id  = Column(BigInteger, primary_key=True  , nullable=False )
    orderpad_header_status  = Column(String(30) ,default='NEW'  , nullable=True )
    orderpad_header_status_date  = Column(DateTime(timezone=True), server_default=func.now() , nullable=True )
    orderpad_name  = Column(String(30)  , nullable=False )
    orderpad_type  = Column(String(30) ,default='SAELS'  , nullable=True )
    orig_sys_ref_header  = Column(String(50)  , nullable=True )
    po_header_id  = Column(BigInteger  , nullable=True )
    promised_date  = Column(DateTime(timezone=True)  , nullable=True )
    supplier_id  = Column(BigInteger , ForeignKey('ap_suppliers.supplier_id')  , nullable=False )
    tax_total  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    user_id  = Column(BigInteger ,default=-1  , nullable=True )
    volume_total  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    weight_total  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    #c_grnorderpadheaders  = relationship("GrnOrderpadHeaders")
    #c_grnorderpadlines  = relationship("GrnOrderpadLines")
    #c_poorderpadlines  = relationship("PoOrderpadLines")


class PoOrderpadLines(Base, AuditColumns):
    __tablename__ = 'po_orderpad_lines'
    __table_args__ = {'extend_existing': True}
    case_cp  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    case_size  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    discount_price  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    ingredient_total  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=False )
    item_name  = Column(String(400)  , nullable=True )
    item_number  = Column(String(50)  , nullable=True )
    net_ingredient  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    net_price  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    orderpad_header_id  = Column(BigInteger , ForeignKey('po_orderpad_headers.orderpad_header_id')  , nullable=False )
    orderpad_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    orderpad_line_status  = Column(String(30) ,default='NEW'  , nullable=True )
    orderpad_line_status_date  = Column(DateTime(timezone=True), server_default=func.now() , nullable=True )
    orig_sys_ref_header  = Column(String(50)  , nullable=True )
    orig_sys_ref_line  = Column(String(30)  , nullable=True )
    po_line_desc  = Column(String(1000)  , nullable=True )
    po_line_id  = Column(BigInteger  , nullable=True )
    po_line_notes  = Column(String(1000)  , nullable=True )
    promised_date  = Column(DateTime(timezone=True)  , nullable=True )
    qty_balance_cases  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_balance_units  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_cancelled_units  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_in_order  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_in_pad  = Column(Numeric(precision=12, scale=3)  , nullable=False )
    qty_in_pad_cases  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_in_stock  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_received_cases  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    qty_received_units  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    sl_no  = Column(BigInteger  , nullable=True )
    sup_product_code  = Column(String(100)  , nullable=True )
    tax_code_id  = Column(BigInteger  , nullable=True )
    tax_price  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    tax_rate  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    unit_cp  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    unit_volume  = Column(Numeric(precision=9, scale=3)  , nullable=True )
    unit_weight  = Column(Numeric(precision=12, scale=6)  , nullable=True )
    volume_total  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    weight_total  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    #c_grnorderpadlines  = relationship("GrnOrderpadLines")


class PriceTemplateHeaders(Base, AuditColumns):
    __tablename__ = 'price_template_headers'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1)  , nullable=True )
    add_default_barcode  = Column(String(1) ,default='N'  , nullable=True )
    description  = Column(String(2000)  , nullable=True )
    pricetemp_code  = Column(String(15)  , nullable=True )
    pricetemp_id  = Column(BigInteger, primary_key=True  , nullable=False )
    pricetemp_name  = Column(String(30)  , nullable=True )
    su_category  = Column(String(30)  , nullable=True )
    su_name_expression  = Column(String(1000)  , nullable=True )
    su_number_expression  = Column(String(1000)  , nullable=True )


class PriceTemplateLines(Base, AuditColumns):
    __tablename__ = 'price_template_lines'
    __table_args__ = {'extend_existing': True}
    description  = Column(String(400)  , nullable=True )
    price0  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    price1  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    price10  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    price2  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    price3  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    price4  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    price5  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    price6  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    price7  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    price8  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    price9  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    pricetemp_id  = Column(BigInteger  , nullable=False )
    pricetemp_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    price_type  = Column(String(30) ,default='VALUE'  , nullable=True )
    price_type_id  = Column(BigInteger  , nullable=True )
    sales_unit  = Column(BigInteger  , nullable=False )
    sl_no  = Column(BigInteger  , nullable=False )
    su_category  = Column(String(30) ,default='SALESUNIT'  , nullable=True )
    uom_id  = Column(BigInteger , ForeignKey('cmn_unit_of_measurements.uom_id')  , nullable=False )


class PriceUpdateitemcpHeaders(Base, AuditColumns):
    __tablename__ = 'price_updateitemcp_headers'
    __table_args__ = {'extend_existing': True}
    all_items  = Column(String(1)  , nullable=True )
    batch_name  = Column(String(30)  , nullable=True )
    category_id  = Column(BigInteger  , nullable=True )
    currency_code  = Column(String(10)  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    exchange_rate  = Column(Numeric(precision=22, scale=6)  , nullable=True )
    header_status  = Column(String(20)  , nullable=True )
    header_status_date  = Column(DateTime(timezone=True)  , nullable=True )
    name  = Column(String(150)  , nullable=False )
    price_type  = Column(String(30)  , nullable=True )
    price_value  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    query_string  = Column(String(4000)  , nullable=True )
    sp10_value  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    sp11_value  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    sp12_value  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    sp1_value  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    sp2_value  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    sp3_value  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    sp4_value  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    sp5_value  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    sp6_value  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    sp7_value  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    sp8_value  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    sp9_value  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    sub_category_id  = Column(BigInteger  , nullable=True )
    supplier_id  = Column(BigInteger  , nullable=True )
    updateitemcp_header_id  = Column(BigInteger, primary_key=True  , nullable=False )
    updateitem_source  = Column(String(30) ,default='COSTPRICE'  , nullable=True )
    #c_priceupdateitemcplines  = relationship("PriceUpdateitemcpLines")
    #c_priceupdatespprices  = relationship("PriceUpdatespPrices")


class PriceUpdateitemcpLines(Base, AuditColumns):
    __tablename__ = 'price_updateitemcp_lines'
    __table_args__ = {'extend_existing': True}
    currency_code  = Column(String(10)  , nullable=True )
    exchange_rate  = Column(Numeric(precision=22, scale=6)  , nullable=True )
    item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=False )
    line_status  = Column(String(20)  , nullable=True )
    line_status_date  = Column(DateTime(timezone=True)  , nullable=True )
    new_alternateunitcp  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    new_averagecp  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    new_basecp  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    old_alternateunitcp  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    old_averagecp  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    old_basecp  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    price_type  = Column(String(30)  , nullable=True )
    price_value  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    qty_instock  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    updateitemcp_header_id  = Column(BigInteger , ForeignKey('price_updateitemcp_headers.updateitemcp_header_id')  , nullable=False )
    updateitemcp_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    #c_priceupdatespprices  = relationship("PriceUpdatespPrices")


class PriceUpdatespPrices(Base, AuditColumns):
    __tablename__ = 'price_updatesp_prices'
    __table_args__ = {'extend_existing': True}
    item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=False )
    new_price_exltax  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    new_price_inctax  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    old_markup  = Column(Numeric(precision=12, scale=3)  , nullable=True )
    old_price_exltax  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    old_price_inctax  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    price_type_id  = Column(BigInteger , ForeignKey('inv_price_types.price_type_id')  , nullable=False )
    price_value  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    sales_unit  = Column(BigInteger  , nullable=False )
    su_id  = Column(BigInteger , ForeignKey('inv_item_sales_units.su_id')  , nullable=False )
    updateitemcp_header_id  = Column(BigInteger , ForeignKey('price_updateitemcp_headers.updateitemcp_header_id')  , nullable=True )
    updateitemcp_line_id  = Column(BigInteger , ForeignKey('price_updateitemcp_lines.updateitemcp_line_id')  , nullable=True )
    updateprice_type  = Column(String(30)  , nullable=True )
    updatesp_id  = Column(BigInteger, primary_key=True  , nullable=False )


class PrPricelistHeaders(Base, AuditColumns):
    __tablename__ = 'pr_pricelist_headers'
    __table_args__ = {'extend_existing': True}
    all_items  = Column(String(1) ,default='N'  , nullable=True )
    attribute1  = Column(String(2000)  , nullable=True )
    attribute2  = Column(String(2000)  , nullable=True )
    currency_code  = Column(String(10)  , nullable=True )
    date_from  = Column(DateTime(timezone=True)  , nullable=True )
    date_to  = Column(DateTime(timezone=True)  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    price  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    pricelist_group_code  = Column(String(30)  , nullable=False )
    pricelist_header_id  = Column(BigInteger, primary_key=True  , nullable=False )
    pricelist_name  = Column(String(100)  , nullable=False )
    pricelist_usage_code  = Column(String(30)  , nullable=False )
    price_type  = Column(String(10)  , nullable=True )
    price_type_id  = Column(BigInteger  , nullable=True )
    sales_unit  = Column(BigInteger ,default=1  , nullable=True )
    #c_arcustomerpricelists  = relationship("ArCustomerPricelists")
    #c_invlocationpricelists  = relationship("InvLocationPricelists")
    #c_prpricelistlines  = relationship("PrPricelistLines")


class PrPricelistLines(Base, AuditColumns):
    __tablename__ = 'pr_pricelist_lines'
    __table_args__ = {'extend_existing': True}
    category_id  = Column(BigInteger , ForeignKey('inv_item_categories.category_id')  , nullable=False )
    item_id  = Column(BigInteger , ForeignKey('inv_item_masters.item_id')  , nullable=True )
    price  = Column(Numeric(precision=14, scale=2)  , nullable=True )
    pricelist_header_id  = Column(BigInteger , ForeignKey('pr_pricelist_headers.pricelist_header_id')  , nullable=True )
    pricelist_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    price_type  = Column(String(10)  , nullable=False )
    price_type_id  = Column(BigInteger , ForeignKey('inv_price_types.price_type_id')  , nullable=False )
    sales_unit  = Column(BigInteger ,default=1  , nullable=True )
    sub_category_id  = Column(BigInteger , ForeignKey('inv_item_sub_categories.sub_category_id')  , nullable=True )


class SysAttachmentHeaders(Base, AuditColumns):
    __tablename__ = 'sys_attachment_headers'
    __table_args__ = {'extend_existing': True}
    access_level  = Column(String(30)  , nullable=True )
    attachment_category  = Column(String(30)  , nullable=True )
    attachment_id  = Column(BigInteger, primary_key=True  , nullable=False )
    default_text  = Column(String(4000)  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    name  = Column(String(30)  , nullable=True )
    source_id1  = Column(BigInteger  , nullable=True )
    source_id2  = Column(BigInteger  , nullable=True )
    source_object  = Column(String(150)  , nullable=False )
    source_ref1  = Column(String(30)  , nullable=True )
    source_ref2  = Column(String(30)  , nullable=True )


class SysAttachmentLines(Base, AuditColumns):
    __tablename__ = 'sys_attachment_lines'
    __table_args__ = {'extend_existing': True}
    attachment_id  = Column(BigInteger  , nullable=False )
    attachment_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    concatenated_columnlist  = Column(String(4000)  , nullable=True )
    delimiter  = Column(String(1) ,default=','  , nullable=True )
    enclosedby  = Column(String(1) ,default='$'  , nullable=True )
    file_directory  = Column(String(100)  , nullable=True )
    file_name  = Column(String(100)  , nullable=True )
    file_type  = Column(String(10) ,default='.csv'  , nullable=True )
    from_clause  = Column(String(400)  , nullable=True )
    groupby_clause  = Column(String(400)  , nullable=True )
    header_row  = Column(String(4000)  , nullable=True )
    line_text  = Column(String(4000)  , nullable=True )
    line_type  = Column(String(30)  , nullable=True )
    name  = Column(String(30)  , nullable=False )
    orderby_clause  = Column(String(400)  , nullable=True )
    select_clause  = Column(String(4000)  , nullable=True )
    where_clause  = Column(String(2000)  , nullable=True )


class SysControlHeaders(Base, AuditColumns):
    __tablename__ = 'sys_control_headers'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    control_header_id  = Column(BigInteger, primary_key=True  , nullable=False )
    control_type  = Column(String(30) ,default='USER'  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    identifier  = Column(String(30)  , nullable=False )


class SysControlLines(Base, AuditColumns):
    __tablename__ = 'sys_control_lines'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    control_header_id  = Column(BigInteger  , nullable=False )
    control_line_id  = Column(BigInteger , ForeignKey('sys_control_lines.control_line_id'), primary_key=True  , nullable=False )
    control_line_type  = Column(String(30) ,default='PRIVILEGE'  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    identifier  = Column(String(30)  , nullable=True )
    param_value  = Column(String(400)  , nullable=True )
    program_name  = Column(String(240)  , nullable=True )
    program_type  = Column(String(30) ,default='FORM'  , nullable=True )
    sl_no  = Column(Integer  , nullable=True )
    #c_syscontrollines  = relationship("SysControlLines")
    #c_sysusercontrols  = relationship("SysUserControls")


class SysJobParamValues(Base, AuditColumns):
    __tablename__ = 'sys_job_param_values'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1)  , nullable=True )
    job_id  = Column(BigInteger , ForeignKey('sys_schedule_jobs.job_id')  , nullable=True )
    paramvalue_id  = Column(BigInteger, primary_key=True  , nullable=False )
    paramvalue_source  = Column(String(30)  , nullable=False )
    paramvalue_source_id  = Column(BigInteger  , nullable=False )
    param_id  = Column(BigInteger  , nullable=True )
    param_value  = Column(String(4000)  , nullable=True )


class SysJobQueue(Base, AuditColumns):
    __tablename__ = 'sys_job_queue'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    email  = Column(String(2000)  , nullable=True )
    email_bcc  = Column(String(4000)  , nullable=True )
    end_date  = Column(DateTime(timezone=True)  , nullable=True )
    increase_date_params  = Column(String(1) ,default='Y'  , nullable=True )
    job_text  = Column(String(4000)  , nullable=True )
    last_run_date  = Column(DateTime(timezone=True)  , nullable=True )
    max_times_to_run  = Column(BigInteger  , nullable=True )
    next_run_date  = Column(DateTime(timezone=True)  , nullable=True )
    parameters  = Column(String(4000)  , nullable=True )
    program_name  = Column(String(100)  , nullable=True )
    program_source  = Column(String(100)  , nullable=True )
    program_source_id  = Column(BigInteger  , nullable=True )
    queue_category_code  = Column(String(30) ,default='GENERAL'  , nullable=True )
    queue_description  = Column(String(1000)  , nullable=True )
    queue_id  = Column(BigInteger, primary_key=True  , nullable=False )
    queue_name  = Column(String(100)  , nullable=True )
    queue_type  = Column(String(30) ,default='PLSQL'  , nullable=True )
    repeat  = Column(String(1) ,default='Y'  , nullable=True )
    repeat_unit  = Column(BigInteger  , nullable=True )
    report_date_criteria  = Column(String(100)  , nullable=True )
    report_date_from  = Column(DateTime(timezone=True)  , nullable=True )
    report_date_to  = Column(DateTime(timezone=True)  , nullable=True )
    report_file_name  = Column(String(400)  , nullable=True )
    run_count  = Column(BigInteger  , nullable=True )
    schedule_id  = Column(BigInteger  , nullable=True )
    schedule_type  = Column(String(100)  , nullable=True )
    skip_text  = Column(String(400)  , nullable=True )
    start_date  = Column(DateTime(timezone=True)  , nullable=True )


class SysLastsavedValues(Base, AuditColumns):
    __tablename__ = 'sys_lastsaved_values'
    __table_args__ = {'extend_existing': True}
    data_type  = Column(String(30) ,default='CHAR'  , nullable=True )
    description  = Column(String(400)  , nullable=True )
    identifier  = Column(String(30)  , nullable=False )
    lastsaved_value  = Column(String(400)  , nullable=True )
    location_id  = Column(BigInteger  , nullable=True )
    saved_id  = Column(BigInteger, primary_key=True  , nullable=False )
    user_id  = Column(BigInteger  , nullable=True )


class SysLoggedinsessions(Base, AuditColumns):
    __tablename__ = 'sys_loggedinsessions'
    __table_args__ = {'extend_existing': True}
    current_operation  = Column(String(400)  , nullable=True )
    description  = Column(String(400)  , nullable=True )
    identifier  = Column(String(30)  , nullable=False )
    last_login_date  = Column(DateTime(timezone=True)  , nullable=True )
    location_id  = Column(BigInteger  , nullable=True )
    parameters  = Column(String(4000)  , nullable=True )
    session_id  = Column(BigInteger, primary_key=True  , nullable=False )
    terminal_name  = Column(String(100)  , nullable=True )
    user_id  = Column(BigInteger  , nullable=True )


class SysLoginAudit(Base, AuditColumns):
    __tablename__ = 'sys_login_audit'
    __table_args__ = {'extend_existing': True}
    location_id  = Column(BigInteger  , nullable=True )
    location_name  = Column(String(240)  , nullable=True )
    login_audit_id  = Column(BigInteger, primary_key=True  , nullable=False )
    login_date  = Column(DateTime(timezone=True)  , nullable=True )
    logoff_date  = Column(DateTime(timezone=True)  , nullable=True )
    session_id  = Column(BigInteger  , nullable=True )
    user_id  = Column(BigInteger  , nullable=True )
    user_name  = Column(String(100)  , nullable=True )


class SysLogHeaders(Base, AuditColumns):
    __tablename__ = 'sys_log_headers'
    __table_args__ = {'extend_existing': True}
    location_id  = Column(BigInteger  , nullable=True )
    log_date  = Column(DateTime(timezone=True)  , nullable=False )
    log_description  = Column(String(240)  , nullable=True )
    log_header_id  = Column(BigInteger, primary_key=True  , nullable=False )
    log_name  = Column(String(30)  , nullable=False )
    log_result  = Column(String(2000)  , nullable=True )
    log_type  = Column(String(100)  , nullable=True )


class SysLogLines(Base, AuditColumns):
    __tablename__ = 'sys_log_lines'
    __table_args__ = {'extend_existing': True}
    log_header_id  = Column(BigInteger  , nullable=False )
    log_line_desc  = Column(String(100)  , nullable=True )
    log_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    log_line_long_desc  = Column(String(2000)  , nullable=True )
    log_line_status  = Column(String(30)  , nullable=True )
    log_line_tag  = Column(String(30)  , nullable=True )
    object_id1  = Column(BigInteger  , nullable=True )
    object_id2  = Column(BigInteger  , nullable=True )
    object_id3  = Column(BigInteger  , nullable=True )
    object_name  = Column(String(30)  , nullable=True )
    object_ref1  = Column(String(100)  , nullable=True )
    object_ref2  = Column(String(100)  , nullable=True )
    object_ref3  = Column(String(100)  , nullable=True )


class SysNotificationEvents(Base, AuditColumns):
    __tablename__ = 'sys_notification_events'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    description  = Column(String(240)  , nullable=True )
    event_id  = Column(BigInteger, primary_key=True  , nullable=False )
    event_type  = Column(String(30) ,default='WORKLIST'  , nullable=True )
    identifier  = Column(String(30)  , nullable=True )
    notification_group  = Column(String(30)  , nullable=True )
    subject_prefix  = Column(String(100)  , nullable=True )
    table_view_name  = Column(String(30)  , nullable=True )
    #c_sysnotificationrecipients  = relationship("SysNotificationRecipients")


class SysNotificationRecipients(Base, AuditColumns):
    __tablename__ = 'sys_notification_recipients'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    email  = Column(String(2000)  , nullable=True )
    event_id  = Column(BigInteger , ForeignKey('sys_notification_events.event_id')  , nullable=True )
    event_line_id  = Column(BigInteger, primary_key=True  , nullable=False )
    line_type  = Column(String(30) ,default='WORKLIST'  , nullable=True )
    responsibility_id  = Column(BigInteger , ForeignKey('cmn_responsibilities.resp_id')  , nullable=True )
    responsibility_name  = Column(String(30)  , nullable=True )
    sl_no  = Column(Integer  , nullable=False )
    subject_prefix  = Column(String(100)  , nullable=True )
    user_id  = Column(BigInteger , ForeignKey('cmn_users.user_id')  , nullable=True )
    user_name  = Column(String(30)  , nullable=True )


class SysPrograms(Base, AuditColumns):
    __tablename__ = 'sys_programs'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    identifier  = Column(String(30)  , nullable=True )
    program_category  = Column(String(30)  , nullable=True )
    program_description  = Column(String(240)  , nullable=True )
    program_id  = Column(BigInteger, primary_key=True  , nullable=False )
    program_name  = Column(String(30)  , nullable=False )
    program_type  = Column(String(30)  , nullable=True )
    #c_cmnprintermatrix  = relationship("CmnPrinterMatrix")


class SysScheduleJobs(Base, AuditColumns):
    __tablename__ = 'sys_schedule_jobs'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    description  = Column(String(400)  , nullable=True )
    end_date  = Column(DateTime(timezone=True)  , nullable=True )
    job_id  = Column(BigInteger, primary_key=True  , nullable=False )
    job_name  = Column(String(30)  , nullable=False )
    job_short_name  = Column(String(20)  , nullable=True )
    job_type  = Column(String(30)  , nullable=False )
    sl_no  = Column(Integer  , nullable=False )
    start_date  = Column(DateTime(timezone=True)  , nullable=True )
    what_to_run  = Column(String(400)  , nullable=True )
    #c_sysjobparamvalues  = relationship("SysJobParamValues")


class SysUiitemattrs(Base, AuditColumns):
    __tablename__ = 'sys_uiitemattrs'
    __table_args__ = {'extend_existing': True}
    attribute_id  = Column(BigInteger  , nullable=False )
    attribute_value  = Column(String(1000)  , nullable=True )
    item_attr_id  = Column(BigInteger, primary_key=True  , nullable=False )
    item_id  = Column(BigInteger , ForeignKey('sys_uiitems.item_id')  , nullable=True )
    user_id  = Column(BigInteger  , nullable=True )


class SysUiitems(Base, AuditColumns):
    __tablename__ = 'sys_uiitems'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    description  = Column(String(400)  , nullable=True )
    item_id  = Column(BigInteger, primary_key=True  , nullable=False )
    item_style  = Column(String(100)  , nullable=True )
    item_type  = Column(String(30) ,default='ITEM'  , nullable=True )
    name  = Column(String(100)  , nullable=True )
    region_id  = Column(BigInteger , ForeignKey('sys_uiregions.region_id')  , nullable=False )
    sl_no  = Column(BigInteger  , nullable=True )
    user_id  = Column(BigInteger  , nullable=True )
    #c_sysuiitemattrs  = relationship("SysUiitemattrs")


class SysUiregions(Base, AuditColumns):
    __tablename__ = 'sys_uiregions'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    description  = Column(String(2000)  , nullable=True )
    inherit_to  = Column(String(2000)  , nullable=True )
    item_id  = Column(BigInteger  , nullable=True )
    name  = Column(String(30)  , nullable=False )
    parent_region_id  = Column(BigInteger  , nullable=True )
    region_id  = Column(BigInteger, primary_key=True  , nullable=False )
    ui_type  = Column(String(30) ,default='VB.net'  , nullable=True )
    #c_sysuiitems  = relationship("SysUiitems")


class SysUserControls(Base, AuditColumns):
    __tablename__ = 'sys_user_controls'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    control_header_id  = Column(BigInteger  , nullable=False )
    control_line_id  = Column(BigInteger , ForeignKey('sys_control_lines.control_line_id')  , nullable=False )
    control_type  = Column(String(30) ,default='ALLOW'  , nullable=True )
    user_control_id  = Column(BigInteger, primary_key=True  , nullable=False )
    user_group  = Column(String(30)  , nullable=False )


class SysWorklist(Base, AuditColumns):
    __tablename__ = 'sys_worklist'
    __table_args__ = {'extend_existing': True}
    action_text  = Column(String(30)  , nullable=True )
    action_type  = Column(String(30)  , nullable=True )
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    attribute5  = Column(String(240)  , nullable=True )
    attribute6  = Column(String(240)  , nullable=True )
    from_whom  = Column(String(30)  , nullable=True )
    source  = Column(String(100)  , nullable=True )
    source_id1  = Column(String(30)  , nullable=True )
    source_id2  = Column(String(30)  , nullable=True )
    status  = Column(String(30)  , nullable=True )
    status_text  = Column(String(240)  , nullable=True )
    subject  = Column(String(240)  , nullable=False )
    text  = Column(String(4000)  , nullable=True )
    to_type  = Column(String(30) ,default='USER'  , nullable=True )
    to_whom  = Column(String(30)  , nullable=True )
    worklist_id  = Column(BigInteger, primary_key=True  , nullable=False )
    worklist_type  = Column(String(30) ,default='FYI'  , nullable=True )


class TpStockLines(Base, AuditColumns):
    __tablename__ = 'tp_stock_lines'
    __table_args__ = {'extend_existing': True}
    barcode  = Column(String(50), nullable=True )
    item_id  = Column(BigInteger, nullable=True )
    item_name  = Column(String(400), nullable=True )
    item_number  = Column(String(50), nullable=True )
    my_cost  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    price_difference_flag  = Column(String(30), nullable=True )
    quantity  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    tp_source_cost  = Column(Numeric(precision=12, scale=2)  , nullable=True )
    #tp_source_id  = Column(BigInteger , ForeignKey('tp_stock_sources.tp_source_id')  , nullable=False )
    tp_source_id  = Column(BigInteger, nullable=True)
    tp_status  = Column(String(30), nullable=True)
    tp_stock_line_id  = Column(BigInteger, primary_key=True  , nullable=False)
    location_id = Column(BigInteger,nullable=False)
    location_name = Column(String(100), nullable=False)
    location_source = Column(String(100), nullable=True)
    location_source_id = Column(String(50),nullable=True)
    source_item_id = Column(String(50),nullable=True)
    tp_uk = Column(String(150),nullable=False)



class TpStockSources(Base, AuditColumns):
    __tablename__ = 'tp_stock_sources'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    date_active_from  = Column(DateTime(timezone=True)  , nullable=True )
    date_active_to  = Column(DateTime(timezone=True)  , nullable=True )
    supplier_id  = Column(BigInteger  , nullable=True )
    tp_source_desc  = Column(String(400)  , nullable=True )
    tp_source_id  = Column(BigInteger, primary_key=True  , nullable=False )
    tp_source_name  = Column(String(30)  , nullable=False )
    #c_tpstocklines  = relationship("TpStockLines")


class WwwNodes(Base, AuditColumns):
    __tablename__ = 'www_nodes'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    attribute5  = Column(String(240)  , nullable=True )
    attribute6  = Column(String(240)  , nullable=True )
    category  = Column(String(240)  , nullable=True )
    date_active_from  = Column(DateTime(timezone=True)  , nullable=True )
    date_active_to  = Column(DateTime(timezone=True)  , nullable=True )
    language_code  = Column(String(10)  , nullable=True )
    sl_no  = Column(BigInteger ,default=1  , nullable=True )
    source_node_id  = Column(String(30)  , nullable=False )
    source_node_path  = Column(String(4000)  , nullable=False )
    sub_category  = Column(String(240)  , nullable=True )
    www_node_id  = Column(BigInteger, primary_key=True  , nullable=False )
    www_source_id  = Column(BigInteger , ForeignKey('www_sources.www_source_id')  , nullable=False )
    www_sub_source_id  = Column(BigInteger , ForeignKey('www_sub_sources.www_sub_source_id')  , nullable=True )


class WwwSources(Base, AuditColumns):
    __tablename__ = 'www_sources'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    attribute5  = Column(String(240)  , nullable=True )
    attribute6  = Column(String(240)  , nullable=True )
    date_active_from  = Column(DateTime(timezone=True)  , nullable=True )
    date_active_to  = Column(DateTime(timezone=True)  , nullable=True )
    www_source_desc  = Column(String(400)  , nullable=True )
    www_source_id  = Column(BigInteger, primary_key=True  , nullable=False )
    www_source_name  = Column(String(100)  , nullable=False )
    #c_wwwnodes  = relationship("WwwNodes")
    #c_wwwsubsources  = relationship("WwwSubSources")


class WwwSubSources(Base, AuditColumns):
    __tablename__ = 'www_sub_sources'
    __table_args__ = {'extend_existing': True}
    active  = Column(String(1) ,default='Y'  , nullable=True )
    attribute1  = Column(String(240)  , nullable=True )
    attribute2  = Column(String(240)  , nullable=True )
    attribute3  = Column(String(240)  , nullable=True )
    attribute4  = Column(String(240)  , nullable=True )
    attribute5  = Column(String(240)  , nullable=True )
    attribute6  = Column(String(240)  , nullable=True )
    country_code  = Column(String(10) , ForeignKey('cmn_countries.country_code')  , nullable=True )
    date_active_from  = Column(DateTime(timezone=True)  , nullable=True )
    date_active_to  = Column(DateTime(timezone=True)  , nullable=True )
    language_code  = Column(String(10) , ForeignKey('cmn_languages.language_code')  , nullable=True )
    sl_no  = Column(BigInteger ,default=1  , nullable=True )
    sub_source_name  = Column(String(30)  , nullable=True )
    www_source_id  = Column(BigInteger , ForeignKey('www_sources.www_source_id')  , nullable=False )
    www_sub_source_id  = Column(BigInteger, primary_key=True  , nullable=False )
    #c_wwwnodes  = relationship("WwwNodes")

